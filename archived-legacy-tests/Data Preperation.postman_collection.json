{
  "info": {
    "_postman_id": "1987b10e-dacb-4149-b38c-f2562a556745",
    "name": "Data Preperation",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Pain001",
      "item": [
        {
          "name": "AM-634 Test 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Incoming & Outgoing messages match\", function () {\r",
                  "    pm.expect(responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.PmtId.EndToEndId).to.eq(\"b51ec535-ee48-4575-b6a9-ead2955b8069\");\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test debtor fields pseudonyms\", function () {\r",
                  "    pm.expect(responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id).to.eq(\"6793245d1b205bf4edb97ab17b6164b160893c433fc10ad4fdc618721edc9604\");\r",
                  "    pm.expect(responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.SchmeNm.Prtry).to.eq(\"PSEUDO\");\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test creditor fields pseudonyms\", function () {\r",
                  "    pm.expect(responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id).to.eq(\"1123cc025752ab7dd848a7363dc21026769e80ffbef6e5c490863143149cfee8\");\r",
                  "    pm.expect(responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.SchmeNm.Prtry).to.eq(\"PSEUDO\");\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"2669e349-500d-44ba-9e27-7767a16608a0\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27783078685\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"PASSPORT\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27782722305\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "AM-634 Test 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header:{'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}`},\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR doc IN pseudonyms FILTER doc.pseudonym == '${pm.response.json().CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id}' RETURN doc`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if debtor pseudonym exists`, function () {\r",
                  "        if (err)\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else\r",
                  "                pm.expect(arangoRes.result).to.length(1);\r",
                  "        }\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header:{'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}`},\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR doc IN pseudonyms FILTER doc.pseudonym == '${pm.response.json().CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id}' RETURN doc`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if creditor pseudonym exists`, function () {\r",
                  "        if (err)\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else\r",
                  "                pm.expect(arangoRes.result).to.length(1);\r",
                  "        }\r",
                  "    });\r",
                  "});\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"2669e349-500d-44ba-9e27-7767a16608a0\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"{{$guid}}\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"PASSPORT\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"{{$guid}}\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "Test 1 & 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Incoming & Outgoing messages match\", function () {\r",
                  "    const responseJson = pm.response.json();\r",
                  "    pm.expect(responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.PmtId.EndToEndId).to.eq(\"b51ec535-ee48-4575-b6a9-ead2955b8069\");\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"2669e349-500d-44ba-9e27-7767a16608a0\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27783078685\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"PASSPORT\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27782722305\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "AM-970 New Debtor New Creditor",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "const arangourl = pm.environment.get(\"arangourl\")\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN transactionRelationship FILTER i._key == \"${responseJson.CstmrCdtTrfInitn.GrpHdr.MsgId}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if transaction relationship edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(error);\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._from);\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._to);\r",
                  "                pm.sendRequest({\r",
                  "                    url: `${arangourl}/_db/pseudonyms/_api/cursor`,\r",
                  "                    method: 'POST',\r",
                  "                    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "                    body: {\r",
                  "                        mode: 'raw',\r",
                  "                        raw: JSON.stringify({\r",
                  "                            query: `FOR i IN accounts FILTER i._id == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id}\" OR i._id == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id}\" RETURN i`\r",
                  "                        })\r",
                  "                    }\r",
                  "                }, function (err, res) {\r",
                  "                    pm.test(`Check if debtor and creditor nodes were created`, function () {\r",
                  "                        if (err) {\r",
                  "                            console.log(error);\r",
                  "                            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "                        }\r",
                  "                        else {\r",
                  "                            const arangoRes = res.json();\r",
                  "                            if (arangoRes.error === true)\r",
                  "                                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                            else\r",
                  "                                pm.expect(arangoRes.result).to.length(2);\r",
                  "                                 pm.sendRequest({\r",
                  "                    url: `${arangourl}/_db/pseudonyms/_api/cursor`,\r",
                  "                    method: 'POST',\r",
                  "                    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "                    body: {\r",
                  "                        mode: 'raw',\r",
                  "                        raw: JSON.stringify({\r",
                  "                            query: `FOR i IN accounts FILTER i._id == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id}\" OR i._id == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id}\" RETURN i`\r",
                  "                        })\r",
                  "                    }\r",
                  "                }, function (err, res) {\r",
                  "                    pm.test(`Check if transaction has geolocation data`, function () {\r",
                  "                        if (err) {\r",
                  "                            console.log(error);\r",
                  "                            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "                        }\r",
                  "                        else {\r",
                  "                            const arangoRes = res.json();\r",
                  "                            if (arangoRes.error === true)\r",
                  "                                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                            else\r",
                  "                                pm.expect(responseJson.CstmrCdtTrfInitn.SplmtryData.Envlp.Doc.InitgPty.Glctn).to.haveOwnProperty(\"Lat\");\r",
                  "                pm.expect(responseJson.CstmrCdtTrfInitn.SplmtryData.Envlp.Doc.InitgPty.Glctn).to.haveOwnProperty(\"Long\")\r",
                  "                        }\r",
                  "                    });\r",
                  "                });\r",
                  "                        }\r",
                  "                    });\r",
                  "                });\r",
                  "            }\r",
                  "        }\r",
                  "    });\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+2775118{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+2775118{{$randomInt}}\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"{{$guid}}\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+2771234{{$randomInt}}\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"{{$guid}}\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "host": [
                "{{NifiUrl}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "AM-970  Existing Debtor New Creditor",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "const arangourl = pm.environment.get(\"arangourl\")\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${arangourl}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN transactionRelationship FILTER i._key == \"${responseJson.CstmrCdtTrfInitn.GrpHdr.MsgId}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if transaction relationship edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(error);\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._from);\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._to);\r",
                  "                pm.sendRequest({\r",
                  "                    url: `${arangourl}/_db/pseudonyms/_api/cursor`,\r",
                  "                    method: 'POST',\r",
                  "                    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "                    body: {\r",
                  "                        mode: 'raw',\r",
                  "                        raw: JSON.stringify({\r",
                  "                            query: `FOR i IN accounts FILTER i._id == \"accounts/018b51cddba4354120f490e6d580821103aefec6345f57fc415784e1db471693\" OR i._id == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id}\" RETURN i`\r",
                  "                        })\r",
                  "                    }\r",
                  "                }, function (err, res) {\r",
                  "                    pm.test(`Check if debtor exist and if new creditor node was created`, function () {\r",
                  "                        if (err) {\r",
                  "                            console.log(err);\r",
                  "                            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "                        }\r",
                  "                        else {\r",
                  "                            const arangoRes = res.json();\r",
                  "                            if (arangoRes.error === true)\r",
                  "                                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                            else\r",
                  "                                pm.expect(arangoRes.result).to.length(2);\r",
                  "                                 pm.sendRequest({\r",
                  "                    url: `${arangourl}/_db/pseudonyms/_api/cursor`,\r",
                  "                    method: 'POST',\r",
                  "                    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "                    body: {\r",
                  "                        mode: 'raw',\r",
                  "                        raw: JSON.stringify({\r",
                  "                            query: `FOR i IN accounts FILTER i._id == \"accounts/018b51cddba4354120f490e6d580821103aefec6345f57fc415784e1db471693\" OR i._id == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id}\" RETURN i`\r",
                  "                        })\r",
                  "                    }\r",
                  "                }, function (err, res) {\r",
                  "                    pm.test(`Check if transaction contains geolocation data`, function () {\r",
                  "                        if (err) {\r",
                  "                            console.log(err);\r",
                  "                            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "                        }\r",
                  "                        else {\r",
                  "                            const arangoRes = res.json();\r",
                  "                            if (arangoRes.error === true)\r",
                  "                                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                            else\r",
                  "                                pm.expect(responseJson.CstmrCdtTrfInitn.SplmtryData.Envlp.Doc.InitgPty.Glctn).to.haveOwnProperty(\"Lat\");\r",
                  "                pm.expect(responseJson.CstmrCdtTrfInitn.SplmtryData.Envlp.Doc.InitgPty.Glctn).to.haveOwnProperty(\"Long\");\r",
                  "                        }\r",
                  "                    });\r",
                  "                });\r",
                  "                        }\r",
                  "                    });\r",
                  "                });\r",
                  "            }\r",
                  "        }\r",
                  "    });\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27751180000\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27751180000\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+2771234{{$randomInt}}\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"{{$guid}}\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "host": [
                "{{NifiUrl}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "AM-970 New Debtor Existing Creditor",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "const arangourl = pm.environment.get(\"arangourl\")\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${arangourl}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN transactionRelationship FILTER i._key == \"${responseJson.CstmrCdtTrfInitn.GrpHdr.MsgId}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if transaction relationship edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(error);\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._from);\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._to);\r",
                  "                pm.sendRequest({\r",
                  "                    url: `${arangourl}/_db/pseudonyms/_api/cursor`,\r",
                  "                    method: 'POST',\r",
                  "                    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "                    body: {\r",
                  "                        mode: 'raw',\r",
                  "                        raw: JSON.stringify({\r",
                  "                            query: `FOR i IN accounts FILTER i._id == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id}\" OR i._id == \"accounts/6439be2be408f12e7e2981e0e7a0dad6839487e333d600e0ff272c938b410b8f\" RETURN i`\r",
                  "                        })\r",
                  "                    }\r",
                  "                }, function (err, res) {\r",
                  "                    pm.test(`Check if new debtor was created and if creditor exists`, function () {\r",
                  "                        if (err) {\r",
                  "                            console.log(error);\r",
                  "                            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "                        }\r",
                  "                        else {\r",
                  "                            const arangoRes = res.json();\r",
                  "                            if (arangoRes.error === true)\r",
                  "                                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                            else\r",
                  "                                pm.expect(arangoRes.result).to.length(2);\r",
                  "                                pm.sendRequest({\r",
                  "                    url: `${arangourl}/_db/pseudonyms/_api/cursor`,\r",
                  "                    method: 'POST',\r",
                  "                    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "                    body: {\r",
                  "                        mode: 'raw',\r",
                  "                        raw: JSON.stringify({\r",
                  "                            query: `FOR i IN accounts FILTER i._id == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id}\" OR i._id == \"accounts/6439be2be408f12e7e2981e0e7a0dad6839487e333d600e0ff272c938b410b8f\" RETURN i`\r",
                  "                        })\r",
                  "                    }\r",
                  "                }, function (err, res) {\r",
                  "                    pm.test(`Check if transaction has geolocation data`, function () {\r",
                  "                        if (err) {\r",
                  "                            console.log(error);\r",
                  "                            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "                        }\r",
                  "                        else {\r",
                  "                            const arangoRes = res.json();\r",
                  "                            if (arangoRes.error === true)\r",
                  "                                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                            else\r",
                  "                                pm.expect(responseJson.CstmrCdtTrfInitn.SplmtryData.Envlp.Doc.InitgPty.Glctn).to.haveOwnProperty(\"Lat\");\r",
                  "                pm.expect(responseJson.CstmrCdtTrfInitn.SplmtryData.Envlp.Doc.InitgPty.Glctn).to.haveOwnProperty(\"Long\");\r",
                  "                                \r",
                  "                        }\r",
                  "                    });\r",
                  "                });\r",
                  "                                \r",
                  "                        }\r",
                  "                    });\r",
                  "                });\r",
                  "            }\r",
                  "        }\r",
                  "    });\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "GeJj2BzCC2VNZ3zdMcE5",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "frm",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+2775118{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+2775118{{$randomInt}}\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"{{$guid}}\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+277830780000\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+277830780000\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "host": [
                "{{NifiUrl}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "AM-970 Existing Debtor Existing Creditor",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "const arangourl = pm.environment.get(\"arangourl\");\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${arangourl}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN transactionRelationship FILTER i._key == \"${responseJson.CstmrCdtTrfInitn.GrpHdr.MsgId}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if transaction relationship edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(error);\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._from);\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._to);\r",
                  "                pm.sendRequest({\r",
                  "                    url: `${arangourl}/_db/pseudonyms/_api/cursor`,\r",
                  "                    method: 'POST',\r",
                  "                    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "                    body: {\r",
                  "                        mode: 'raw',\r",
                  "                        raw: JSON.stringify({\r",
                  "                            query: `FOR i IN accounts FILTER i._id == \"accounts/87073b737a44e276a0d19d82de934982a8dd20e8888f7d7ae53a24a1f0fab8f0\" OR i._id == \"accounts/d2471686ecbedc5fec9b600540d9233c52a96fb13e76fae5b01dc8783cf2103c\" RETURN i`\r",
                  "                        })\r",
                  "                    }\r",
                  "                }, function (err, res) {\r",
                  "                    pm.test(`Check if debtor and creditor nodes exist`, function () {\r",
                  "                        if (err) {\r",
                  "                            console.log(error);\r",
                  "                            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "                        }\r",
                  "                        else {\r",
                  "                            const arangoRes = res.json();\r",
                  "                            if (arangoRes.error === true)\r",
                  "                                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                            else\r",
                  "                                 pm.sendRequest({\r",
                  "                    url: `${arangourl}/_db/pseudonyms/_api/cursor`,\r",
                  "                    method: 'POST',\r",
                  "                    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "                    body: {\r",
                  "                        mode: 'raw',\r",
                  "                        raw: JSON.stringify({\r",
                  "                            query: `FOR i IN accounts FILTER i._id == \"accounts/87073b737a44e276a0d19d82de934982a8dd20e8888f7d7ae53a24a1f0fab8f0\" OR i._id == \"accounts/d2471686ecbedc5fec9b600540d9233c52a96fb13e76fae5b01dc8783cf2103c\" RETURN i`\r",
                  "                        })\r",
                  "                    }\r",
                  "                }, function (err, res) {\r",
                  "                    pm.test(`Check if transaction has geolocation data`, function () {\r",
                  "                        if (err) {\r",
                  "                            console.log(error);\r",
                  "                            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "                        }\r",
                  "                        else {\r",
                  "                            const arangoRes = res.json();\r",
                  "                            if (arangoRes.error === true)\r",
                  "                                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                            else\r",
                  "                                pm.expect(responseJson.CstmrCdtTrfInitn.SplmtryData.Envlp.Doc.InitgPty.Glctn).to.haveOwnProperty(\"Lat\");\r",
                  "                pm.expect(responseJson.CstmrCdtTrfInitn.SplmtryData.Envlp.Doc.InitgPty.Glctn).to.haveOwnProperty(\"Long\");\r",
                  "                        }\r",
                  "                    });\r",
                  "                });\r",
                  "                        }\r",
                  "                    });\r",
                  "                });\r",
                  "            }\r",
                  "        }\r",
                  "    });\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27751185444\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"Existing Debtor\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27751185444\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"Existing Debtor\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27712345444\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"Existing Creditor\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27712345444\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"Existing Creditor\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "host": [
                "{{NifiUrl}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "AM-544.1 New Debtor New Creditor",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN transactionRelationship FILTER i._key == \"${responseJson.CstmrCdtTrfInitn.GrpHdr.MsgId}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if transaction relationship edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(error);\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._from);\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._to);\r",
                  "                pm.sendRequest({\r",
                  "                    url: `http://arango.development:8529/_db/pseudonyms/_api/cursor`,\r",
                  "                    method: 'POST',\r",
                  "                    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "                    body: {\r",
                  "                        mode: 'raw',\r",
                  "                        raw: JSON.stringify({\r",
                  "                            query: `FOR i IN accounts FILTER i._id == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id}\" OR i._id == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id}\" RETURN i`\r",
                  "                        })\r",
                  "                    }\r",
                  "                }, function (err, res) {\r",
                  "                    pm.test(`Check if debtor and creditor nodes were created`, function () {\r",
                  "                        if (err) {\r",
                  "                            console.log(error);\r",
                  "                            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "                        }\r",
                  "                        else {\r",
                  "                            const arangoRes = res.json();\r",
                  "                            if (arangoRes.error === true)\r",
                  "                                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                            else\r",
                  "                                pm.expect(arangoRes.result).to.length(2);\r",
                  "                        }\r",
                  "                    });\r",
                  "                });\r",
                  "            }\r",
                  "        }\r",
                  "    });\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+2775118{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+2775118{{$randomInt}}\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"{{$guid}}\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+2771234{{$randomInt}}\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"{{$guid}}\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "AM-544.2  Existing Debtor New Creditor",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN transactionRelationship FILTER i._key == \"${responseJson.CstmrCdtTrfInitn.GrpHdr.MsgId}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if transaction relationship edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(error);\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._from);\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._to);\r",
                  "                pm.sendRequest({\r",
                  "                    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "                    method: 'POST',\r",
                  "                    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "                    body: {\r",
                  "                        mode: 'raw',\r",
                  "                        raw: JSON.stringify({\r",
                  "                            query: `FOR i IN accounts FILTER i._id == \"accounts/018b51cddba4354120f490e6d580821103aefec6345f57fc415784e1db471693\" OR i._id == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id}\" RETURN i`\r",
                  "                        })\r",
                  "                    }\r",
                  "                }, function (err, res) {\r",
                  "                    pm.test(`Check if debtor exist and if new creditor node was created`, function () {\r",
                  "                        if (err) {\r",
                  "                            console.log(error);\r",
                  "                            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "                        }\r",
                  "                        else {\r",
                  "                            const arangoRes = res.json();\r",
                  "                            if (arangoRes.error === true)\r",
                  "                                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                            else\r",
                  "                                pm.expect(arangoRes.result).to.length(2);\r",
                  "                        }\r",
                  "                    });\r",
                  "                });\r",
                  "            }\r",
                  "        }\r",
                  "    });\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27751180000\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27751180000\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+2771234{{$randomInt}}\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"{{$guid}}\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "AM-544.3 New Debtor Existing Creditor",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN transactionRelationship FILTER i._key == \"${responseJson.CstmrCdtTrfInitn.GrpHdr.MsgId}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if transaction relationship edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(error);\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._from);\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._to);\r",
                  "                pm.sendRequest({\r",
                  "                    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "                    method: 'POST',\r",
                  "                    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "                    body: {\r",
                  "                        mode: 'raw',\r",
                  "                        raw: JSON.stringify({\r",
                  "                            query: `FOR i IN accounts FILTER i._id == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id}\" OR i._id == \"accounts/6439be2be408f12e7e2981e0e7a0dad6839487e333d600e0ff272c938b410b8f\" RETURN i`\r",
                  "                        })\r",
                  "                    }\r",
                  "                }, function (err, res) {\r",
                  "                    pm.test(`Check if new debtor was created and if creditor exists`, function () {\r",
                  "                        if (err) {\r",
                  "                            console.log(error);\r",
                  "                            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "                        }\r",
                  "                        else {\r",
                  "                            const arangoRes = res.json();\r",
                  "                            if (arangoRes.error === true)\r",
                  "                                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                            else\r",
                  "                                pm.expect(arangoRes.result).to.length(2);\r",
                  "                        }\r",
                  "                    });\r",
                  "                });\r",
                  "            }\r",
                  "        }\r",
                  "    });\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+2775118{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+2775118{{$randomInt}}\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"{{$guid}}\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+277830780000\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+277830780000\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "AM-544.4 Existing Debtor Existing Creditor",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN transactionRelationship FILTER i._key == \"${responseJson.CstmrCdtTrfInitn.GrpHdr.MsgId}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if transaction relationship edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(error);\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._from);\r",
                  "                pm.expect(\"accounts/\" + responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._to);\r",
                  "                pm.sendRequest({\r",
                  "                    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "                    method: 'POST',\r",
                  "                    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "                    body: {\r",
                  "                        mode: 'raw',\r",
                  "                        raw: JSON.stringify({\r",
                  "                            query: `FOR i IN accounts FILTER i._id == \"accounts/87073b737a44e276a0d19d82de934982a8dd20e8888f7d7ae53a24a1f0fab8f0\" OR i._id == \"accounts/d2471686ecbedc5fec9b600540d9233c52a96fb13e76fae5b01dc8783cf2103c\" RETURN i`\r",
                  "                        })\r",
                  "                    }\r",
                  "                }, function (err, res) {\r",
                  "                    pm.test(`Check if debtor and creditor nodes exist`, function () {\r",
                  "                        if (err) {\r",
                  "                            console.log(error);\r",
                  "                            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "                        }\r",
                  "                        else {\r",
                  "                            const arangoRes = res.json();\r",
                  "                            if (arangoRes.error === true)\r",
                  "                                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                            else\r",
                  "                                pm.expect(arangoRes.result).to.length(2);\r",
                  "                        }\r",
                  "                    });\r",
                  "                });\r",
                  "            }\r",
                  "        }\r",
                  "    });\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27751185444\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"Existing Debtor\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27751185444\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"Existing Debtor\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27712345444\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"Existing Creditor\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27712345444\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"Existing Creditor\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "AM-571.1 New debtor, new debtor account",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN account_holder FILTER i._from == \"entities/${responseJson.CstmrCdtTrfInitn.PmtInf.Dbtr.Id.PrvtId.Othr[1].Id}\" AND i._to == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if account_holder edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(err);\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                const arangoRes = res.json();\r",
                  "                if (arangoRes.error === true)\r",
                  "                    pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                else\r",
                  "                    pm.expect(arangoRes.result).to.length(1);\r",
                  "                        \r",
                  "            }\r",
                  "        }\r",
                  "    })\r",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"{{$guid}}\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+2775118{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+2775118{{$randomInt}}\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"{{$guid}}\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"{{$guid}}\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+2771234{{$randomInt}}\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"{{$guid}}\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "host": [
                "{{NifiUrl}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "AM-571.2 New debtor, existing debtor account",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN account_holder FILTER i._from == \"entities/${responseJson.CstmrCdtTrfInitn.PmtInf.Dbtr.Id.PrvtId.Othr[1].Id}\" AND i._to == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if account_holder edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(err);\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                const arangoRes = res.json();\r",
                  "                if (arangoRes.error === true)\r",
                  "                    pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                else\r",
                  "                    pm.expect(arangoRes.result).to.length(1);\r",
                  "                        \r",
                  "            }\r",
                  "        }\r",
                  "    })\r",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"{{$guid}}\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+2775118{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27751180000\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+2771234{{$randomInt}}\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"{{$guid}}\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "host": [
                "{{NifiUrl}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "AM-571.3 Existing debtor, new debtor account",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN account_holder FILTER i._from == \"entities/${responseJson.CstmrCdtTrfInitn.PmtInf.Dbtr.Id.PrvtId.Othr[1].Id}\" AND i._to == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if account_holder edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(err);\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                const arangoRes = res.json();\r",
                  "                if (arangoRes.error === true)\r",
                  "                    pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                else\r",
                  "                    pm.expect(arangoRes.result).to.length(1);\r",
                  "                        \r",
                  "            }\r",
                  "        }\r",
                  "    })\r",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27751180000\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+2775118{{$randomInt}}\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"{{$guid}}\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"{{$guid}}\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+2771234{{$randomInt}}\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"{{$guid}}\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "host": [
                "{{NifiUrl}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "AM-571.4 Existing debtor, existing debtor account",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN account_holder FILTER i._from == \"entities/${responseJson.CstmrCdtTrfInitn.PmtInf.Dbtr.Id.PrvtId.Othr[1].Id}\" AND i._to == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.DbtrAcct.Id.Othr.Id}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if account_holder edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(err);\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                const arangoRes = res.json();\r",
                  "                if (arangoRes.error === true)\r",
                  "                    pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                else\r",
                  "                    pm.expect(arangoRes.result).to.length(1);\r",
                  "                        \r",
                  "            }\r",
                  "        }\r",
                  "    })\r",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27751180001\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27751180001\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+2771234{{$randomInt}}\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"{{$guid}}\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "host": [
                "{{NifiUrl}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "AM-571.5 New creditor, new creditor account",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN account_holder FILTER i._from == \"entities/${responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.Cdtr.Id.PrvtId.Othr[1].Id}\" AND i._to == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if account_holder edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(err);\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                const arangoRes = res.json();\r",
                  "                if (arangoRes.error === true)\r",
                  "                    pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                else\r",
                  "                    pm.expect(arangoRes.result).to.length(1);\r",
                  "                        \r",
                  "            }\r",
                  "        }\r",
                  "    })\r",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+2775118{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+2775118{{$randomInt}}\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"{{$guid}}\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"{{$guid}}\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+2771234{{$randomInt}}\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"{{$guid}}\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"{{$guid}}\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "host": [
                "{{NifiUrl}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "AM-571.6 New creditor, existing creditor account",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN account_holder FILTER i._from == \"entities/${responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.Cdtr.Id.PrvtId.Othr[1].Id}\" AND i._to == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if account_holder edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(err);\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                const arangoRes = res.json();\r",
                  "                if (arangoRes.error === true)\r",
                  "                    pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                else\r",
                  "                    pm.expect(arangoRes.result).to.length(1);\r",
                  "                        \r",
                  "            }\r",
                  "        }\r",
                  "    })\r",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+2775118{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+2775118{{$randomInt}}\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"{{$guid}}\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"{{$guid}}\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+2771234{{$randomInt}}\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"{{$guid}}\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27751180000\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "host": [
                "{{NifiUrl}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "AM-571.7 Existing creditor, new creditor account",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN account_holder FILTER i._from == \"entities/${responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.Cdtr.Id.PrvtId.Othr[1].Id}\" AND i._to == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if account_holder edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(err);\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                const arangoRes = res.json();\r",
                  "                if (arangoRes.error === true)\r",
                  "                    pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                else\r",
                  "                    pm.expect(arangoRes.result).to.length(1);\r",
                  "                        \r",
                  "            }\r",
                  "        }\r",
                  "    })\r",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27751180000\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+2775118{{$randomInt}}\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"{{$guid}}\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27751180000\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"{{$guid}}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"{{$guid}}\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "host": [
                "{{NifiUrl}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "AM-571.8 Existing creditor, existing creditor account",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN account_holder FILTER i._from == \"entities/${responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.Cdtr.Id.PrvtId.Othr[1].Id}\" AND i._to == \"accounts/${responseJson.CstmrCdtTrfInitn.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if account_holder edge was populated`, function () {\r",
                  "        if (err) {\r",
                  "            console.log(err);\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else {\r",
                  "                const arangoRes = res.json();\r",
                  "                if (arangoRes.error === true)\r",
                  "                    pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "                else\r",
                  "                    pm.expect(arangoRes.result).to.length(1);\r",
                  "                        \r",
                  "            }\r",
                  "        }\r",
                  "    })\r",
                  "})"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-10-07\",\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Ivan Reese Russel-Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1967-11-23\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27751180000\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27751180000\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Ivan Russel-Klein\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec535-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": \"50431891779910900\",\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27751180000\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27751180000\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"Ivan\",\r\n                                \"MddlNm\": \"Reese\",\r\n                                \"LastNm\": \"Russel-Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"April\",\r\n                                \"MddlNm\": \"Sam\",\r\n                                \"LastNm\": \"Adamson\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": \"499325661187237\"\r\n                            },\r\n                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1291\",\r\n                            \"Long\": \"39.0006\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "host": [
                "{{NifiUrl}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Pacs008",
      "item": [
        {
          "name": "Pacs 008 (AM-622) - Test 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Incoming & Outgoing messages match\", function () {\r",
                  "    pm.expect(responseJson.FIToFICstmrCdt.CdtTrfTxInf.PmtId.EndToEndId).to.eq(\"5cb8a2db-5c32-41bb-ac27-2597125d50fd\");\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test debtor fields pseudonyms\", function () {\r",
                  "    pm.expect(responseJson.FIToFICstmrCdt.CdtTrfTxInf.DbtrAcct.Id.Othr.Id).to.eq(\"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\");\r",
                  "    pm.expect(responseJson.FIToFICstmrCdt.CdtTrfTxInf.DbtrAcct.Id.Othr.SchmeNm.Prtry).to.eq(\"PSEUDO\");\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"TxTp\": \"pacs.008.001.10\",\r\n  \"FIToFICstmrCdt\": {\r\n    \"GrpHdr\": {\r\n      \"MsgId\": \"ac152c90-f8a5-4c8c-b148-025fafd22b65\",\r\n      \"CreDtTm\": \"2021-11-03T07:24:46.000Z\",\r\n      \"NbOfTxs\": 1,\r\n      \"SttlmInf\": {\r\n        \"SttlmMtd\": \"CLRG\"\r\n      }\r\n    },\r\n    \"CdtTrfTxInf\": {\r\n      \"PmtId\": {\r\n        \"InstrId\": \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r\n        \"EndToEndId\": \"5cb8a2db-5c32-41bb-ac27-2597125d50fd\"\r\n      },\r\n      \"IntrBkSttlmAmt\": {\r\n        \"Amt\": {\r\n          \"Amt\": 15918156530287100,\r\n          \"Ccy\": \"USD\"\r\n        }\r\n      },\r\n      \"InstdAmt\": {\r\n        \"Amt\": {\r\n          \"Amt\": 15918156530287100,\r\n          \"Ccy\": \"USD\"\r\n        }\r\n      },\r\n      \"ChrgBr\": \"DEBT\",\r\n      \"ChrgsInf\": {\r\n        \"Amt\": {\r\n          \"Amt\": 157605510200862,\r\n          \"Ccy\": \"USD\"\r\n        },\r\n        \"Agt\": {\r\n          \"FinInstnId\": {\r\n            \"ClrSysMmbId\": {\r\n              \"MmbId\": \"dfsp001\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"InitgPty\": {\r\n        \"Nm\": \"John Harper Klein\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1911-12-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+27751185514\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-751185514\"\r\n        }\r\n      },\r\n      \"Dbtr\": {\r\n        \"Nm\": \"John Harper Klein\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1911-12-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+27751185514\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-751185514\"\r\n        }\r\n      },\r\n      \"DbtrAcct\": {\r\n        \"Id\": {\r\n          \"Othr\": {\r\n            \"Id\": \"+27751185514\",\r\n            \"SchmeNm\": {\r\n              \"Prtry\": \"MSISDN\"\r\n            }\r\n          }\r\n        },\r\n        \"Nm\": \"John Klein\"\r\n      },\r\n      \"DbtrAgt\": {\r\n        \"FinInstnId\": {\r\n          \"ClrSysMmbId\": {\r\n            \"MmbId\": \"dfsp001\"\r\n          }\r\n        }\r\n      },\r\n      \"CdtrAgt\": {\r\n        \"FinInstnId\": {\r\n          \"ClrSysMmbId\": {\r\n            \"MmbId\": \"dfsp002\"\r\n          }\r\n        }\r\n      },\r\n      \"Cdtr\": {\r\n        \"Nm\": \"Inge Harper Ford\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1970-01-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+27824061596\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-824061596\"\r\n        }\r\n      },\r\n      \"CdtrAcct\": {\r\n        \"Id\": {\r\n          \"Othr\": {\r\n            \"Id\": \"+27751185514\",\r\n            \"SchmeNm\": {\r\n              \"Prtry\": \"MSISDN\"\r\n            },\r\n            \"Nm\": \"Inge Ford\"\r\n          }\r\n        }\r\n      },\r\n      \"Purp\": {\r\n        \"Cd\": \"MP2P\"\r\n      }\r\n    },\r\n    \"RgltryRptg\": {\r\n      \"Dtls\": {\r\n        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n        \"Cd\": \"100\"\r\n      }\r\n    },\r\n    \"RmtInf\": {\r\n      \"Ustrd\": \"Payment of USD 15760551020086200.57 from John to Inge\"\r\n    },\r\n    \"SplmtryData\": {\r\n      \"Envlp\": {\r\n        \"Doc\": {\r\n          \"Xprtn\": \"2021-11-03T07:29:42.000Z\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "Pacs 008 (AM-622) - Test 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Test creditor fields pseudonyms\", function () {\r",
                  "    pm.expect(responseJson.FIToFICstmrCdt.CdtTrfTxInf.Cdtr.Id.PrvtId.Othr.Id).to.eq(\"a8ff90b1690ec225f41cbfa8f1f7b859e70c30e6275a9302c3c19929b93a1a72\");\r",
                  "    pm.expect(responseJson.FIToFICstmrCdt.CdtTrfTxInf.Cdtr.Id.PrvtId.Othr.SchmeNm.Prtry).to.eq(\"PSEUDO\");\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"TxTp\": \"pacs.008.001.10\",\r\n  \"FIToFICstmrCdt\": {\r\n    \"GrpHdr\": {\r\n      \"MsgId\": \"ac152c90-f8a5-4c8c-b148-025fafd22b65\",\r\n      \"CreDtTm\": \"2021-11-03T07:24:46.000Z\",\r\n      \"NbOfTxs\": 1,\r\n      \"SttlmInf\": {\r\n        \"SttlmMtd\": \"CLRG\"\r\n      }\r\n    },\r\n    \"CdtTrfTxInf\": {\r\n      \"PmtId\": {\r\n        \"InstrId\": \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r\n        \"EndToEndId\": \"5cb8a2db-5c32-41bb-ac27-2597125d50fd\"\r\n      },\r\n      \"IntrBkSttlmAmt\": {\r\n        \"Amt\": {\r\n          \"Amt\": 15918156530287100,\r\n          \"Ccy\": \"USD\"\r\n        }\r\n      },\r\n      \"InstdAmt\": {\r\n        \"Amt\": {\r\n          \"Amt\": 15918156530287100,\r\n          \"Ccy\": \"USD\"\r\n        }\r\n      },\r\n      \"ChrgBr\": \"DEBT\",\r\n      \"ChrgsInf\": {\r\n        \"Amt\": {\r\n          \"Amt\": 157605510200862,\r\n          \"Ccy\": \"USD\"\r\n        },\r\n        \"Agt\": {\r\n          \"FinInstnId\": {\r\n            \"ClrSysMmbId\": {\r\n              \"MmbId\": \"dfsp001\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"InitgPty\": {\r\n        \"Nm\": \"John Harper Klein\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1911-12-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+27751185514\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-751185514\"\r\n        }\r\n      },\r\n      \"Dbtr\": {\r\n        \"Nm\": \"John Harper Klein\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1911-12-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+27751185514\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-751185514\"\r\n        }\r\n      },\r\n      \"DbtrAcct\": {\r\n        \"Id\": {\r\n          \"Othr\": {\r\n            \"Id\": \"+27751185514\",\r\n            \"SchmeNm\": {\r\n              \"Prtry\": \"MSISDN\"\r\n            }\r\n          }\r\n        },\r\n        \"Nm\": \"John Klein\"\r\n      },\r\n      \"DbtrAgt\": {\r\n        \"FinInstnId\": {\r\n          \"ClrSysMmbId\": {\r\n            \"MmbId\": \"dfsp001\"\r\n          }\r\n        }\r\n      },\r\n      \"CdtrAgt\": {\r\n        \"FinInstnId\": {\r\n          \"ClrSysMmbId\": {\r\n            \"MmbId\": \"dfsp002\"\r\n          }\r\n        }\r\n      },\r\n      \"Cdtr\": {\r\n        \"Nm\": \"Inge Harper Ford\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1970-01-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+27824061596\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-824061596\"\r\n        }\r\n      },\r\n      \"CdtrAcct\": {\r\n        \"Id\": {\r\n          \"Othr\": {\r\n            \"Id\": \"+27751185514\",\r\n            \"SchmeNm\": {\r\n              \"Prtry\": \"MSISDN\"\r\n            },\r\n            \"Nm\": \"Inge Ford\"\r\n          }\r\n        }\r\n      },\r\n      \"Purp\": {\r\n        \"Cd\": \"MP2P\"\r\n      }\r\n    },\r\n    \"RgltryRptg\": {\r\n      \"Dtls\": {\r\n        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n        \"Cd\": \"100\"\r\n      }\r\n    },\r\n    \"RmtInf\": {\r\n      \"Ustrd\": \"Payment of USD 15760551020086200.57 from John to Inge\"\r\n    },\r\n    \"SplmtryData\": {\r\n      \"Envlp\": {\r\n        \"Doc\": {\r\n          \"Xprtn\": \"2021-11-03T07:29:42.000Z\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "Pacs 008 (AM-622) - Test 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header:{'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}`},\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR doc IN pseudonyms FILTER doc.pseudonym == '${pm.response.json().FIToFICstmrCdt.CdtTrfTxInf.DbtrAcct.Id.Othr.Id}' RETURN doc`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if debtor pseudonym exists`, function () {\r",
                  "        if (err)\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else\r",
                  "                pm.expect(arangoRes.result).to.length(1);\r",
                  "        }\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header:{'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}`},\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR doc IN pseudonyms FILTER doc.pseudonym == '${pm.response.json().FIToFICstmrCdt.CdtTrfTxInf.Cdtr.Id.PrvtId.Othr.Id}' RETURN doc`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if creditor pseudonym exists`, function () {\r",
                  "        if (err)\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else\r",
                  "                pm.expect(arangoRes.result).to.length(1);\r",
                  "        }\r",
                  "    });\r",
                  "});\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"TxTp\": \"pacs.008.001.10\",\r\n  \"FIToFICstmrCdt\": {\r\n    \"GrpHdr\": {\r\n      \"MsgId\": \"ac152c90-f8a5-4c8c-b148-025fafd22b65\",\r\n      \"CreDtTm\": \"2021-11-03T07:24:46.000Z\",\r\n      \"NbOfTxs\": 1,\r\n      \"SttlmInf\": {\r\n        \"SttlmMtd\": \"CLRG\"\r\n      }\r\n    },\r\n    \"CdtTrfTxInf\": {\r\n      \"PmtId\": {\r\n        \"InstrId\": \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r\n        \"EndToEndId\": \"5cb8a2db-5c32-41bb-ac27-2597125d50fd\"\r\n      },\r\n      \"IntrBkSttlmAmt\": {\r\n        \"Amt\": {\r\n          \"Amt\": 15918156530287100,\r\n          \"Ccy\": \"USD\"\r\n        }\r\n      },\r\n      \"InstdAmt\": {\r\n        \"Amt\": {\r\n          \"Amt\": 15918156530287100,\r\n          \"Ccy\": \"USD\"\r\n        }\r\n      },\r\n      \"ChrgBr\": \"DEBT\",\r\n      \"ChrgsInf\": {\r\n        \"Amt\": {\r\n          \"Amt\": 157605510200862,\r\n          \"Ccy\": \"USD\"\r\n        },\r\n        \"Agt\": {\r\n          \"FinInstnId\": {\r\n            \"ClrSysMmbId\": {\r\n              \"MmbId\": \"dfsp001\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"InitgPty\": {\r\n        \"Nm\": \"John Harper Klein\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1911-12-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+27751185514\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-751185514\"\r\n        }\r\n      },\r\n      \"Dbtr\": {\r\n        \"Nm\": \"John Harper Klein\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1911-12-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+27751185514\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-751185514\"\r\n        }\r\n      },\r\n      \"DbtrAcct\": {\r\n        \"Id\": {\r\n          \"Othr\": {\r\n            \"Id\": \"+27751185514\",\r\n            \"SchmeNm\": {\r\n              \"Prtry\": \"MSISDN\"\r\n            }\r\n          }\r\n        },\r\n        \"Nm\": \"John Klein\"\r\n      },\r\n      \"DbtrAgt\": {\r\n        \"FinInstnId\": {\r\n          \"ClrSysMmbId\": {\r\n            \"MmbId\": \"dfsp001\"\r\n          }\r\n        }\r\n      },\r\n      \"CdtrAgt\": {\r\n        \"FinInstnId\": {\r\n          \"ClrSysMmbId\": {\r\n            \"MmbId\": \"dfsp002\"\r\n          }\r\n        }\r\n      },\r\n      \"Cdtr\": {\r\n        \"Nm\": \"Inge Harper Ford\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1970-01-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+27824061596\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-824061596\"\r\n        }\r\n      },\r\n      \"CdtrAcct\": {\r\n        \"Id\": {\r\n          \"Othr\": {\r\n            \"Id\": \"+27751185514\",\r\n            \"SchmeNm\": {\r\n              \"Prtry\": \"MSISDN\"\r\n            },\r\n            \"Nm\": \"Inge Ford\"\r\n          }\r\n        }\r\n      },\r\n      \"Purp\": {\r\n        \"Cd\": \"MP2P\"\r\n      }\r\n    },\r\n    \"RgltryRptg\": {\r\n      \"Dtls\": {\r\n        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n        \"Cd\": \"100\"\r\n      }\r\n    },\r\n    \"RmtInf\": {\r\n      \"Ustrd\": \"Payment of USD 15760551020086200.57 from John to Inge\"\r\n    },\r\n    \"SplmtryData\": {\r\n      \"Envlp\": {\r\n        \"Doc\": {\r\n          \"Xprtn\": \"2021-11-03T07:29:42.000Z\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "Pacs 008 (AM-619) - Tests",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "var req = JSON.parse(request.data);\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/transactionHistory/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header:{'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}`},\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR doc IN transactionHistory FILTER doc.FIToFICstmrCdt.GrpHdr.MsgId == '${req.FIToFICstmrCdt.GrpHdr.MsgId}' RETURN doc`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`should have transaction in transactionHistory`, function () {\r",
                  "        if (err)\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else\r",
                  "                pm.expect(arangoRes.result).to.length(1);\r",
                  "        }\r",
                  "    });\r",
                  "});\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"TxTp\": \"pacs.008.001.10\",\r\n  \"FIToFICstmrCdt\": {\r\n    \"GrpHdr\": {\r\n      \"MsgId\": \"{{$guid}}\",\r\n      \"CreDtTm\": \"2021-11-03T07:24:46.000Z\",\r\n      \"NbOfTxs\": 1,\r\n      \"SttlmInf\": {\r\n        \"SttlmMtd\": \"CLRG\"\r\n      }\r\n    },\r\n    \"CdtTrfTxInf\": {\r\n      \"PmtId\": {\r\n        \"InstrId\": \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r\n        \"EndToEndId\": \"5cb8a2db-5c32-41bb-ac27-2597125d50fd\"\r\n      },\r\n      \"IntrBkSttlmAmt\": {\r\n        \"Amt\": {\r\n          \"Amt\": 15918156530287100,\r\n          \"Ccy\": \"USD\"\r\n        }\r\n      },\r\n      \"InstdAmt\": {\r\n        \"Amt\": {\r\n          \"Amt\": 15918156530287100,\r\n          \"Ccy\": \"USD\"\r\n        }\r\n      },\r\n      \"ChrgBr\": \"DEBT\",\r\n      \"ChrgsInf\": {\r\n        \"Amt\": {\r\n          \"Amt\": 157605510200862,\r\n          \"Ccy\": \"USD\"\r\n        },\r\n        \"Agt\": {\r\n          \"FinInstnId\": {\r\n            \"ClrSysMmbId\": {\r\n              \"MmbId\": \"dfsp001\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"InitgPty\": {\r\n        \"Nm\": \"John Harper Klein\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1911-12-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+27751185514\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-751185514\"\r\n        }\r\n      },\r\n      \"Dbtr\": {\r\n        \"Nm\": \"John Harper Klein\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1911-12-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+277511855{{$randomInt}}\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-751185514\"\r\n        }\r\n      },\r\n      \"DbtrAcct\": {\r\n        \"Id\": {\r\n          \"Othr\": {\r\n            \"Id\": \"+277511855{{$randomInt}}\",\r\n            \"SchmeNm\": {\r\n              \"Prtry\": \"MSISDN\"\r\n            }\r\n          }\r\n        },\r\n        \"Nm\": \"John Klein\"\r\n      },\r\n      \"DbtrAgt\": {\r\n        \"FinInstnId\": {\r\n          \"ClrSysMmbId\": {\r\n            \"MmbId\": \"dfsp001\"\r\n          }\r\n        }\r\n      },\r\n      \"CdtrAgt\": {\r\n        \"FinInstnId\": {\r\n          \"ClrSysMmbId\": {\r\n            \"MmbId\": \"dfsp002\"\r\n          }\r\n        }\r\n      },\r\n      \"Cdtr\": {\r\n        \"Nm\": \"Inge Harper Ford\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1970-01-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+278240615{{$randomInt}}\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-824061596\"\r\n        }\r\n      },\r\n      \"CdtrAcct\": {\r\n        \"Id\": {\r\n          \"Othr\": {\r\n            \"Id\": \"+277511855{{$randomInt}}\",\r\n            \"SchmeNm\": {\r\n              \"Prtry\": \"MSISDN\"\r\n            },\r\n            \"Nm\": \"Inge Ford\"\r\n          }\r\n        }\r\n      },\r\n      \"Purp\": {\r\n        \"Cd\": \"MP2P\"\r\n      }\r\n    },\r\n    \"RgltryRptg\": {\r\n      \"Dtls\": {\r\n        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n        \"Cd\": \"100\"\r\n      }\r\n    },\r\n    \"RmtInf\": {\r\n      \"Ustrd\": \"Payment of USD 15760551020086200.57 from John to Inge\"\r\n    },\r\n    \"SplmtryData\": {\r\n      \"Envlp\": {\r\n        \"Doc\": {\r\n          \"Xprtn\": \"2021-11-03T07:29:42.000Z\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "Pacs 008 (AM-704) - Tests",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "var req = JSON.parse(request.data);\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header:{'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}`},\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR doc IN transactionRelationship FILTER doc._from == 'accounts/${responseJson.FIToFICstmrCdt.CdtTrfTxInf.DbtrAcct.Id.Othr.Id}' && doc._to == 'accounts/${responseJson.FIToFICstmrCdt.CdtTrfTxInf.Cdtr.Id.PrvtId.Othr.Id}' RETURN doc`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`should have transaction in transactionRelationship DB`, function () {\r",
                  "        if (err)\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else\r",
                  "                pm.expect(arangoRes.result).to.length(1);\r",
                  "        }\r",
                  "    });\r",
                  "});\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"TxTp\": \"pacs.008.001.10\",\r\n  \"FIToFICstmrCdt\": {\r\n    \"GrpHdr\": {\r\n      \"MsgId\": \"{{$guid}}\",\r\n      \"CreDtTm\": \"2021-11-03T07:24:46.000Z\",\r\n      \"NbOfTxs\": 1,\r\n      \"SttlmInf\": {\r\n        \"SttlmMtd\": \"CLRG\"\r\n      }\r\n    },\r\n    \"CdtTrfTxInf\": {\r\n      \"PmtId\": {\r\n        \"InstrId\": \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r\n        \"EndToEndId\": \"5cb8a2db-5c32-41bb-ac27-2597125d50fd\"\r\n      },\r\n      \"IntrBkSttlmAmt\": {\r\n        \"Amt\": {\r\n          \"Amt\": 15918156530287100,\r\n          \"Ccy\": \"USD\"\r\n        }\r\n      },\r\n      \"InstdAmt\": {\r\n        \"Amt\": {\r\n          \"Amt\": 15918156530287100,\r\n          \"Ccy\": \"USD\"\r\n        }\r\n      },\r\n      \"ChrgBr\": \"DEBT\",\r\n      \"ChrgsInf\": {\r\n        \"Amt\": {\r\n          \"Amt\": 157605510200862,\r\n          \"Ccy\": \"USD\"\r\n        },\r\n        \"Agt\": {\r\n          \"FinInstnId\": {\r\n            \"ClrSysMmbId\": {\r\n              \"MmbId\": \"dfsp001\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"InitgPty\": {\r\n        \"Nm\": \"John Harper Klein\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1911-12-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+27751185514\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-751185514\"\r\n        }\r\n      },\r\n      \"Dbtr\": {\r\n        \"Nm\": \"John Harper Klein\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1911-12-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+277511855{{$randomInt}}\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-751185514\"\r\n        }\r\n      },\r\n      \"DbtrAcct\": {\r\n        \"Id\": {\r\n          \"Othr\": {\r\n            \"Id\": \"+277511855{{$randomInt}}\",\r\n            \"SchmeNm\": {\r\n              \"Prtry\": \"MSISDN\"\r\n            }\r\n          }\r\n        },\r\n        \"Nm\": \"John Klein\"\r\n      },\r\n      \"DbtrAgt\": {\r\n        \"FinInstnId\": {\r\n          \"ClrSysMmbId\": {\r\n            \"MmbId\": \"dfsp001\"\r\n          }\r\n        }\r\n      },\r\n      \"CdtrAgt\": {\r\n        \"FinInstnId\": {\r\n          \"ClrSysMmbId\": {\r\n            \"MmbId\": \"dfsp002\"\r\n          }\r\n        }\r\n      },\r\n      \"Cdtr\": {\r\n        \"Nm\": \"Inge Harper Ford\",\r\n        \"Id\": {\r\n          \"PrvtId\": {\r\n            \"DtAndPlcOfBirth\": {\r\n              \"BirthDt\": \"1970-01-15\",\r\n              \"CityOfBirth\": \"Unknown\",\r\n              \"CtryOfBirth\": \"ZZ\"\r\n            },\r\n            \"Othr\": {\r\n              \"Id\": \"+278240615{{$randomInt}}\",\r\n              \"SchmeNm\": {\r\n                \"Prtry\": \"MSISDN\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"CtctDtls\": {\r\n          \"MobNb\": \"+27-824061596\"\r\n        }\r\n      },\r\n      \"CdtrAcct\": {\r\n        \"Id\": {\r\n          \"Othr\": {\r\n            \"Id\": \"+277511855{{$randomInt}}\",\r\n            \"SchmeNm\": {\r\n              \"Prtry\": \"MSISDN\"\r\n            },\r\n            \"Nm\": \"Inge Ford\"\r\n          }\r\n        }\r\n      },\r\n      \"Purp\": {\r\n        \"Cd\": \"MP2P\"\r\n      }\r\n    },\r\n    \"RgltryRptg\": {\r\n      \"Dtls\": {\r\n        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n        \"Cd\": \"100\"\r\n      }\r\n    },\r\n    \"RmtInf\": {\r\n      \"Ustrd\": \"Payment of USD 15760551020086200.57 from John to Inge\"\r\n    },\r\n    \"SplmtryData\": {\r\n      \"Envlp\": {\r\n        \"Doc\": {\r\n          \"Xprtn\": \"2021-11-03T07:29:42.000Z\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Pain013",
      "item": [
        {
          "name": "AM-621 Test 1 and 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Incoming & Outgoing messages match\", function () {\r",
                  "    pm.expect(responseJson.CdtrPmtActvtnReq.PmtInf.DbtrAgt.FinInstnId.ClrSysMmbId.MmbId).to.eq(\"Horatio Ford\");\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test debtor fields pseudonyms\", function () {\r",
                  "    pm.expect(responseJson.CdtrPmtActvtnReq.PmtInf.DbtrAcct.Id.Othr.Id).to.eq(\"26ca7a4ee092fe1c3b8bac4d50d4595d49814a395f0ec832ae795f93480316b0\");\r",
                  "    pm.expect(responseJson.CdtrPmtActvtnReq.PmtInf.DbtrAcct.Id.Othr.SchmeNm.Prtry).to.eq(\"PSEUDO\");\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test creditor fields pseudonyms\", function () {\r",
                  "    pm.expect(responseJson.CdtrPmtActvtnReq.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id).to.eq(\"d9f6186b6d511137614809165c19d02be1bed6b29d1912db8a610e19208614eb\");\r",
                  "    pm.expect(responseJson.CdtrPmtActvtnReq.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.SchmeNm.Prtry).to.eq(\"PSEUDO\");\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.013.001.09\",\r\n    \"CdtrPmtActvtnReq\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$randomUUID}}\",\r\n            \"CreDtTm\": \"2021-10-21T14:02:54.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Horatio Sam Ford\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1981-04-11\",\r\n                            \"CityOfBirth\": \"Unknownnn\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27721299138\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-721299138\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"XpryDt\": {\r\n                \"DtTm\": \"2021-10-21\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"2021-10-21T14:02:54.000Z\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"2021-10-07\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"zz\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"ZZ\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"+27721299138\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27-7212967538\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"+2772145369138\"\r\n                        },\r\n                        \"Nm\": \"PASSPORT\"\r\n                    }\r\n                }\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"Horatio Ford\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 50431891779910900,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 50431891779910900,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27782722305\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783564685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"PyeeRcvAmt\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 4906747824834590.33,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrFee\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 49067478248345.9,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrComssn\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 0,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1675\",\r\n                            \"Long\": \"39.059\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "AM-621 Test 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header:{'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}`},\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR doc IN pseudonyms FILTER doc.pseudonym == '${pm.response.json().CdtrPmtActvtnReq.PmtInf.DbtrAcct.Id.Othr.Id}' RETURN doc`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if debtor pseudonym exists`, function () {\r",
                  "        if (err)\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else\r",
                  "                pm.expect(arangoRes.result).to.length(1);\r",
                  "        }\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header:{'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}`},\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR doc IN pseudonyms FILTER doc.pseudonym == '${pm.response.json().CdtrPmtActvtnReq.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id}' RETURN doc`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if creditor pseudonym exists`, function () {\r",
                  "        if (err)\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else\r",
                  "                pm.expect(arangoRes.result).to.length(1);\r",
                  "        }\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.013.001.09\",\r\n    \"CdtrPmtActvtnReq\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$randomUUID}}\",\r\n            \"CreDtTm\": \"2021-10-21T14:02:54.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Horatio Sam Ford\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1981-04-11\",\r\n                            \"CityOfBirth\": \"Unknownnn\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27721299138\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-721299138\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"XpryDt\": {\r\n                \"DtTm\": \"2021-10-21\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"2021-10-21T14:02:54.000Z\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"2021-10-07\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"zz\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"ZZ\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"+27721299138\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27-7212967538\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"+2772145369138\"\r\n                        },\r\n                        \"Nm\": \"PASSPORT\"\r\n                    }\r\n                }\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"Horatio Ford\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 50431891779910900,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 50431891779910900,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27782722305\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783564685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"PyeeRcvAmt\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 4906747824834590.33,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrFee\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 49067478248345.9,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrComssn\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 0,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1675\",\r\n                            \"Long\": \"39.059\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "AM-703 Test",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Incoming & Outgoing messages match\", function () {\r",
                  "            var jsonReq = JSON.parse(pm.request.body);\r",
                  "    pm.expect(responseJson.CdtrPmtActvtnReq.PmtInf.CdtTrfTxInf.PmtId.EndToEndId).to.eq(jsonReq.CdtrPmtActvtnReq.PmtInf.CdtTrfTxInf.PmtId.EndToEndId);\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header:{'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}`},\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "             query: `FOR doc IN transactionRelationship FILTER doc._from == 'accounts/${responseJson.CdtrPmtActvtnReq.PmtInf.CdtTrfTxInf.CdtrAcct.Id.Othr.Id}' \r",
                  "             && doc._to == 'accounts/${responseJson.CdtrPmtActvtnReq.PmtInf.DbtrAcct.Id.Othr.Id}' RETURN doc`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if transaction edge was created from creditor  to debtor`, function () {\r",
                  "        if (err)\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else\r",
                  "                pm.expect(arangoRes.result).to.length(1);\r",
                  "        }\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.013.001.09\",\r\n    \"CdtrPmtActvtnReq\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-10-21T14:02:54.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Horatio Sam Ford\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1981-04-11\",\r\n                            \"CityOfBirth\": \"Unknownnn\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27721299138\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-721299138\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"XpryDt\": {\r\n                \"DtTm\": \"2021-10-21\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"2021-10-21T14:02:54.000Z\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"2021-10-07\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"zz\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"ZZ\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"+27721299138\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27-721296{{$randomInt}}\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"+2772145369138\"\r\n                        },\r\n                        \"Nm\": \"PASSPORT\"\r\n                    }\r\n                }\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"Horatio Ford\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 50431891779910900,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 50431891779910900,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+277827{{$randomInt}}\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783564685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"PyeeRcvAmt\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 4906747824834590.33,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrFee\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 49067478248345.9,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrComssn\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 0,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1675\",\r\n                            \"Long\": \"39.059\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "AM-618",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/transactionHistory/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header:{'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}`},\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN transactionHistory FILTER i._key == \"${responseJson.CdtrPmtActvtnReq.GrpHdr.MsgId}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`Check if transaction history was populated and indexed with Primary Key in -key`, function () {\r",
                  "        if (err){\r",
                  "            console.log(error);\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        }\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else\r",
                  "                pm.expect(arangoRes.result).to.length(1);\r",
                  "        }\r",
                  "    });\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pain.013.001.09\",\r\n    \"CdtrPmtActvtnReq\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$guid}}\",\r\n            \"CreDtTm\": \"2021-11-03T07:24:44.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"John Harper Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1911-12-15\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27751185514\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-751185514\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"DtTm\": \"2021-11-03T07:24:42.000Z\"\r\n            },\r\n            \"XpryDt\": {\r\n                \"DtTm\": \"2021-11-03T07:29:42.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"John Harper Klein\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1911-12-15\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+2775118{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-751185514\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+2775118{{$randomInt}}\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        },\r\n                        \"Nm\": \"John Klein\"\r\n                    }\r\n                }\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"5cb8a2db-5c32-41bb-ac27-2597125d50fd\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER BLANK\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 15918156530287100,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 15918156530287100,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"Inge Harper Ford\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1970-01-15\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+2782406{{$randomInt}}\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-824061596\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+2775118{{$randomInt}}\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            },\r\n                            \"Nm\": \"Inge Ford\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"PyeeRcvAmt\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 15760551020086200.57,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrFee\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 157605510200862,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrComssn\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 5,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1203\",\r\n                            \"Long\": \"39.1152\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Pacs002",
      "item": [
        {
          "name": "Pacs 002(AM-705) - Tests",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var uuid = require('uuid');",
                  "var myUUID = uuid.v4();",
                  "pm.collectionVariables.set(\"transactionID\", myUUID);",
                  "pm.collectionVariables.set(\"InstrId\", uuid.v4());",
                  "pm.collectionVariables.set(\"EndtoEnd\", uuid.v4());",
                  "const InstrId = pm.collectionVariables.get(\"InstrId\");",
                  "const EndtoEnd = pm.collectionVariables.get(\"EndtoEnd\");",
                  "const transactionID = pm.collectionVariables.get(\"transactionID\");",
                  "",
                  "const transaction =",
                  "  {",
                  "    \"TxTp\": \"pacs.008.001.10\",",
                  "    \"FIToFICstmrCdt\": {",
                  "      \"GrpHdr\": {",
                  "        \"MsgId\": `${transactionID}`,",
                  "        \"CreDtTm\": \"2021-12-02T10:05:09.000Z\",",
                  "        \"NbOfTxs\": 1,",
                  "        \"SttlmInf\": {",
                  "          \"SttlmMtd\": \"CLRG\"",
                  "        }",
                  "      },",
                  "      \"CdtTrfTxInf\": {",
                  "        \"PmtId\": {",
                  "          \"InstrId\": `${InstrId}`,",
                  "          \"EndToEndId\": `${EndtoEnd}`",
                  "        },",
                  "        \"IntrBkSttlmAmt\": {",
                  "          \"Amt\": {",
                  "            \"Amt\": 74371.24,",
                  "            \"Ccy\": \"USD\"",
                  "          }",
                  "        },",
                  "        \"InstdAmt\": {",
                  "          \"Amt\": {",
                  "            \"Amt\": 74371.24,",
                  "            \"Ccy\": \"USD\"",
                  "          }",
                  "        },",
                  "        \"ChrgBr\": \"DEBT\",",
                  "        \"ChrgsInf\": {",
                  "          \"Amt\": {",
                  "            \"Amt\": 736.35,",
                  "            \"Ccy\": \"USD\"",
                  "          },",
                  "          \"Agt\": {",
                  "            \"FinInstnId\": {",
                  "              \"ClrSysMmbId\": {",
                  "                \"MmbId\": \"dfsp001\"",
                  "              }",
                  "            }",
                  "          }",
                  "        },",
                  "        \"InitgPty\": {",
                  "          \"Nm\": \"Hilda Glen Grant\",",
                  "          \"Id\": {",
                  "            \"PrvtId\": {",
                  "              \"DtAndPlcOfBirth\": {",
                  "                \"BirthDt\": \"1929-06-02\",",
                  "                \"CityOfBirth\": \"Unknown\",",
                  "                \"CtryOfBirth\": \"ZZ\"",
                  "              },",
                  "              \"Othr\": {",
                  "                \"Id\": \"+27765784647\",",
                  "                \"SchmeNm\": {",
                  "                  \"Prtry\": \"MSISDN\"",
                  "                }",
                  "              }",
                  "            }",
                  "          },",
                  "          \"CtctDtls\": {",
                  "            \"MobNb\": \"+27-765784647\"",
                  "          }",
                  "        },",
                  "        \"Dbtr\": {",
                  "          \"Nm\": \"Hilda Glen Grant\",",
                  "          \"Id\": {",
                  "            \"PrvtId\": {",
                  "              \"DtAndPlcOfBirth\": {",
                  "                \"BirthDt\": \"1929-06-02\",",
                  "                \"CityOfBirth\": \"Unknown\",",
                  "                \"CtryOfBirth\": \"ZZ\"",
                  "              },",
                  "              \"Othr\": {",
                  "                \"Id\": \"+27765784647\",",
                  "                \"SchmeNm\": {",
                  "                  \"Prtry\": \"MSISDN\"",
                  "                }",
                  "              }",
                  "            }",
                  "          },",
                  "          \"CtctDtls\": {",
                  "            \"MobNb\": \"+27-765784647\"",
                  "          }",
                  "        },",
                  "        \"DbtrAcct\": {",
                  "          \"Id\": {",
                  "            \"Othr\": {",
                  "              \"Id\": \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab19534zz\",",
                  "              \"SchmeNm\": {",
                  "                \"Prtry\": \"MSISDN\"",
                  "              }",
                  "            }",
                  "          },",
                  "          \"Nm\": \"Hilda Grant\"",
                  "        },",
                  "        \"DbtrAgt\": {",
                  "          \"FinInstnId\": {",
                  "            \"ClrSysMmbId\": {",
                  "              \"MmbId\": \"dfsp001\"",
                  "            }",
                  "          }",
                  "        },",
                  "        \"CdtrAgt\": {",
                  "          \"FinInstnId\": {",
                  "            \"ClrSysMmbId\": {",
                  "              \"MmbId\": \"dfsp002\"",
                  "            }",
                  "          }",
                  "        },",
                  "        \"Cdtr\": {",
                  "          \"Nm\": \"Felicia Manfrey\",",
                  "          \"Id\": {",
                  "            \"PrvtId\": {",
                  "              \"DtAndPlcOfBirth\": {",
                  "                \"BirthDt\": \"1965-07-04\",",
                  "                \"CityOfBirth\": \"Unknown\",",
                  "                \"CtryOfBirth\": \"ZZ\"",
                  "              },",
                  "              \"Othr\": {",
                  "                \"Id\": \"a8ff90b1690ec225f41cbfa8f1f7b859e70c30e6275a9302c3c19929b93a89uu\",",
                  "                \"SchmeNm\": {",
                  "                  \"Prtry\": \"MSISDN\"",
                  "                }",
                  "              }",
                  "            }",
                  "          },",
                  "          \"CtctDtls\": {",
                  "            \"MobNb\": \"+27-827537492\"",
                  "          }",
                  "        },",
                  "        \"CdtrAcct\": {",
                  "          \"Id\": {",
                  "            \"Othr\": {",
                  "              \"Id\": \"+27827537492\",",
                  "              \"SchmeNm\": {",
                  "                \"Prtry\": \"MSISDN\"",
                  "              }",
                  "            }",
                  "          },",
                  "          \"Nm\": \"Felicia Manfrey\"",
                  "        },",
                  "        \"Purp\": {",
                  "          \"Cd\": \"MP2P\"",
                  "        }",
                  "      },",
                  "      \"RgltryRptg\": {",
                  "        \"Dtls\": {",
                  "          \"Tp\": \"BALANCE OF PAYMENTS\",",
                  "          \"Cd\": \"100\"",
                  "        }",
                  "      },",
                  "      \"RmtInf\": {",
                  "        \"Ustrd\": \"Payment of USD 73634.89 from Hilda to Felicia\"",
                  "      },",
                  "      \"SplmtryData\": {",
                  "        \"Envlp\": {",
                  "          \"Doc\": {",
                  "            \"Xprtn\": \"2021-12-02T10:10:05.000Z\"",
                  "          }",
                  "        }",
                  "      }",
                  "    }",
                  "  };",
                  "pm.globals.set(\"seedTransaction008\", transaction);",
                  "pm.sendRequest({",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/transactionHistory/_api/cursor`,",
                  "    method: 'POST',",
                  "    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
                  "    body: {",
                  "        mode: 'raw',",
                  "        raw: JSON.stringify({",
                  "            query: `INSERT {_key: '${transaction.FIToFICstmrCdt.GrpHdr.MsgId}', TxTp: '${transaction.TxTp}', FIToFICstmrCdt: ${JSON.stringify(transaction.FIToFICstmrCdt)}} INTO transactionHistory",
                  "                    OPTIONS { overwrite: true }`",
                  "        })",
                  "    }",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "var req = JSON.parse(request.data);\r",
                  "\r",
                  "const instrIdvar = pm.collectionVariables.get(\"InstrId\");\r",
                  "var seedPacs008Data = pm.globals.get(\"seedTransaction008\");\r",
                  "\r",
                  "pm.test(\"Incoming & Outgoing messages match\", function () {\r",
                  "    pm.expect(responseJson.FIToFIPmtSts.TxInfAndSts.OrgnlInstrId).to.eq(instrIdvar);\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/pseudonyms/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header:{'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}`},\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR i IN transactionRelationship FILTER i._key == \"${responseJson.FIToFIPmtSts.GrpHdr.MsgId}\" RETURN i`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    pm.test(`should have transaction in transactionRelationship DB`, function () {\r",
                  "        if (err)\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else\r",
                  "                pm.expect(arangoRes.result).to.length(1);\r",
                  "                pm.expect(\"accounts/\" + seedPacs008Data.FIToFICstmrCdt.CdtTrfTxInf.Cdtr.Id.PrvtId.Othr.Id).to.eq(arangoRes.result[0]._from);\r",
                  "                pm.expect(\"accounts/\" + seedPacs008Data.FIToFICstmrCdt.CdtTrfTxInf.DbtrAcct.Id.Othr.Id).to.eq(arangoRes.result[0]._to);\r",
                  "        }\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Remove Seed Data from DB\", function () {\r",
                  "    pm.sendRequest({\r",
                  "        url: `${pm.environment.get(\"arangourl\")}/_db/transactionHistory/_api/cursor`,\r",
                  "        method: 'POST',\r",
                  "        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
                  "        body: {\r",
                  "            mode: 'raw',\r",
                  "            raw: JSON.stringify({\r",
                  "                query: `REMOVE { _key: '${seedPacs008Data.FIToFICstmrCdt.GrpHdr.MsgId}' } IN transactionHistory\r",
                  "                        OPTIONS { ignoreErrors: true }`\r",
                  "            })\r",
                  "        }\r",
                  "    })\r",
                  "});\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pacs.002.001.12\",\r\n    \"FIToFIPmtSts\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$randomUUID}}\",\r\n            \"CreDtTm\": \"2021-11-03T07:24:48.000Z\"\r\n        },\r\n        \"TxInfAndSts\": {\r\n            \"OrgnlInstrId\": \"{{InstrId}}\",\r\n            \"OrgnlEndToEndId\": \"{{EndtoEnd}}\",\r\n            \"TxSts\": \"ACSC\",\r\n            \"ChrgsInf\": [\r\n                {\r\n                    \"Amt\": {\r\n                        \"Amt\": 157605510200862,\r\n                        \"Ccy\": \"USD\"\r\n                    },\r\n                    \"Agt\": {\r\n                        \"FinInstnId\": {\r\n                            \"ClrSysMmbId\": {\r\n                                \"MmbId\": \"dfsp001\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"Amt\": {\r\n                        \"Amt\": 15918156530287100,\r\n                        \"Ccy\": \"USD\"\r\n                    },\r\n                    \"Agt\": {\r\n                        \"FinInstnId\": {\r\n                            \"ClrSysMmbId\": {\r\n                                \"MmbId\": \"dfsp001\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"Amt\": {\r\n                        \"Amt\": 15918156530287100,\r\n                        \"Ccy\": \"USD\"\r\n                    },\r\n                    \"Agt\": {\r\n                        \"FinInstnId\": {\r\n                            \"ClrSysMmbId\": {\r\n                                \"MmbId\": \"dfsp002\"\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            \"AccptncDtTm\": \"2021-11-03T07:24:47.000Z\",\r\n            \"InstgAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"InstdAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp002\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        },
        {
          "name": "Pacs 002(AM-620) - Tests",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();\r",
                  "var req = JSON.parse(request.data);\r",
                  "\r",
                  "pm.test(`should have pacs002 transaction written to transactionHistory`, function () {\r",
                  "pm.sendRequest({\r",
                  "    url: `${pm.environment.get(\"arangourl\")}/_db/transactionHistory/_api/cursor`,\r",
                  "    method: 'POST',\r",
                  "    header:{'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}`},\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            query: `FOR doc IN transactionHistory FILTER doc.FIToFIPmtSts.GrpHdr.MsgId == '${req.FIToFIPmtSts.GrpHdr.MsgId}' RETURN doc`\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "        if (err)\r",
                  "            pm.expect('Not an error').to.eq('An error occurred')\r",
                  "        else {\r",
                  "            const arangoRes = res.json();\r",
                  "            if (arangoRes.error === true)\r",
                  "                pm.expect('Not an error').to.eq(arangoRes.errorMessage)\r",
                  "            else\r",
                  "                pm.expect(arangoRes.result).to.length(1);\r",
                  "        }\r",
                  "    });\r",
                  "});\r",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"TxTp\": \"pacs.002.001.12\",\r\n    \"FIToFIPmtSts\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{$randomUUID}}\",\r\n            \"CreDtTm\": \"2021-11-03T07:24:48.000Z\"\r\n        },\r\n        \"TxInfAndSts\": {\r\n            \"OrgnlInstrId\": \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r\n            \"OrgnlEndToEndId\": \"5cb8a2db-5c32-41bb-ac27-2597125d50fd\",\r\n            \"TxSts\": \"ACSC\",\r\n            \"ChrgsInf\": [\r\n                {\r\n                    \"Amt\": {\r\n                        \"Amt\": 157605510200862,\r\n                        \"Ccy\": \"USD\"\r\n                    },\r\n                    \"Agt\": {\r\n                        \"FinInstnId\": {\r\n                            \"ClrSysMmbId\": {\r\n                                \"MmbId\": \"dfsp001\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"Amt\": {\r\n                        \"Amt\": 15918156530287100,\r\n                        \"Ccy\": \"USD\"\r\n                    },\r\n                    \"Agt\": {\r\n                        \"FinInstnId\": {\r\n                            \"ClrSysMmbId\": {\r\n                                \"MmbId\": \"dfsp001\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"Amt\": {\r\n                        \"Amt\": 15918156530287100,\r\n                        \"Ccy\": \"USD\"\r\n                    },\r\n                    \"Agt\": {\r\n                        \"FinInstnId\": {\r\n                            \"ClrSysMmbId\": {\r\n                                \"MmbId\": \"dfsp002\"\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            \"AccptncDtTm\": \"2021-11-03T07:24:47.000Z\",\r\n            \"InstgAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"InstdAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp002\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{NifiUrl}}",
              "protocol": "http",
              "host": [
                "nifi",
                "development"
              ],
              "port": "8081"
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "transactionID",
      "value": ""
    },
    {
      "key": "InstrId",
      "value": ""
    },
    {
      "key": "EndtoEnd",
      "value": ""
    }
  ]
}
