{
	"info": {
		"_postman_id": "a5c0e529-18ba-40ac-a18a-336d4d23a802",
		"name": "Rule-078 Jenkins",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "pacs 002",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"const arangourl = pm.environment.get(\"arangoUrl\");",
									"",
									"var req = JSON.parse(request.data);",
									"",
									"const transactions = [\"9990780011\"]",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"should not have errors\", function () {",
									"    pm.expect(jsonData).not.to.have.property('errors')",
									"});",
									"",
									"pm.test(\"should be a valid transaction\", function () {",
									"    pm.expect(jsonData.message).to.eql(\"Transaction is valid\");",
									"});",
									"",
									"pm.test(\"should send to data preparation successfully\", function () {",
									"    pm.expect(jsonData.sent).to.eql(true);",
									"});",
									"",
									"pm.test(\"should have the same outgoing and incoming json\", function () {",
									"    pm.expect(jsonData.data).to.eql(req);",
									"});",
									"",
									"pm.test(\"Remove Seed Data from DB\", function () {",
									"    pm.sendRequest({",
									"        url: `${arangourl}_db/transactionHistory/_api/cursor`,",
									"        method: 'POST',",
									"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                query: `FOR transaction IN ${JSON.stringify(transactions)}",
									"                        REMOVE { _key: transaction } IN transactionHistory",
									"                        OPTIONS { ignoreErrors: true }`",
									"            })",
									"        }",
									"    })",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const now = new Date().getTime();\r",
									"\r",
									"const arangourl = pm.environment.get(\"arangoUrl\");\r",
									"const baseUrl = pm.environment.get(\"ofUrl\");\r",
									"const version = pm.environment.get(\"version\");\r",
									"pm.globals.set(\"now\", new Date().toISOString());\r",
									"\r",
									"var uuid = require('uuid');\r",
									"var myUUID = uuid.v4();\r",
									"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
									"\r",
									"var req = JSON.parse(request.data);\r",
									"console.log(req.FIToFIPmtSts.GrpHdr.MsgId);\r",
									"let e2eID = JSON.stringify(req.FIToFIPmtSts.GrpHdr.MsgId);\r",
									"\r",
									"console.log(e2eID)\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"console.log(e2eID)\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", e2eID);\r",
									"\r",
									"const networkMaps = [\r",
									"    {\r",
									"        \"key\": \"078\",\r",
									"        \"active\": true,\r",
									"        \"cfg\": \"1.0.0\",\r",
									"        \"messages\": [\r",
									"            {\r",
									"                \"id\": \"004_078@1.0.0\",\r",
									"                \"host\": `${baseUrl}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0`,\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"txTp\": \"pacs.002.001.12\",\r",
									"                \"channels\": [\r",
									"                    {\r",
									"                        \"id\": \"001@1.0.0\",\r",
									"                        \"host\": `${baseUrl}function/off-channel-aggregation-decisioning-processor-rel-1-0-0`,\r",
									"                        \"cfg\": \"1.0.0\",\r",
									"                        \"typologies\": [\r",
									"                            {\r",
									"                                \"id\": \"999_078@1.0.0\",\r",
									"                                \"host\": `${baseUrl}function/off-typology-processor-rel-1-0-0`,\r",
									"                                \"cfg\": \"1.0.0\",\r",
									"                                \"rules\": [\r",
									"                                    {\r",
									"                                        \"id\": \"078@1.0.0\",\r",
									"                                        \"host\": `${baseUrl}function/off-rule-078${version}`,\r",
									"                                        \"cfg\": \"1.0.0\"\r",
									"                                    }\r",
									"                                ]\r",
									"                            }\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        ]\r",
									"    }\r",
									"]\r",
									"\r",
									"const ruleConfig = [\r",
									"    {\r",
									"        \"id\": \"078@1.0.0\",\r",
									"        \"cfg\": \"1.0.0\",\r",
									"        \"config\": {\r",
									"            \"case\": [\r",
									"                {\r",
									"                    \"value\": \"WITHDRAWAL\",\r",
									"                    \"subRuleRef\": \".01\",\r",
									"                    \"outcome\": true,\r",
									"                    \"reason\": \"The transaction is identified as a cash withdrawal\"\r",
									"                },\r",
									"                {\r",
									"                    \"subRuleRef\": \".00\",\r",
									"                    \"outcome\": false,\r",
									"                    \"reason\": \"The transaction type is non-indicative for this typology\"\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    }\r",
									"]\r",
									"\r",
									"const tpExpressions = [\r",
									"    {\r",
									"        \"typology_name\": \"End-to-end test\",\r",
									"        \"id\": \"999_078@1.0.0\",\r",
									"        \"cfg\": \"1.0.0\",\r",
									"        \"rules\": [\r",
									"            {\r",
									"                \"id\": \"078@1.0.0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"ref\": \".00\",\r",
									"                \"true\": \"0\",\r",
									"                \"false\": \"0\"\r",
									"            },\r",
									"            {\r",
									"                \"id\": \"078@1.0.0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"ref\": \".01\",\r",
									"                \"true\": \"100\",\r",
									"                \"false\": \"0\"\r",
									"            }\r",
									"        ],\r",
									"        \"expression\": {\r",
									"            \"operator\": \"+\",\r",
									"            \"terms\": [\r",
									"                {\r",
									"                    \"id\": \"078@1.0.0\",\r",
									"                    \"cfg\": \"1.0.0\"\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    }\r",
									"]\r",
									"\r",
									"const transactionConfiguration = [\r",
									"    {\r",
									"        \"messages\": [\r",
									"            {\r",
									"                \"id\": \"004_078@1.0.0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"txTp\": \"pacs.002.001.12\",\r",
									"                \"channels\": [\r",
									"                    {\r",
									"                        \"id\": \"001@1.0.0\",\r",
									"                        \"cfg\": \"1.0.0\",\r",
									"                        \"typologies\": [\r",
									"                            {\r",
									"                                \"id\": \"999_078@1.0.0\",\r",
									"                                \"cfg\": \"1.0.0\",\r",
									"                                \"threshold\": 100\r",
									"                            }\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        ]\r",
									"    }\r",
									"]\r",
									"\r",
									"const pain001Transactions = [\r",
									"    {\r",
									"        \"TxTp\": \"pain.001.001.11\",\r",
									"        \"CstmrCdtTrfInitn\": {\r",
									"            \"GrpHdr\": {\r",
									"                \"MsgId\": \"2nfe98292ec04bf29b5d40ba998648gh\",\r",
									"                \"CreDtTm\": new Date(new Date(now - 30000).getTime()).toISOString(),\r",
									"                \"NbOfTxs\": 1,\r",
									"                \"InitgPty\": {\r",
									"                    \"Nm\": \"Ivan Reese Russel-Klein\",\r",
									"                    \"Id\": {\r",
									"                        \"PrvtId\": {\r",
									"                            \"DtAndPlcOfBirth\": {\r",
									"                                \"BirthDt\": \"1967-11-23\",\r",
									"                                \"CityOfBirth\": \"Unknown\",\r",
									"                                \"CtryOfBirth\": \"ZZ\"\r",
									"                            },\r",
									"                            \"Othr\": {\r",
									"                                \"Id\": \"\",\r",
									"                                \"SchmeNm\": {\r",
									"                                    \"Prtry\": \"MSISDN\"\r",
									"                                }\r",
									"                            }\r",
									"                        }\r",
									"                    },\r",
									"                    \"CtctDtls\": {\r",
									"                        \"MobNb\": \"\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"PmtInf\": {\r",
									"                \"PmtInfId\": \"2c516801007642dfb892944dde1cf845897\",\r",
									"                \"PmtMtd\": \"TRA\",\r",
									"                \"ReqdAdvcTp\": {\r",
									"                    \"DbtAdvc\": {\r",
									"                        \"Cd\": \"ADWD\",\r",
									"                        \"Prtry\": \"Advice with transaction details\"\r",
									"                    }\r",
									"                },\r",
									"                \"ReqdExctnDt\": {\r",
									"                    \"Dt\": \"2021-10-07\",\r",
									"                    \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r",
									"                },\r",
									"                \"Dbtr\": {\r",
									"                    \"Nm\": \"Ivan Reese Russel-Klein\",\r",
									"                    \"Id\": {\r",
									"                        \"PrvtId\": {\r",
									"                            \"DtAndPlcOfBirth\": {\r",
									"                                \"BirthDt\": \"1967-11-23\",\r",
									"                                \"CityOfBirth\": \"Unknown\",\r",
									"                                \"CtryOfBirth\": \"ZZ\"\r",
									"                            },\r",
									"                            \"Othr\": {\r",
									"                                \"Id\": \"\",\r",
									"                                \"SchmeNm\": {\r",
									"                                    \"Prtry\": \"MSISDN\"\r",
									"                                }\r",
									"                            }\r",
									"                        }\r",
									"                    },\r",
									"                    \"CtctDtls\": {\r",
									"                        \"MobNb\": \"\"\r",
									"                    }\r",
									"                },\r",
									"                \"DbtrAcct\": {\r",
									"                    \"Id\": {\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"03aeae97e5e2263c8c22bc0dec615b13ee6c90b6cf2dc0ffee72bcce9c66a19e\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"PASSPORT\"\r",
									"                            }\r",
									"                        }\r",
									"                    },\r",
									"                    \"Nm\": \"Ivan Russel-Klein\"\r",
									"                },\r",
									"                \"DbtrAgt\": {\r",
									"                    \"FinInstnId\": {\r",
									"                        \"ClrSysMmbId\": {\r",
									"                            \"MmbId\": \"dfsp001\"\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CdtTrfTxInf\": {\r",
									"                    \"PmtId\": {\r",
									"                        \"EndToEndId\": \"baf005dc-c223-4be1-8e5a-ed72ba472b\"\r",
									"                    },\r",
									"                    \"PmtTpInf\": {\r",
									"                        \"CtgyPurp\": {\r",
									"                            \"Prtry\": \"WITHDRAWAL\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"Amt\": {\r",
									"                        \"InstdAmt\": {\r",
									"                            \"Amt\": {\r",
									"                                \"Amt\": \"50431891779910900\",\r",
									"                                \"Ccy\": \"USD\"\r",
									"                            }\r",
									"                        },\r",
									"                        \"EqvtAmt\": {\r",
									"                            \"Amt\": {\r",
									"                                \"Amt\": \"50431891779910900\",\r",
									"                                \"Ccy\": \"USD\"\r",
									"                            },\r",
									"                            \"CcyOfTrf\": \"USD\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"ChrgBr\": \"DEBT\",\r",
									"                    \"CdtrAgt\": {\r",
									"                        \"FinInstnId\": {\r",
									"                            \"ClrSysMmbId\": {\r",
									"                                \"MmbId\": \"dfsp002\"\r",
									"                            }\r",
									"                        }\r",
									"                    },\r",
									"                    \"Cdtr\": {\r",
									"                        \"Nm\": \"\",\r",
									"                        \"Id\": {\r",
									"                            \"PrvtId\": {\r",
									"                                \"DtAndPlcOfBirth\": {\r",
									"                                    \"BirthDt\": \"1923-04-26\",\r",
									"                                    \"CityOfBirth\": \"\",\r",
									"                                    \"CtryOfBirth\": \"\"\r",
									"                                },\r",
									"                                \"Othr\": {\r",
									"                                    \"Id\": \"\",\r",
									"                                    \"SchmeNm\": {\r",
									"                                        \"Prtry\": \"MSISDN\"\r",
									"                                    }\r",
									"                                }\r",
									"                            }\r",
									"                        },\r",
									"                        \"CtctDtls\": {\r",
									"                            \"MobNb\": \"\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"CdtrAcct\": {\r",
									"                        \"Id\": {\r",
									"                            \"Othr\": {\r",
									"                                \"Id\": \"03aeae97e5e2263c8c22bc0dec615b13ee6c90b6cf2dc0ffee72bcce9c66a23c\",\r",
									"                                \"SchmeNm\": {\r",
									"                                    \"Prtry\": \"MSISDN\"\r",
									"                                }\r",
									"                            }\r",
									"                        },\r",
									"                        \"Nm\": \"April Adamson\"\r",
									"                    },\r",
									"                    \"Purp\": {\r",
									"                        \"Cd\": \"MP2P\"\r",
									"                    },\r",
									"                    \"RgltryRptg\": {\r",
									"                        \"Dtls\": {\r",
									"                            \"Tp\": \"BALANCE OF PAYMENTS\",\r",
									"                            \"Cd\": \"100\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"RmtInf\": {\r",
									"                        \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r",
									"                    },\r",
									"                    \"SplmtryData\": {\r",
									"                        \"Envlp\": {\r",
									"                            \"Doc\": {\r",
									"                                \"Cdtr\": {\r",
									"                                    \"FrstNm\": \"Ivan\",\r",
									"                                    \"MddlNm\": \"Reese\",\r",
									"                                    \"LastNm\": \"Russel-Klein\",\r",
									"                                    \"MrchntClssfctnCd\": \"BLANK\"\r",
									"                                },\r",
									"                                \"Dbtr\": {\r",
									"                                    \"FrstNm\": \"\",\r",
									"                                    \"MddlNm\": \"\",\r",
									"                                    \"LastNm\": \"\",\r",
									"                                    \"MrchntClssfctnCd\": \"BLANK\"\r",
									"                                },\r",
									"                                \"DbtrFinSvcsPrvdrFees\": {\r",
									"                                    \"Ccy\": \"USD\",\r",
									"                                    \"Amt\": \"499325661187237\"\r",
									"                                },\r",
									"                                \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"SplmtryData\": {\r",
									"                \"Envlp\": {\r",
									"                    \"Doc\": {\r",
									"                        \"InitgPty\": {\r",
									"                            \"InitrTp\": \"CONSUMER\",\r",
									"                            \"Glctn\": {\r",
									"                                \"Lat\": \"-3.4541\",\r",
									"                                \"Long\": \"38.4238\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"]\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/networkmap/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR doc IN networkConfiguration\r",
									"                    FILTER doc.active == true\r",
									"                    UPDATE doc WITH { active: false } IN networkConfiguration`\r",
									"        })\r",
									"    }\r",
									"}, () => {\r",
									"\r",
									"    pm.sendRequest({\r",
									"        url: `${arangourl}_db/networkmap/_api/cursor?waitForSync=true`,\r",
									"        method: 'POST',\r",
									"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"        body: {\r",
									"            mode: 'raw',\r",
									"            raw: JSON.stringify({\r",
									"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}\r",
									"                            INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration\r",
									"                            OPTIONS { overwrite: true }`\r",
									"            })\r",
									"        }\r",
									"    });\r",
									"})\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR transactionConfig IN ${JSON.stringify(transactionConfiguration)}\r",
									"                    INSERT transactionConfig INTO transactionConfiguration\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/transactionHistory/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR transaction IN ${JSON.stringify(pain001Transactions)}\r",
									"                    INSERT {_key: \"9990780011\", TxTp: transaction.TxTp, CstmrCdtTrfInitn: transaction.CstmrCdtTrfInitn} INTO transactionHistory\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
									"                    INSERT {_key: \"078\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: {\r",
									"            query: `FOR expression IN ${JSON.stringify(tpExpressions)}\r",
									"                    INSERT {_key: \"078\", id: expression.id, cfg: expression.cfg, rules: expression.rules, expression: expression.expression } INTO typologyExpression\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        }\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"TxTp\": \"pacs.002.001.12\",\n  \"FIToFIPmtSts\": {\n    \"GrpHdr\": {\n      \"MsgId\": \"{{transactionID}}\",\n      \"CreDtTm\": \"{{now}}\"\n    },\n    \"TxInfAndSts\": {\n      \"OrgnlInstrId\": \"2f68ae16-467a-4ac4-ba32-eb5\",\n      \"OrgnlEndToEndId\": \"baf005dc-c223-4be1-8e5a-ed72ba472b\",\n      \"TxSts\": \"ACCC\",\n        \"ChrgsInf\": [\n          {\n            \"Amt\": {\n              \"Amt\": 307.14,\n              \"Ccy\": \"USD\"\n            },\n            \"Agt\": {\n              \"FinInstnId\": {\n                \"ClrSysMmbId\": {\n                  \"MmbId\": \"dfsp001\"\n                }\n              }\n            }\n          },\n          {\n            \"Amt\": {\n              \"Amt\": 153.57,\n              \"Ccy\": \"USD\"\n            },\n            \"Agt\": {\n              \"FinInstnId\": {\n                \"ClrSysMmbId\": {\n                  \"MmbId\": \"dfsp001\"\n                }\n              }\n            }\n          },\n          {\n            \"Amt\": {\n              \"Amt\": 30.71,\n              \"Ccy\": \"USD\"\n            },\n            \"Agt\": {\n              \"FinInstnId\": {\n                \"ClrSysMmbId\": {\n                  \"MmbId\": \"dfsp002\"\n                }\n              }\n            }\n          }\n        ],\n        \"AccptncDtTm\": \"2021-12-03T15:24:26.000Z\",\n        \"InstgAgt\": {\n          \"FinInstnId\": {\n            \"ClrSysMmbId\": {\n              \"MmbId\": \"dfsp001\"\n            }\n          }\n        },\n        \"InstdAgt\": {\n          \"FinInstnId\": {\n            \"ClrSysMmbId\": {\n              \"MmbId\": \"dfsp002\"\n            }\n          }\n        }\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ofUrl}}function/off-transaction-monitoring-service{{TMSversion}}/transfer-response",
							"host": [
								"{{ofUrl}}function"
							],
							"path": [
								"off-transaction-monitoring-service{{TMSversion}}",
								"transfer-response"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(checkStatusCode, 5000);\r",
									"\r",
									"function checkStatusCode() {\r",
									"\r",
									"    pm.sendRequest('https://postman-echo.com/get', function (err, res) {\r",
									"\r",
									"        tests['status code should be 200'] = res.code === 200;\r",
									"\r",
									"    });\r",
									"}\r",
									"var Header = require('postman-collection').Header;\r",
									"pm.request.headers.append(Header.create(`Bearer ${pm.globals.get(\"arangoToken\")}`, 'Authorization'));\r",
									"console.log(\"received end to end id for above request \", pm.collectionVariables.get(\"EndToEndId\"));\r",
									"\r",
									"pm.environment.set(\"query\", JSON.stringify(\r",
									"    `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.FIToFIPmtSts.GrpHdr.MsgId == \r",
									"       `+ pm.collectionVariables.get(\"EndToEndId\") + `\r",
									"       return transaction `\r",
									")); "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"});\r",
									"\r",
									"pm.test(\"check that the report status is ALRT \", function () {\r",
									"    pm.expect(jsonData.result[0].report.status).to.eql(\"ALRT\");\r",
									"});\r",
									"\r",
									"pm.test(\"check that the rule result is withrawal \", function () {\r",
									"    pm.expect(jsonData.result[0].report.tadpResult.channelResult[0].typologyResult[0].ruleResults[0].result).to.eql(true);\r",
									"    pm.expect(jsonData.result[0].report.tadpResult.channelResult[0].typologyResult[0].ruleResults[0].subRuleRef).to.eql(\".01\");\r",
									"    pm.expect(jsonData.result[0].report.tadpResult.channelResult[0].typologyResult[0].ruleResults[0].reason).to.eql(\"The transaction is identified as a cash withdrawal\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"for transaction In transactions FILTER transaction.transaction.FIToFIPmtSts.GrpHdr.MsgId ==  {{EndToEndId}} return transaction \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{arangoUrl}}_db/transactionHistory/_api/cursor",
							"host": [
								"{{arangoUrl}}_db"
							],
							"path": [
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Scenario 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// 1 - Type = WITHDRAWAL TRUE (sub-rule ref .01) (The transaction is identified as a cash withdrawal)\r",
							"\r",
							"const now = new Date().getTime();\r",
							"const arangourl = pm.environment.get(\"arangoUrl\");\r",
							"\r",
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"\r",
							"var uuid = require('uuid');\r",
							"var myUUID = uuid.v4();\r",
							"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
							"\r",
							"const ruleConfig = [{\r",
							"    \"id\": \"078@1.0.0\",\r",
							"    \"cfg\": \"1.0.0\",\r",
							"    \"config\": {\r",
							"        \"case\": [\r",
							"            {\r",
							"                \"value\": \"WITHDRAWAL\",\r",
							"                \"subRuleRef\": \".01\",\r",
							"                \"outcome\": true,\r",
							"                \"reason\": \"The transaction is identified as a cash withdrawal\"\r",
							"            },\r",
							"            {\r",
							"                \"subRuleRef\": \".00\",\r",
							"                \"outcome\": false,\r",
							"                \"reason\": \"The transaction type is non-indicative for this typology\"\r",
							"            },\r",
							"        ]\r",
							"    }\r",
							"}]\r",
							"\r",
							"const pacs002Transactions = [\r",
							"    {\r",
							"        \"TxTp\": \"pacs.002.001.12\",\r",
							"        \"FIToFIPmtSts\": {\r",
							"            \"GrpHdr\": {\r",
							"                \"MsgId\": \"30bea71c5ayfd5d8d57f94b2a40e9789\",\r",
							"                \"CreDtTm\": new Date(now).toISOString()\r",
							"            },\r",
							"            \"TxInfAndSts\": {\r",
							"                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2255\",\r",
							"                \"OrgnlEndToEndId\": \"0a2d6e99a000c04f304bdc09e47d44ef532fa9e\",\r",
							"                \"TxSts\": \"ACCC\",\r",
							"                \"ChrgsInf\": [\r",
							"                    {\r",
							"                        \"Amt\": {\r",
							"                            \"Amt\": 307.14,\r",
							"                            \"Ccy\": \"USD\"\r",
							"                        },\r",
							"                        \"Agt\": {\r",
							"                            \"FinInstnId\": {\r",
							"                                \"ClrSysMmbId\": {\r",
							"                                    \"MmbId\": \"dfsp001\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    {\r",
							"                        \"Amt\": {\r",
							"                            \"Amt\": 153.57,\r",
							"                            \"Ccy\": \"USD\"\r",
							"                        },\r",
							"                        \"Agt\": {\r",
							"                            \"FinInstnId\": {\r",
							"                                \"ClrSysMmbId\": {\r",
							"                                    \"MmbId\": \"dfsp001\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    {\r",
							"                        \"Amt\": {\r",
							"                            \"Amt\": 30.71,\r",
							"                            \"Ccy\": \"USD\"\r",
							"                        },\r",
							"                        \"Agt\": {\r",
							"                            \"FinInstnId\": {\r",
							"                                \"ClrSysMmbId\": {\r",
							"                                    \"MmbId\": \"dfsp002\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    }\r",
							"                ],\r",
							"                \"AccptncDtTm\": \"2021-12-03T15:24:26.000Z\",\r",
							"                \"InstgAgt\": {\r",
							"                    \"FinInstnId\": {\r",
							"                        \"ClrSysMmbId\": {\r",
							"                            \"MmbId\": \"dfsp001\"\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"InstdAgt\": {\r",
							"                    \"FinInstnId\": {\r",
							"                        \"ClrSysMmbId\": {\r",
							"                            \"MmbId\": \"dfsp002\"\r",
							"                        }\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"\r",
							"const pain001Transactions = [\r",
							"    {\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CstmrCdtTrfInitn\": {\r",
							"            \"GrpHdr\": {\r",
							"                \"MsgId\": \"2nfe98292ec04bf29b5d40ba998648gh\",\r",
							"                \"CreDtTm\": new Date(new Date(now - 30000).getTime()).toISOString(),\r",
							"                \"NbOfTxs\": 1,\r",
							"                \"InitgPty\": {\r",
							"                    \"Nm\": \"Ivan Reese Russel-Klein\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1967-11-23\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"\"\r",
							"                    }\r",
							"                }\r",
							"            },\r",
							"            \"PmtInf\": {\r",
							"                \"PmtInfId\": \"2c516801007642dfb892944dde1cf845897\",\r",
							"                \"PmtMtd\": \"TRA\",\r",
							"                \"ReqdAdvcTp\": {\r",
							"                    \"DbtAdvc\": {\r",
							"                        \"Cd\": \"ADWD\",\r",
							"                        \"Prtry\": \"Advice with transaction details\"\r",
							"                    }\r",
							"                },\r",
							"                \"ReqdExctnDt\": {\r",
							"                    \"Dt\": \"2021-10-07\",\r",
							"                    \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r",
							"                },\r",
							"                \"Dbtr\": {\r",
							"                    \"Nm\": \"Ivan Reese Russel-Klein\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1967-11-23\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"\"\r",
							"                    }\r",
							"                },\r",
							"                \"DbtrAcct\": {\r",
							"                    \"Id\": {\r",
							"                        \"Othr\": {\r",
							"                            \"Id\": \"03aeae97e5e2263c8c22bc0dec615b13ee6c90b6cf2dc0ffee72bcce9c66a19e\",\r",
							"                            \"SchmeNm\": {\r",
							"                                \"Prtry\": \"PASSPORT\"\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"Nm\": \"Ivan Russel-Klein\"\r",
							"                },\r",
							"                \"DbtrAgt\": {\r",
							"                    \"FinInstnId\": {\r",
							"                        \"ClrSysMmbId\": {\r",
							"                            \"MmbId\": \"dfsp001\"\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"CdtTrfTxInf\": {\r",
							"                    \"PmtId\": {\r",
							"                        \"EndToEndId\": \"0a2d6e99a000c04f304bdc09e47d44ef532fa9e\"\r",
							"                    },\r",
							"                    \"PmtTpInf\": {\r",
							"                        \"CtgyPurp\": {\r",
							"                            \"Prtry\": \"WITHDRAWAL\"\r",
							"                        }\r",
							"                    },\r",
							"                    \"Amt\": {\r",
							"                        \"InstdAmt\": {\r",
							"                            \"Amt\": {\r",
							"                                \"Amt\": \"50431891779910900\",\r",
							"                                \"Ccy\": \"USD\"\r",
							"                            }\r",
							"                        },\r",
							"                        \"EqvtAmt\": {\r",
							"                            \"Amt\": {\r",
							"                                \"Amt\": \"50431891779910900\",\r",
							"                                \"Ccy\": \"USD\"\r",
							"                            },\r",
							"                            \"CcyOfTrf\": \"USD\"\r",
							"                        }\r",
							"                    },\r",
							"                    \"ChrgBr\": \"DEBT\",\r",
							"                    \"CdtrAgt\": {\r",
							"                        \"FinInstnId\": {\r",
							"                            \"ClrSysMmbId\": {\r",
							"                                \"MmbId\": \"dfsp002\"\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"Cdtr\": {\r",
							"                        \"Nm\": \"\",\r",
							"                        \"Id\": {\r",
							"                            \"PrvtId\": {\r",
							"                                \"DtAndPlcOfBirth\": {\r",
							"                                    \"BirthDt\": \"1923-04-26\",\r",
							"                                    \"CityOfBirth\": \"\",\r",
							"                                    \"CtryOfBirth\": \"\"\r",
							"                                },\r",
							"                                \"Othr\": {\r",
							"                                    \"Id\": \"\",\r",
							"                                    \"SchmeNm\": {\r",
							"                                        \"Prtry\": \"MSISDN\"\r",
							"                                    }\r",
							"                                }\r",
							"                            }\r",
							"                        },\r",
							"                        \"CtctDtls\": {\r",
							"                            \"MobNb\": \"\"\r",
							"                        }\r",
							"                    },\r",
							"                    \"CdtrAcct\": {\r",
							"                        \"Id\": {\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"03aeae97e5e2263c8c22bc0dec615b13ee6c90b6cf2dc0ffee72bcce9c66a23c\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        },\r",
							"                        \"Nm\": \"April Adamson\"\r",
							"                    },\r",
							"                    \"Purp\": {\r",
							"                        \"Cd\": \"MP2P\"\r",
							"                    },\r",
							"                    \"RgltryRptg\": {\r",
							"                        \"Dtls\": {\r",
							"                            \"Tp\": \"BALANCE OF PAYMENTS\",\r",
							"                            \"Cd\": \"100\"\r",
							"                        }\r",
							"                    },\r",
							"                    \"RmtInf\": {\r",
							"                        \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r",
							"                    },\r",
							"                    \"SplmtryData\": {\r",
							"                        \"Envlp\": {\r",
							"                            \"Doc\": {\r",
							"                                \"Cdtr\": {\r",
							"                                    \"FrstNm\": \"Ivan\",\r",
							"                                    \"MddlNm\": \"Reese\",\r",
							"                                    \"LastNm\": \"Russel-Klein\",\r",
							"                                    \"MrchntClssfctnCd\": \"BLANK\"\r",
							"                                },\r",
							"                                \"Dbtr\": {\r",
							"                                    \"FrstNm\": \"\",\r",
							"                                    \"MddlNm\": \"\",\r",
							"                                    \"LastNm\": \"\",\r",
							"                                    \"MrchntClssfctnCd\": \"BLANK\"\r",
							"                                },\r",
							"                                \"DbtrFinSvcsPrvdrFees\": {\r",
							"                                    \"Ccy\": \"USD\",\r",
							"                                    \"Amt\": \"499325661187237\"\r",
							"                                },\r",
							"                                \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r",
							"                            }\r",
							"                        }\r",
							"                    }\r",
							"                }\r",
							"            },\r",
							"            \"SplmtryData\": {\r",
							"                \"Envlp\": {\r",
							"                    \"Doc\": {\r",
							"                        \"InitgPty\": {\r",
							"                            \"InitrTp\": \"CONSUMER\",\r",
							"                            \"Glctn\": {\r",
							"                                \"Lat\": \"-3.4541\",\r",
							"                                \"Long\": \"38.4238\"\r",
							"                            }\r",
							"                        }\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/transactionHistory/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(pacs002Transactions)}\r",
							"                    INSERT {_key: \"99907810021\", TxTp: transaction.TxTp, FIToFIPmtSts: transaction.FIToFIPmtSts} INTO transactionHistory\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/transactionHistory/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(pain001Transactions)}\r",
							"                    INSERT {_key: \"99907810011\", TxTp: transaction.TxTp, CstmrCdtTrfInitn: transaction.CstmrCdtTrfInitn} INTO transactionHistory\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"078\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1 - Type = WITHDRAWAL TRUE (sub-rule ref .01) (The transaction is identified as a cash withdrawal)\r",
							"\r",
							"const arangourl = pm.environment.get(\"arangoUrl\");\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"const req = JSON.parse(request.data);\r",
							"\r",
							"const transactions = [\"99907810021\", \"99907810011\"]\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"should have rule result of true\", function () {\r",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(true);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"should have rule reason of 'The transaction is identified as a cash withdrawal' \", function () {\r",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"The transaction is identified as a cash withdrawal\");\r",
							"});\r",
							"\r",
							"pm.test(\"should have rule subRuleRef of '.01' \", function () {\r",
							"    pm.expect(jsonData.ruleResult.subRuleRef).to.be.eql(\".01\");\r",
							"});\r",
							"\r",
							"pm.test(\"Remove Seed Data from DB\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: `${arangourl}_db/transactionHistory/_api/cursor`,\r",
							"        method: 'POST',\r",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify({\r",
							"                query: `FOR transaction IN ${JSON.stringify(transactions)}\r",
							"                        REMOVE { _key: transaction } IN transactionHistory\r",
							"                        OPTIONS { ignoreErrors: true }`\r",
							"            })\r",
							"        }\r",
							"    })\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"transaction\": {\r\n    \"TxTp\": \"pacs.002.001.12\",\r\n    \"FIToFIPmtSts\": {\r\n      \"GrpHdr\": {\r\n        \"MsgId\": \"{{transactionID}}\",\r\n        \"CreDtTm\": \"{{now}}\"\r\n      },\r\n      \"TxInfAndSts\": {\r\n        \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2255\",\r\n        \"OrgnlEndToEndId\": \"0a2d6e99a000c04f304bdc09e47d44ef532fa9e\",\r\n        \"TxSts\": \"ACCC\",\r\n        \"ChrgsInf\": [\r\n          {\r\n            \"Amt\": {\r\n              \"Amt\": 307.14,\r\n              \"Ccy\": \"USD\"\r\n            },\r\n            \"Agt\": {\r\n              \"FinInstnId\": {\r\n                \"ClrSysMmbId\": {\r\n                  \"MmbId\": \"dfsp001\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          {\r\n            \"Amt\": {\r\n              \"Amt\": 153.57,\r\n              \"Ccy\": \"USD\"\r\n            },\r\n            \"Agt\": {\r\n              \"FinInstnId\": {\r\n                \"ClrSysMmbId\": {\r\n                  \"MmbId\": \"dfsp001\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          {\r\n            \"Amt\": {\r\n              \"Amt\": 30.71,\r\n              \"Ccy\": \"USD\"\r\n            },\r\n            \"Agt\": {\r\n              \"FinInstnId\": {\r\n                \"ClrSysMmbId\": {\r\n                  \"MmbId\": \"dfsp002\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ],\r\n        \"AccptncDtTm\": \"2021-12-03T15:24:26.000Z\",\r\n        \"InstgAgt\": {\r\n          \"FinInstnId\": {\r\n            \"ClrSysMmbId\": {\r\n              \"MmbId\": \"dfsp001\"\r\n            }\r\n          }\r\n        },\r\n        \"InstdAgt\": {\r\n          \"FinInstnId\": {\r\n            \"ClrSysMmbId\": {\r\n              \"MmbId\": \"dfsp002\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"networkMap\": {\r\n    \"messages\": [\r\n      {\r\n        \"id\": \"004@1.0.0\",\r\n        \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\r\n        \"cfg\": \"1.0.0\",\r\n        \"txTp\": \"pacs.002.001.12\",\r\n        \"channels\": [\r\n          {\r\n            \"id\": \"001@1.0.0\",\r\n            \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r\n            \"cfg\": \"1.0.0\",\r\n            \"typologies\": [\r\n              {\r\n                \"id\": \"999_078@1.0.0\",\r\n                \"host\": \"{{ofUrl}}function/off-typology-processor-rel-1-0-0\",\r\n                \"cfg\": \"1.0.0\",\r\n                \"rules\": [\r\n                  {\r\n                    \"id\": \"078@1.0.0\",\r\n                    \"host\": \"{{ofUrl}}function/off-rule-078{{version}}\",\r\n                    \"cfg\": \"1.0.0\"\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-078{{version}}/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-078{{version}}",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Scenario 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// 2 - Type = ANYTHING TRUE (sub-rule ref .00) (The transaction type is non-indicative for this typology)\r",
							"\r",
							"const now = new Date().getTime();\r",
							"const arangourl = pm.environment.get(\"arangoUrl\");\r",
							"\r",
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"\r",
							"var uuid = require('uuid');\r",
							"var myUUID = uuid.v4();\r",
							"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
							"\r",
							"const ruleConfig = [{\r",
							"    \"id\": \"078@1.0.0\",\r",
							"    \"cfg\": \"1.0.0\",\r",
							"    \"config\": {\r",
							"        \"case\": [\r",
							"            {\r",
							"                \"value\": \"WITHDRAWAL\",\r",
							"                \"subRuleRef\": \".01\",\r",
							"                \"outcome\": true,\r",
							"                \"reason\": \"The transaction is identified as a cash withdrawal\"\r",
							"            },\r",
							"            {\r",
							"                \"subRuleRef\": \".00\",\r",
							"                \"outcome\": false,\r",
							"                \"reason\": \"The transaction type is non-indicative for this typology\"\r",
							"            },\r",
							"        ]\r",
							"    }\r",
							"}]\r",
							"\r",
							"const pacs002Transactions = [\r",
							"    {\r",
							"        \"TxTp\": \"pacs.002.001.12\",\r",
							"        \"FIToFIPmtSts\": {\r",
							"            \"GrpHdr\": {\r",
							"                \"MsgId\": \"30bea71c5ayfd5d8d57f94b2a40e9789\",\r",
							"                \"CreDtTm\": new Date(now).toISOString()\r",
							"            },\r",
							"            \"TxInfAndSts\": {\r",
							"                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2255\",\r",
							"                \"OrgnlEndToEndId\": \"0a2d6e99a000c04f304bdc09e47d44ef532fa9e\",\r",
							"                \"TxSts\": \"ACCC\",\r",
							"                \"ChrgsInf\": [\r",
							"                    {\r",
							"                        \"Amt\": {\r",
							"                            \"Amt\": 307.14,\r",
							"                            \"Ccy\": \"USD\"\r",
							"                        },\r",
							"                        \"Agt\": {\r",
							"                            \"FinInstnId\": {\r",
							"                                \"ClrSysMmbId\": {\r",
							"                                    \"MmbId\": \"dfsp001\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    {\r",
							"                        \"Amt\": {\r",
							"                            \"Amt\": 153.57,\r",
							"                            \"Ccy\": \"USD\"\r",
							"                        },\r",
							"                        \"Agt\": {\r",
							"                            \"FinInstnId\": {\r",
							"                                \"ClrSysMmbId\": {\r",
							"                                    \"MmbId\": \"dfsp001\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    {\r",
							"                        \"Amt\": {\r",
							"                            \"Amt\": 30.71,\r",
							"                            \"Ccy\": \"USD\"\r",
							"                        },\r",
							"                        \"Agt\": {\r",
							"                            \"FinInstnId\": {\r",
							"                                \"ClrSysMmbId\": {\r",
							"                                    \"MmbId\": \"dfsp002\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    }\r",
							"                ],\r",
							"                \"AccptncDtTm\": \"2021-12-03T15:24:26.000Z\",\r",
							"                \"InstgAgt\": {\r",
							"                    \"FinInstnId\": {\r",
							"                        \"ClrSysMmbId\": {\r",
							"                            \"MmbId\": \"dfsp001\"\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"InstdAgt\": {\r",
							"                    \"FinInstnId\": {\r",
							"                        \"ClrSysMmbId\": {\r",
							"                            \"MmbId\": \"dfsp002\"\r",
							"                        }\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"\r",
							"const pain001Transactions = [\r",
							"    {\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CstmrCdtTrfInitn\": {\r",
							"            \"GrpHdr\": {\r",
							"                \"MsgId\": \"2nfe98292ec04bf29b5d40ba998648gh\",\r",
							"                \"CreDtTm\": new Date(new Date(now - 30000).getTime()).toISOString(),\r",
							"                \"NbOfTxs\": 1,\r",
							"                \"InitgPty\": {\r",
							"                    \"Nm\": \"Ivan Reese Russel-Klein\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1967-11-23\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"\"\r",
							"                    }\r",
							"                }\r",
							"            },\r",
							"            \"PmtInf\": {\r",
							"                \"PmtInfId\": \"2c516801007642dfb892944dde1cf845897\",\r",
							"                \"PmtMtd\": \"TRA\",\r",
							"                \"ReqdAdvcTp\": {\r",
							"                    \"DbtAdvc\": {\r",
							"                        \"Cd\": \"ADWD\",\r",
							"                        \"Prtry\": \"Advice with transaction details\"\r",
							"                    }\r",
							"                },\r",
							"                \"ReqdExctnDt\": {\r",
							"                    \"Dt\": \"2021-10-07\",\r",
							"                    \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r",
							"                },\r",
							"                \"Dbtr\": {\r",
							"                    \"Nm\": \"Ivan Reese Russel-Klein\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1967-11-23\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"\"\r",
							"                    }\r",
							"                },\r",
							"                \"DbtrAcct\": {\r",
							"                    \"Id\": {\r",
							"                        \"Othr\": {\r",
							"                            \"Id\": \"03aeae97e5e2263c8c22bc0dec615b13ee6c90b6cf2dc0ffee72bcce9c66a19e\",\r",
							"                            \"SchmeNm\": {\r",
							"                                \"Prtry\": \"PASSPORT\"\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"Nm\": \"Ivan Russel-Klein\"\r",
							"                },\r",
							"                \"DbtrAgt\": {\r",
							"                    \"FinInstnId\": {\r",
							"                        \"ClrSysMmbId\": {\r",
							"                            \"MmbId\": \"dfsp001\"\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"CdtTrfTxInf\": {\r",
							"                    \"PmtId\": {\r",
							"                        \"EndToEndId\": \"0a2d6e99a000c04f304bdc09e47d44ef532fa9e\"\r",
							"                    },\r",
							"                    \"PmtTpInf\": {\r",
							"                        \"CtgyPurp\": {\r",
							"                            \"Prtry\": \"ANYTHING\"\r",
							"                        }\r",
							"                    },\r",
							"                    \"Amt\": {\r",
							"                        \"InstdAmt\": {\r",
							"                            \"Amt\": {\r",
							"                                \"Amt\": \"50431891779910900\",\r",
							"                                \"Ccy\": \"USD\"\r",
							"                            }\r",
							"                        },\r",
							"                        \"EqvtAmt\": {\r",
							"                            \"Amt\": {\r",
							"                                \"Amt\": \"50431891779910900\",\r",
							"                                \"Ccy\": \"USD\"\r",
							"                            },\r",
							"                            \"CcyOfTrf\": \"USD\"\r",
							"                        }\r",
							"                    },\r",
							"                    \"ChrgBr\": \"DEBT\",\r",
							"                    \"CdtrAgt\": {\r",
							"                        \"FinInstnId\": {\r",
							"                            \"ClrSysMmbId\": {\r",
							"                                \"MmbId\": \"dfsp002\"\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"Cdtr\": {\r",
							"                        \"Nm\": \"\",\r",
							"                        \"Id\": {\r",
							"                            \"PrvtId\": {\r",
							"                                \"DtAndPlcOfBirth\": {\r",
							"                                    \"BirthDt\": \"1923-04-26\",\r",
							"                                    \"CityOfBirth\": \"\",\r",
							"                                    \"CtryOfBirth\": \"\"\r",
							"                                },\r",
							"                                \"Othr\": {\r",
							"                                    \"Id\": \"\",\r",
							"                                    \"SchmeNm\": {\r",
							"                                        \"Prtry\": \"MSISDN\"\r",
							"                                    }\r",
							"                                }\r",
							"                            }\r",
							"                        },\r",
							"                        \"CtctDtls\": {\r",
							"                            \"MobNb\": \"\"\r",
							"                        }\r",
							"                    },\r",
							"                    \"CdtrAcct\": {\r",
							"                        \"Id\": {\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"03aeae97e5e2263c8c22bc0dec615b13ee6c90b6cf2dc0ffee72bcce9c66a23c\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        },\r",
							"                        \"Nm\": \"April Adamson\"\r",
							"                    },\r",
							"                    \"Purp\": {\r",
							"                        \"Cd\": \"MP2P\"\r",
							"                    },\r",
							"                    \"RgltryRptg\": {\r",
							"                        \"Dtls\": {\r",
							"                            \"Tp\": \"BALANCE OF PAYMENTS\",\r",
							"                            \"Cd\": \"100\"\r",
							"                        }\r",
							"                    },\r",
							"                    \"RmtInf\": {\r",
							"                        \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r",
							"                    },\r",
							"                    \"SplmtryData\": {\r",
							"                        \"Envlp\": {\r",
							"                            \"Doc\": {\r",
							"                                \"Cdtr\": {\r",
							"                                    \"FrstNm\": \"Ivan\",\r",
							"                                    \"MddlNm\": \"Reese\",\r",
							"                                    \"LastNm\": \"Russel-Klein\",\r",
							"                                    \"MrchntClssfctnCd\": \"BLANK\"\r",
							"                                },\r",
							"                                \"Dbtr\": {\r",
							"                                    \"FrstNm\": \"\",\r",
							"                                    \"MddlNm\": \"\",\r",
							"                                    \"LastNm\": \"\",\r",
							"                                    \"MrchntClssfctnCd\": \"BLANK\"\r",
							"                                },\r",
							"                                \"DbtrFinSvcsPrvdrFees\": {\r",
							"                                    \"Ccy\": \"USD\",\r",
							"                                    \"Amt\": \"499325661187237\"\r",
							"                                },\r",
							"                                \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r",
							"                            }\r",
							"                        }\r",
							"                    }\r",
							"                }\r",
							"            },\r",
							"            \"SplmtryData\": {\r",
							"                \"Envlp\": {\r",
							"                    \"Doc\": {\r",
							"                        \"InitgPty\": {\r",
							"                            \"InitrTp\": \"CONSUMER\",\r",
							"                            \"Glctn\": {\r",
							"                                \"Lat\": \"-3.4541\",\r",
							"                                \"Long\": \"38.4238\"\r",
							"                            }\r",
							"                        }\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/transactionHistory/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(pacs002Transactions)}\r",
							"                    INSERT {_key: \"99907820021\", TxTp: transaction.TxTp, FIToFIPmtSts: transaction.FIToFIPmtSts} INTO transactionHistory\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/transactionHistory/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(pain001Transactions)}\r",
							"                    INSERT {_key: \"99907820011\", TxTp: transaction.TxTp, CstmrCdtTrfInitn: transaction.CstmrCdtTrfInitn} INTO transactionHistory\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"078\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1 - Type = ANYTHING FALSE (sub-rule ref .00) (The transaction type is non-indicative for this typology)\r",
							"\r",
							"const arangourl = pm.environment.get(\"arangoUrl\");\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"const req = JSON.parse(request.data);\r",
							"\r",
							"const transactions = [\"99907820021\", \"99907820011\"]\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"should have rule result of false\", function () {\r",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(false);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"should have rule reason of 'The transaction type is non-indicative for this typology' \", function () {\r",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"The transaction type is non-indicative for this typology\");\r",
							"});\r",
							"\r",
							"pm.test(\"should have rule subRuleRef of '.00' \", function () {\r",
							"    pm.expect(jsonData.ruleResult.subRuleRef).to.be.eql(\".00\");\r",
							"});\r",
							"\r",
							"pm.test(\"Remove Seed Data from DB\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: `${arangourl}_db/transactionHistory/_api/cursor`,\r",
							"        method: 'POST',\r",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify({\r",
							"                query: `FOR transaction IN ${JSON.stringify(transactions)}\r",
							"                        REMOVE { _key: transaction } IN transactionHistory\r",
							"                        OPTIONS { ignoreErrors: true }`\r",
							"            })\r",
							"        }\r",
							"    })\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"transaction\": {\r\n    \"TxTp\": \"pacs.002.001.12\",\r\n    \"FIToFIPmtSts\": {\r\n      \"GrpHdr\": {\r\n        \"MsgId\": \"{{transactionID}}\",\r\n        \"CreDtTm\": \"{{now}}\"\r\n      },\r\n      \"TxInfAndSts\": {\r\n        \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2255\",\r\n        \"OrgnlEndToEndId\": \"0a2d6e99a000c04f304bdc09e47d44ef532fa9e\",\r\n        \"TxSts\": \"ACCC\",\r\n        \"ChrgsInf\": [\r\n          {\r\n            \"Amt\": {\r\n              \"Amt\": 307.14,\r\n              \"Ccy\": \"USD\"\r\n            },\r\n            \"Agt\": {\r\n              \"FinInstnId\": {\r\n                \"ClrSysMmbId\": {\r\n                  \"MmbId\": \"dfsp001\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          {\r\n            \"Amt\": {\r\n              \"Amt\": 153.57,\r\n              \"Ccy\": \"USD\"\r\n            },\r\n            \"Agt\": {\r\n              \"FinInstnId\": {\r\n                \"ClrSysMmbId\": {\r\n                  \"MmbId\": \"dfsp001\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          {\r\n            \"Amt\": {\r\n              \"Amt\": 30.71,\r\n              \"Ccy\": \"USD\"\r\n            },\r\n            \"Agt\": {\r\n              \"FinInstnId\": {\r\n                \"ClrSysMmbId\": {\r\n                  \"MmbId\": \"dfsp002\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ],\r\n        \"AccptncDtTm\": \"2021-12-03T15:24:26.000Z\",\r\n        \"InstgAgt\": {\r\n          \"FinInstnId\": {\r\n            \"ClrSysMmbId\": {\r\n              \"MmbId\": \"dfsp001\"\r\n            }\r\n          }\r\n        },\r\n        \"InstdAgt\": {\r\n          \"FinInstnId\": {\r\n            \"ClrSysMmbId\": {\r\n              \"MmbId\": \"dfsp002\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"networkMap\": {\r\n    \"messages\": [\r\n      {\r\n        \"id\": \"004@1.0.0\",\r\n        \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\r\n        \"cfg\": \"1.0.0\",\r\n        \"txTp\": \"pacs.002.001.12\",\r\n        \"channels\": [\r\n          {\r\n            \"id\": \"001@1.0.0\",\r\n            \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r\n            \"cfg\": \"1.0.0\",\r\n            \"typologies\": [\r\n              {\r\n                \"id\": \"999_078@1.0.0\",\r\n                \"host\": \"{{ofUrl}}function/off-typology-processor-rel-1-0-0\",\r\n                \"cfg\": \"1.0.0\",\r\n                \"rules\": [\r\n                  {\r\n                    \"id\": \"078@1.0.0\",\r\n                    \"host\": \"{{ofUrl}}function/off-rule-078{{version}}\",\r\n                    \"cfg\": \"1.0.0\"\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-078{{version}}/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-078{{version}}",
						"execute"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "EndToEndId",
			"value": ""
		},
		{
			"key": "transactionID",
			"value": ""
		}
	]
}