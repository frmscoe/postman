{
	"info": {
		"_postman_id": "868700ec-5dce-48ee-99b3-e44fee534523",
		"name": "Rule008 Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27083427"
  },
	"item": [
		{
			"name": "AM-814 Scenario 6 E2E",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var uuid = require('uuid');\r",
									"var myUUID = uuid.v4();\r",
									"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
									"\r",
									"const msgId = pm.collectionVariables.get(\"transactionID\");\r",
									"const arangourl = pm.environment.get('arangoUrl');\r",
									"const version = pm.environment.get('version');\r",
									"const baseUrl = pm.environment.get('ofUrl');\r",
									"\r",
									"let e2eID = JSON.stringify(msgId);\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"pm.collectionVariables.set(\"EndToEndId\", e2eID);\r",
									"\r",
									"const networkMaps = [\r",
									"    {\r",
									"        \"key\": \"008\",\r",
									"        \"active\": true,\r",
									"        \"cfg\": \"1.0.0\",\r",
									"        \"messages\": [\r",
									"            {\r",
									"                \"id\": \"004_008@1.0.0\",\r",
									"                \"host\": `${baseUrl}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0`,\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"txTp\": \"pacs.002.001.12\",\r",
									"                \"channels\": [\r",
									"                    {\r",
									"                        \"id\": \"001@1.0.0\",\r",
									"                        \"host\": `${baseUrl}function/off-channel-aggregation-decisioning-processor-rel-1-0-0`,\r",
									"                        \"cfg\": \"1.0.0\",\r",
									"                        \"typologies\": [\r",
									"                            {\r",
									"                                \"id\": \"999_008@1.0.0\",\r",
									"                                \"host\": `${baseUrl}function/off-typology-processor-rel-1-0-0`,\r",
									"                                \"cfg\": \"1.0.0\",\r",
									"                                \"rules\": [\r",
									"                                    {\r",
									"                                        \"id\": \"008@1.0.0\",\r",
									"                                        \"host\": `${baseUrl}function/off-rule008${version}`,\r",
									"                                        \"cfg\": \"1.0.0\"\r",
									"                                    }\r",
									"                                ]\r",
									"                            }\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        ]\r",
									"    }\r",
									"]\r",
									"\r",
									"const ruleConfig = [\r",
									"    {\r",
									"        \"id\": \"008@1.0.0\",\r",
									"        \"cfg\": \"1.0.0\",\r",
									"        \"config\": {\r",
									"            \"bands\": [\r",
									"                {\r",
									"                    \"subRuleRef\": \".02\",\r",
									"                    \"outcome\": false,\r",
									"                    \"reason\": \"Different creditor in consecutive transactions\"\r",
									"                },\r",
									"                {\r",
									"                    \"subRuleRef\": \".03\",\r",
									"                    \"outcome\": true,\r",
									"                    \"reason\": \"Same creditor found in consecutive transactions\"\r",
									"                },\r",
									"                {\r",
									"                    \"subRuleRef\": \".00\",\r",
									"                    \"outcome\": false,\r",
									"                    \"reason\": \"Insufficient account history\"\r",
									"                },\r",
									"                {\r",
									"                    \"subRuleRef\": \".01\",\r",
									"                    \"outcome\": false,\r",
									"                    \"reason\": \"Unsuccessful transaction\"\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    }\r",
									"]\r",
									"\r",
									"const tpExpressions = [\r",
									"    {\r",
									"        \"typology_name\": \"End-to-end test\",\r",
									"        \"id\": \"999_008@1.0.0\",\r",
									"        \"cfg\": \"1.0.0\",\r",
									"        \"rules\": [\r",
									"            {\r",
									"                \"id\": \"008@1.0.0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"ref\": \".00\",\r",
									"                \"true\": \"0\",\r",
									"                \"false\": \"0\"\r",
									"            },\r",
									"            {\r",
									"                \"id\": \"008@1.0.0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"ref\": \".01\",\r",
									"                \"true\": \"0\",\r",
									"                \"false\": \"0\"\r",
									"            },\r",
									"            {\r",
									"                \"id\": \"008@1.0.0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"ref\": \".02\",\r",
									"                \"true\": \"0\",\r",
									"                \"false\": \"0\"\r",
									"            },\r",
									"            {\r",
									"                \"id\": \"008@1.0.0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"ref\": \".03\",\r",
									"                \"true\": \"200\",\r",
									"                \"false\": \"0\"\r",
									"            }\r",
									"        ],\r",
									"        \"expression\": {\r",
									"            \"operator\": \"+\",\r",
									"            \"terms\": [\r",
									"                {\r",
									"                    \"id\": \"008@1.0.0\",\r",
									"                    \"cfg\": \"1.0.0\"\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    }\r",
									"]\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/networkmap/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR doc IN networkConfiguration\r",
									"                    FILTER doc.active == true\r",
									"                    UPDATE doc WITH { active: false } IN networkConfiguration`\r",
									"        })\r",
									"    }\r",
									"}, () => {\r",
									"    pm.sendRequest({\r",
									"        url: `${arangourl}_db/networkmap/_api/cursor?waitForSync=true`,\r",
									"        method: 'POST',\r",
									"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"        body: {\r",
									"            mode: 'raw',\r",
									"            raw: JSON.stringify({\r",
									"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}\r",
									"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration\r",
									"                    OPTIONS { overwrite: true }`\r",
									"            })\r",
									"        }\r",
									"    });\r",
									"})\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
									"                    INSERT {_key: \"008\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: {\r",
									"            query: `FOR expression IN ${JSON.stringify(tpExpressions)}\r",
									"                    INSERT {_key: \"008\", id: expression.id, cfg: expression.cfg, rules: expression.rules, expression: expression.expression } INTO typologyExpression\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        }\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"should not have errors\", function () {\r",
									"    pm.expect(jsonData).not.to.have.property('errors')\r",
									"});\r",
									"\r",
									"pm.test(\"should be a valid transaction\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Transaction is valid\");\r",
									"});\r",
									"\r",
									"pm.test(\"should send to data preparation successfully\", function () {\r",
									"    pm.expect(jsonData.sent).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"should have the same outgoing and incoming json\", function () {\r",
									"    pm.expect(jsonData.data).to.eql(req);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"TxTp\": \"pacs.002.001.12\",\r\n  \"FIToFIPmtSts\": {\r\n    \"GrpHdr\": {\r\n      \"MsgId\": \"{{transactionID}}\",\r\n      \"CreDtTm\": \"2021-11-03T07:24:48.000Z\"\r\n    },\r\n    \"TxInfAndSts\": {\r\n      \"OrgnlInstrId\": \"2f68ae16-467a-4ac4-ba32-897\",\r\n      \"OrgnlEndToEndId\": \"{{transactionID}}\",\r\n      \"TxSts\": \"ACCC\",\r\n      \"ChrgsInf\": [\r\n        {\r\n          \"Amt\": {\r\n            \"Amt\": 157605510200862,\r\n            \"Ccy\": \"USD\"\r\n          },\r\n          \"Agt\": {\r\n            \"FinInstnId\": {\r\n              \"ClrSysMmbId\": {\r\n                \"MmbId\": \"dfsp001\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"Amt\": {\r\n            \"Amt\": 15918156530287100,\r\n            \"Ccy\": \"USD\"\r\n          },\r\n          \"Agt\": {\r\n            \"FinInstnId\": {\r\n              \"ClrSysMmbId\": {\r\n                \"MmbId\": \"dfsp001\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"Amt\": {\r\n            \"Amt\": 15918156530287100,\r\n            \"Ccy\": \"USD\"\r\n          },\r\n          \"Agt\": {\r\n            \"FinInstnId\": {\r\n              \"ClrSysMmbId\": {\r\n                \"MmbId\": \"dfsp002\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      \"AccptncDtTm\": \"2021-11-03T07:24:47.000Z\",\r\n      \"InstgAgt\": {\r\n        \"FinInstnId\": {\r\n          \"ClrSysMmbId\": {\r\n            \"MmbId\": \"dfsp001\"\r\n          }\r\n        }\r\n      },\r\n      \"InstdAgt\": {\r\n        \"FinInstnId\": {\r\n          \"ClrSysMmbId\": {\r\n            \"MmbId\": \"dfsp002\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ofUrl}}function/off-transaction-monitoring-service{{TMSversion}}/transfer-response",
							"host": [
								"{{ofUrl}}function"
							],
							"path": [
								"off-transaction-monitoring-service{{TMSversion}}",
								"transfer-response"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" setTimeout(checkStatusCode, 5000);\r",
									"\r",
									"function checkStatusCode() {\r",
									"\r",
									"    pm.sendRequest('https://postman-echo.com/get', function (err, res) {\r",
									"\r",
									"        tests['status code should be 200'] = res.code === 200;\r",
									"\r",
									"    });\r",
									"}\r",
									"\r",
									"var Header = require('postman-collection').Header;\r",
									"pm.request.headers.append(Header.create(`Bearer ${pm.globals.get(\"arangoToken\")}`, 'Authorization'));\r",
									"console.log(\"received end to end id for above request \", pm.collectionVariables.get(\"EndToEndId\"));\r",
									"\r",
									"pm.globals.set(\"query\", JSON.stringify(\r",
									"    `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.FIToFIPmtSts.GrpHdr.MsgId == \r",
									"       `+ pm.collectionVariables.get(\"EndToEndId\") + `\r",
									"       return transaction `\r",
									"));\r",
									"\r",
									"console.log(pm.environment.get(\"query\"))\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"    pm.expect(jsonData.result[0].networkMap.messages[0].cfg).to.eql('1.0.0');\r",
									"});\r",
									"\r",
									"pm.test(\"check that the report status is NALT \", function () {\r",
									"    pm.expect(jsonData.result[0].report.status).to.eql(\"NALT\")\r",
									"});\r",
									"\r",
									"pm.test(\"check that the typology result matches config band \", function () {\r",
									"    pm.expect(jsonData.result[0].report.tadpResult.channelResult[0].typologyResult[0].ruleResults[0].result).to.eql(false);\r",
									"    pm.expect(jsonData.result[0].report.tadpResult.channelResult[0].typologyResult[0].ruleResults[0].subRuleRef).to.eql(\".00\");\r",
									"    pm.expect(jsonData.result[0].report.tadpResult.channelResult[0].typologyResult[0].ruleResults[0].reason).to.eql(\"Insufficient account history\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"for transaction In transactions FILTER transaction.transaction.FIToFIPmtSts.GrpHdr.MsgId ==  {{EndToEndId}} return transaction \"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{arangoUrl}}_db/transactionHistory/_api/cursor",
							"host": [
								"{{arangoUrl}}_db"
							],
							"path": [
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AM-814 Scenario 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"const req = JSON.parse(request.data);",
							"const arangourl = pm.environment.get('arangoUrl');",
							"const config = [\"008\"];",
							"",
							"const graphTransactions = [",
							"    \"2aacbee2475486588d644cc75aaf4190212\"",
							"]",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have rule result of false\", function () {",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(false);",
							"});",
							"",
							"pm.test(\"should have rule subRuleRef of '.00' \", function () {",
							"    pm.expect(jsonData.ruleResult.subRuleRef).to.be.eql(\".00\");",
							"});",
							"",
							"pm.test(\"should have rule reason of 'Insufficient account history' \", function () {",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"Insufficient account history\");",
							"});",
							"",
							"//Remove data inserted by pre-req script transactionGraph",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});",
							"",
							"//Remove data inserted by pre-req script Configuration",
							"",
							"pm.test(\"Remove Seed Data from Configuration\", function () {",
							"    pm.sendRequest({",
							"        url:`${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR config IN ${JSON.stringify(config)}",
							"                        REMOVE { _key: config } IN configuration",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const now = new Date().getTime();\r",
							"const arangourl = pm.environment.get('arangoUrl');\r",
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"\r",
							"var uuid = require('uuid');\r",
							"var myUUID = uuid.v4();\r",
							"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
							"\r",
							"const ruleConfig = [\r",
							"    {\r",
							"        \"id\": \"008@1.0.0\",\r",
							"        \"cfg\": \"1.0.0\",\r",
							"        \"config\": {\r",
							"            \"bands\": [\r",
							"                {\r",
							"                    \"subRuleRef\": \".02\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Different creditor in consecutive transactions\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".03\",\r",
							"                    \"outcome\": true,\r",
							"                    \"reason\": \"Same creditor found in consecutive transactions\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".00\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Insufficient account history\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".01\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Unsuccessful transaction\"\r",
							"                }\r",
							"            ]\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"const transactionGraph = [\r",
							"    {\r",
							"    \"_key\": \"2aacbee2475486588d644cc75aaf4190212\",\r",
							"    \"_from\": \"accounts/24058ebbdd500fe2307cdd59186e0abcd9726de434ae492dbe9d1e12822914aa\",\r",
							"    \"_to\": \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"    \"TxTp\": \"pacs.008.001.10\",\r",
							"    \"CreDtTm\": `${now - 10,000}`,\r",
							"    \"Amt\": 10000,\r",
							"    \"Ccy\": \"USD\",\r",
							"    \"PmtInfId\": \"9ff1b774effa4ea6be3c1d190b269629\",\r",
							"    \"EndToEndId\": \"2c516801007642dfb892d212\",\r",
							"    \"lat\": \"-3.0781234\",\r",
							"    \"long\": \"37.3535156\"\r",
							"  }\r",
							"]\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
							"                    INSERT transaction INTO transactionRelationship\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"// Inserting Configuration for testing\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"008\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"transaction\": {\n      \"TxTp\": \"pacs.002.001.12\",\n      \"FIToFIPmtSts\": {\n         \"GrpHdr\": {\n            \"MsgId\": \"{{transactionID}}\",\n            \"CreDtTm\": \"{{now}}\"\n         },\n         \"TxInfAndSts\": {\n            \"OrgnlInstrId\": \"9ff1b774effa4ea6be3c1d190b269629\",\n            \"OrgnlEndToEndId\": \"2c516801007642dfb892d212\",\n            \"TxSts\": \"ACCC\",\n            \"ChrgsInf\": [\n               {\n                  \"Amt\": {\n                     \"Amt\": 307.14,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp001\"\n                        }\n                     }\n                  }\n               },\n               {\n                  \"Amt\": {\n                     \"Amt\": 153.57,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp001\"\n                        }\n                     }\n                  }\n               },\n               {\n                  \"Amt\": {\n                     \"Amt\": 30.71,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp002\"\n                        }\n                     }\n                  }\n               }\n            ],\n            \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n            \"InstgAgt\": {\n               \"FinInstnId\": {\n                  \"ClrSysMmbId\": {\n                     \"MmbId\": \"dfsp001\"\n                  }\n               }\n            },\n            \"InstdAgt\": {\n               \"FinInstnId\": {\n                  \"ClrSysMmbId\": {\n                     \"MmbId\": \"dfsp002\"\n                  }\n               }\n            }\n         }\n      }\n   },\n   \"networkMap\": {\n      \"messages\": [\n        {\n            \"id\": \"004_008@1.0.0\",\n            \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor{{version}}\",\n            \"cfg\": \"1.0.0\",\n            \"txTp\": \"pacs.002.001.12\",\n            \"channels\": [\n                {\n                    \"id\": \"001@1.0.0\",\n                    \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor{{version}}\",\n                    \"cfg\": \"1.0.0\",\n                    \"typologies\": [\n                        {\n                            \"id\": \"999_008@1.0.0\",\n                            \"host\": \"{{ofUrl}}function/off-typology-processor{{version}}\",\n                            \"cfg\": \"1.0.0\",\n                            \"rules\": [\n                                {\n                                    \"id\": \"008@1.0.0\",\n                                    \"host\": \"{{ofUrl}}function/off-rule008{{version}}\",\n                                    \"cfg\": \"1.0.0\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n   }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-008{{version}}/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-008{{version}}",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "AM-814 Scenario 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"const req = JSON.parse(request.data);",
							"const arangourl = pm.environment.get('arangoUrl');",
							"const config = [\"008\"];",
							"",
							"const pacs008Transactions = [",
							"    \"99900820081\"",
							"]",
							"const graphTransactions = [",
							"    \"d923682a97089a8416151ad1e58355b8eeee108007\"",
							"]",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have rule result of false\", function () {",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(false);",
							"});",
							"",
							"pm.test(\"should have rule subRuleRef of '.01' \", function () {",
							"    pm.expect(jsonData.ruleResult.subRuleRef).to.be.eql(\".01\");",
							"});",
							"",
							"pm.test(\"should have rule reason of 'Unsuccessful transaction' \", function () {",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"Unsuccessful transaction\");",
							"});",
							"",
							"//Remove data inserted by pre-req script transactionHistory",
							"",
							"pm.test(\"Remove Seed Data from transactionHistory\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/transactionHistory/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(pacs008Transactions)}",
							"                        REMOVE { _key: transaction } IN transactionHistoryPacs008",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});",
							"",
							"//Remove data inserted by pre-req script transactionGraph",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});",
							"",
							"//Remove data inserted by pre-req script Configuration",
							"",
							"pm.test(\"Remove Seed Data from Configuration\", function () {",
							"    pm.sendRequest({",
							"        url:`${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR config IN ${JSON.stringify(config)}",
							"                        REMOVE { _key: config } IN configuration",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"const now = new Date().getTime();\r",
							"const arangourl = pm.environment.get('arangoUrl');\r",
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"\r",
							"var uuid = require('uuid');\r",
							"var myUUID = uuid.v4();\r",
							"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
							"\r",
							"const ruleConfig = [\r",
							"    {\r",
							"        \"id\": \"008@1.0.0\",\r",
							"        \"cfg\": \"1.0.0\",\r",
							"        \"config\": {\r",
							"            \"bands\": [\r",
							"                {\r",
							"                    \"subRuleRef\": \".02\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Different creditor in consecutive transactions\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".03\",\r",
							"                    \"outcome\": true,\r",
							"                    \"reason\": \"Same creditor found in consecutive transactions\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".00\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Insufficient account history\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".01\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Unsuccessful transaction\"\r",
							"                }\r",
							"            ]\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"const pacs008Transactions = [\r",
							"    {\r",
							"        \"TxTp\": \"pacs.008.001.10\",\r",
							"        \"FIToFICstmrCdt\": {\r",
							"            \"GrpHdr\": {\r",
							"                \"MsgId\": \"96ae98292ec04bff2985d40ba99864c38\",\r",
							"                \"CreDtTm\": new Date(now - 10000).toISOString(),\r",
							"                \"NbOfTxs\": 1,\r",
							"                \"SttlmInf\": {\r",
							"                    \"SttlmMtd\": \"CLRG\"\r",
							"                }\r",
							"            },\r",
							"            \"CdtTrfTxInf\": {\r",
							"                \"PmtId\": {\r",
							"                    \"InstrId\": \"6453bcdeb5354c3caa5c81a3976a14d6\",\r",
							"                    \"EndToEndId\": \"6453bcdeb5354c3caa5c81a3976a14d6\"\r",
							"                },\r",
							"                \"IntrBkSttlmAmt\": {\r",
							"                    \"Amt\": {\r",
							"                        \"Amt\": 31020.89,\r",
							"                        \"Ccy\": \"USD\"\r",
							"                    }\r",
							"                },\r",
							"                \"InstdAmt\": {\r",
							"                    \"Amt\": {\r",
							"                        \"Amt\": 9000,\r",
							"                        \"Ccy\": \"USD\"\r",
							"                    }\r",
							"                },\r",
							"                \"ChrgBr\": \"DEBT\",\r",
							"                \"ChrgsInf\": {\r",
							"                    \"Amt\": {\r",
							"                        \"Amt\": 307.14,\r",
							"                        \"Ccy\": \"USD\"\r",
							"                    },\r",
							"                    \"Agt\": {\r",
							"                        \"FinInstnId\": {\r",
							"                            \"ClrSysMmbId\": {\r",
							"                                \"MmbId\": \"dfsp001\"\r",
							"                            }\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"InitgPty\": {\r",
							"                    \"Nm\": \"April Blake Grant\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1968-02-01\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"+27730975224\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"+27-730975224\"\r",
							"                    }\r",
							"                },\r",
							"                \"Dbtr\": {\r",
							"                    \"Nm\": \"April Blake Grant\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1968-02-01\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"+27730975224\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"+27-730975224\"\r",
							"                    }\r",
							"                },\r",
							"                \"DbtrAcct\": {\r",
							"                    \"Id\": {\r",
							"                        \"Othr\": {\r",
							"                            \"Id\": \"352afab0eed3e035ff73cec422c7d4a9f66f289cee9c16dc6bca02eba4d91566\",\r",
							"                            \"SchmeNm\": {\r",
							"                                \"Prtry\": \"PSEUDO\"\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"Nm\": \"April Grant\"\r",
							"                },\r",
							"                \"DbtrAgt\": {\r",
							"                    \"FinInstnId\": {\r",
							"                        \"ClrSysMmbId\": {\r",
							"                            \"MmbId\": \"dfsp001\"\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"CdtrAgt\": {\r",
							"                    \"FinInstnId\": {\r",
							"                        \"ClrSysMmbId\": {\r",
							"                            \"MmbId\": \"dfsp002\"\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"Cdtr\": {\r",
							"                    \"Nm\": \"Felicia Easton Quill\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1935-05-08\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"+27707650428\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"+27-707650428\"\r",
							"                    }\r",
							"                },\r",
							"                \"CdtrAcct\": {\r",
							"                    \"Id\": {\r",
							"                        \"Othr\": {\r",
							"                            \"Id\": \"24058ebbdd500fe2307cdd55186e0abcd9726de434ae492dbe9d1e12822914aa\",\r",
							"                            \"SchmeNm\": {\r",
							"                                \"Prtry\": \"PSEUDO\"\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"Nm\": \"Felicia Quill\"\r",
							"                },\r",
							"                \"Purp\": {\r",
							"                    \"Cd\": \"MP2P\"\r",
							"                }\r",
							"            },\r",
							"            \"RgltryRptg\": {\r",
							"                \"Dtls\": {\r",
							"                    \"Tp\": \"BALANCE OF PAYMENTS\",\r",
							"                    \"Cd\": \"100\"\r",
							"                }\r",
							"            },\r",
							"            \"RmtInf\": {\r",
							"                \"Ustrd\": \"Payment of USD 30713.75 from April to Felicia\"\r",
							"            },\r",
							"            \"SplmtryData\": {\r",
							"                \"Envlp\": {\r",
							"                    \"Doc\": {\r",
							"                        \"Xprtn\": \"2021-11-30T10:38:56.000Z\"\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"const transactionGraph = [\r",
							"    {\r",
							"        _key: \"d923682a97089a8416151ad1e58355b8eeee108007\",\r",
							"        _from: \"accounts/352afab0eed3e035ff73cec422c7d4a9f66f289cee9c16dc6bca02eba4d91566\",\r",
							"        _to: \"accounts/24058ebbdd500fe2307cdd55186e0abcd9726de434ae492dbe9d1e12822914aa\",\r",
							"        Amt: 9000,\r",
							"        TxTp: \"pacs.008.001.10\",\r",
							"        CreDtTm: new Date(now).toISOString(),\r",
							"        PmtInfId: \"6453bcdeb5354c3caa5c81a3976a14d6\",\r",
							"        EndToEndId: \"6453bcdeb5354c3caa5c81a3976a14d6\"\r",
							"    }\r",
							"]\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/transactionHistory/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(pacs008Transactions)}\r",
							"                    INSERT {_key: \"99900820081\", TxTp: transaction.TxTp, \r",
							"                            FIToFICstmrCdt: transaction.FIToFICstmrCdt, \r",
							"                            EndToEndId: transaction.FIToFICstmrCdt.CdtTrfTxInf.PmtId.EndToEndId, \r",
							"                            CreditorAcctId: transaction.FIToFICstmrCdt.CdtTrfTxInf.CdtrAcct.Id.Othr.Id,\r",
							"                            DebtorAcctId: transaction.FIToFICstmrCdt.CdtTrfTxInf.DbtrAcct.Id.Othr.Id, \r",
							"                            CreDtTm: transaction.FIToFICstmrCdt.GrpHdr.CreDtTm \r",
							"                            } INTO transactionHistoryPacs008\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
							"                    INSERT transaction INTO transactionRelationship\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"// Inserting Configuration for testing\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"008\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"transaction\": {\n      \"TxTp\": \"pacs.002.001.12\",\n      \"FIToFIPmtSts\": {\n         \"GrpHdr\": {\n            \"MsgId\": \"{{transactionID}}\",\n            \"CreDtTm\": \"{{now}}\"\n         },\n         \"TxInfAndSts\": {\n            \"OrgnlInstrId\": \"6453bcdeb5354c3caa5c81a3976a14d6\",\n            \"OrgnlEndToEndId\": \"6453bcdeb5354c3caa5c81a3976a14d6\",\n            \"TxSts\": \"ACSC\",\n            \"ChrgsInf\": [\n               {\n                  \"Amt\": {\n                     \"Amt\": 307.14,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp001\"\n                        }\n                     }\n                  }\n               },\n               {\n                  \"Amt\": {\n                     \"Amt\": 153.57,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp001\"\n                        }\n                     }\n                  }\n               },\n               {\n                  \"Amt\": {\n                     \"Amt\": 30.71,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp002\"\n                        }\n                     }\n                  }\n               }\n            ],\n            \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n            \"InstgAgt\": {\n               \"FinInstnId\": {\n                  \"ClrSysMmbId\": {\n                     \"MmbId\": \"dfsp001\"\n                  }\n               }\n            },\n            \"InstdAgt\": {\n               \"FinInstnId\": {\n                  \"ClrSysMmbId\": {\n                     \"MmbId\": \"dfsp002\"\n                  }\n               }\n            }\n         }\n      }\n   },\n   \"networkMap\": {\n      \"messages\": [\n        {\n            \"id\": \"004_008@1.0.0\",\n            \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor{{version}}\",\n            \"cfg\": \"1.0.0\",\n            \"txTp\": \"pacs.002.001.12\",\n            \"channels\": [\n                {\n                    \"id\": \"001@1.0.0\",\n                    \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor{{version}}\",\n                    \"cfg\": \"1.0.0\",\n                    \"typologies\": [\n                        {\n                            \"id\": \"999_008@1.0.0\",\n                            \"host\": \"{{ofUrl}}function/off-typology-processor{{version}}\",\n                            \"cfg\": \"1.0.0\",\n                            \"rules\": [\n                                {\n                                    \"id\": \"008@1.0.0\",\n                                    \"host\": \"{{ofUrl}}function/off-rule008{{version}}\",\n                                    \"cfg\": \"1.0.0\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n   }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-008{{version}}/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-008{{version}}",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "AM-814 Scenario 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"const req = JSON.parse(request.data);",
							"const arangourl = pm.environment.get('arangoUrl');",
							"const config = [\"008\"];",
							"",
							"const pacs008Transactions = [",
							"    \"99900830081\"",
							"]",
							"",
							"const graphTransactions = [",
							"    \"d923682a97089aa8416151878e58355b8eeee108008\",",
							"    \"d923682a97077a841615r1ad1e58355b8eeee108007f7accd\",",
							"    \"d923682a97089a8416151afd1e58355b8e777908007\",",
							"]",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Should have desc value of 'Outgoing transfer similarity - Creditor' \", function () {",
							"    pm.expect(jsonData.ruleResult.desc).to.be.eql(\"Outgoing transfer similarity - Creditor\");",
							"});",
							"",
							"pm.test(\"should have rule result of false\", function () {",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(false);",
							"});",
							"",
							"pm.test(\"should have rule subRuleRef of '.00' \", function () {",
							"    pm.expect(jsonData.ruleResult.subRuleRef).to.be.eql(\".00\");",
							"});",
							"",
							"pm.test(\"should have rule reason of 'Insufficient account history' \", function () {",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"Insufficient account history\");",
							"});",
							"",
							"//Remove data inserted by pre-req script transactionHistory",
							"",
							"pm.test(\"Remove Seed Data from transactionHistory\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/transactionHistory/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(pacs008Transactions)}",
							"                        REMOVE { _key: transaction } IN transactionHistoryPacs008",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});",
							"",
							"//Remove data inserted by pre-req script transactionGraph",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});",
							"",
							"//Remove data inserted by pre-req script Configuration",
							"",
							"pm.test(\"Remove Seed Data from Configuration\", function () {",
							"    pm.sendRequest({",
							"        url:`${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR config IN ${JSON.stringify(config)}",
							"                        REMOVE { _key: config } IN configuration",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"const now = new Date().getTime();\r",
							"const arangourl = pm.environment.get('arangoUrl');\r",
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"\r",
							"var uuid = require('uuid');\r",
							"var myUUID = uuid.v4();\r",
							"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
							"\r",
							"const ruleConfig = [\r",
							"    {\r",
							"        \"id\": \"008@1.0.0\",\r",
							"        \"cfg\": \"1.0.0\",\r",
							"        \"config\": {\r",
							"            \"bands\": [\r",
							"                {\r",
							"                    \"subRuleRef\": \".02\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Different creditor in consecutive transactions\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".03\",\r",
							"                    \"outcome\": true,\r",
							"                    \"reason\": \"Same creditor found in consecutive transactions\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".00\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Insufficient account history\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".01\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Unsuccessful transaction\"\r",
							"                }\r",
							"            ]\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"const pacs008Transactions = [\r",
							"    {\r",
							"        \"TxTp\": \"pacs.008.001.10\",\r",
							"        \"FIToFICstmrCdt\": {\r",
							"            \"GrpHdr\": {\r",
							"                \"MsgId\": \"96ae98292ec04bf29b5d40ba99864c38\",\r",
							"                \"CreDtTm\": new Date(now - 10000).toISOString(),\r",
							"                \"NbOfTxs\": 1,\r",
							"                \"SttlmInf\": {\r",
							"                    \"SttlmMtd\": \"CLRG\"\r",
							"                }\r",
							"            },\r",
							"            \"CdtTrfTxInf\": {\r",
							"                \"PmtId\": {\r",
							"                    \"InstrId\": \"ca0d4a79816d41d091a733a235cd09ab\",\r",
							"                    \"EndToEndId\": \"ca0d4a79816d41d091a733a235cd09ab\"\r",
							"                },\r",
							"                \"IntrBkSttlmAmt\": {\r",
							"                    \"Amt\": {\r",
							"                        \"Amt\": 9899,\r",
							"                        \"Ccy\": \"USD\"\r",
							"                    }\r",
							"                },\r",
							"                \"InstdAmt\": {\r",
							"                    \"Amt\": {\r",
							"                        \"Amt\": 9899,\r",
							"                        \"Ccy\": \"USD\"\r",
							"                    }\r",
							"                },\r",
							"                \"ChrgBr\": \"DEBT\",\r",
							"                \"ChrgsInf\": {\r",
							"                    \"Amt\": {\r",
							"                        \"Amt\": 307.14,\r",
							"                        \"Ccy\": \"USD\"\r",
							"                    },\r",
							"                    \"Agt\": {\r",
							"                        \"FinInstnId\": {\r",
							"                            \"ClrSysMmbId\": {\r",
							"                                \"MmbId\": \"dfsp001\"\r",
							"                            }\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"InitgPty\": {\r",
							"                    \"Nm\": \"April Blake Grant\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1968-02-01\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"+27730975224\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"+27-730975224\"\r",
							"                    }\r",
							"                },\r",
							"                \"Dbtr\": {\r",
							"                    \"Nm\": \"April Blake Grant\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1968-02-01\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"+27730975224\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"+27-730975224\"\r",
							"                    }\r",
							"                },\r",
							"                \"DbtrAcct\": {\r",
							"                    \"Id\": {\r",
							"                        \"Othr\": {\r",
							"                            \"Id\": \"352afab0eed3e0035ff73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"                            \"SchmeNm\": {\r",
							"                                \"Prtry\": \"PSEUDO\"\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"Nm\": \"April Grant\"\r",
							"                },\r",
							"                \"DbtrAgt\": {\r",
							"                    \"FinInstnId\": {\r",
							"                        \"ClrSysMmbId\": {\r",
							"                            \"MmbId\": \"dfsp001\"\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"CdtrAgt\": {\r",
							"                    \"FinInstnId\": {\r",
							"                        \"ClrSysMmbId\": {\r",
							"                            \"MmbId\": \"dfsp002\"\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"Cdtr\": {\r",
							"                    \"Nm\": \"Felicia Easton Quill\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1935-05-08\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"+27707650428\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"+27-707650428\"\r",
							"                    }\r",
							"                },\r",
							"                \"CdtrAcct\": {\r",
							"                    \"Id\": {\r",
							"                        \"Othr\": {\r",
							"                            \"Id\": \"24058ebbdd500fe2307cdd55186e0abcd9726de434ae4927779d1e12822914aa\",\r",
							"                            \"SchmeNm\": {\r",
							"                                \"Prtry\": \"PSEUDO\"\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"Nm\": \"Felicia Quill\"\r",
							"                },\r",
							"                \"Purp\": {\r",
							"                    \"Cd\": \"MP2P\"\r",
							"                }\r",
							"            },\r",
							"            \"RgltryRptg\": {\r",
							"                \"Dtls\": {\r",
							"                    \"Tp\": \"BALANCE OF PAYMENTS\",\r",
							"                    \"Cd\": \"100\"\r",
							"                }\r",
							"            },\r",
							"            \"RmtInf\": {\r",
							"                \"Ustrd\": \"Payment of USD 30713.75 from April to Felicia\"\r",
							"            },\r",
							"            \"SplmtryData\": {\r",
							"                \"Envlp\": {\r",
							"                    \"Doc\": {\r",
							"                        \"Xprtn\": \"2021-11-30T10:38:56.000Z\"\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"const transactionGraph = [\r",
							"    {\r",
							"        _key: \"d923682a97089aa8416151878e58355b8eeee108008\",\r",
							"        _from: \"accounts/352afab0eed3e0035ff73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        _to: \"accounts/24058ebbdd500fe2307cdd55186e0abcd9726de434ae4927779d1e12822914aa\",\r",
							"        Amt: 2000,\r",
							"        TxTp: \"pacs.008.001.10\",\r",
							"        CreDtTm: new Date(new Date(now - 30000)).toISOString(),\r",
							"        PmtInfId: \"cc88cacffc3446caa0b8e3e75c477ca5\",\r",
							"        EndToEndId: \"cc88cacffc3446caa0b8e3e75c477ca5\"\r",
							"    },\r",
							"    {\r",
							"        _key: \"d923682a97077a841615r1ad1e58355b8eeee108007f7accd\",\r",
							"        _from: \"accounts/352afab0eed3e0035ff73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        _to: \"accounts/24058ebbdd500fe2307cdd55186e0abcd9726de434ae4927779d1e12822914aa\",\r",
							"        Amt: 2000,\r",
							"        TxTp: \"pacs.002.001.12\",\r",
							"        TxSts: \"ACSC\",\r",
							"        CreDtTm: new Date(new Date(now - 20000)).toISOString(),\r",
							"        PmtInfId: \"cc88cacffc3446caa0b8e3e75c477ca5\",\r",
							"        EndToEndId: \"cc88cacffc3446caa0b8e3e75c477ca5\"\r",
							"    }\r",
							"]\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/transactionHistory/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(pacs008Transactions)}\r",
							"                    INSERT {_key: \"99900830081\", TxTp: transaction.TxTp, \r",
							"                            FIToFICstmrCdt: transaction.FIToFICstmrCdt, \r",
							"                            EndToEndId: transaction.FIToFICstmrCdt.CdtTrfTxInf.PmtId.EndToEndId, \r",
							"                            CreditorAcctId: transaction.FIToFICstmrCdt.CdtTrfTxInf.CdtrAcct.Id.Othr.Id,\r",
							"                            DebtorAcctId: transaction.FIToFICstmrCdt.CdtTrfTxInf.DbtrAcct.Id.Othr.Id, \r",
							"                            CreDtTm: transaction.FIToFICstmrCdt.GrpHdr.CreDtTm \r",
							"                            } INTO transactionHistoryPacs008\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
							"                    INSERT transaction INTO transactionRelationship\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"// Inserting Configuration for testing\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"008\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"transaction\": {\n      \"TxTp\": \"pacs.002.001.12\",\n      \"FIToFIPmtSts\": {\n         \"GrpHdr\": {\n            \"MsgId\": \"{{transactionID}}\",\n            \"CreDtTm\": \"{{now}}\"\n         },\n         \"TxInfAndSts\": {\n            \"OrgnlInstrId\": \"ca0d4a79816d41d091a733a235cd09ab\",\n            \"OrgnlEndToEndId\": \"ca0d4a79816d41d091a733a235cd09ab\",\n            \"TxSts\": \"ACCC\",\n            \"ChrgsInf\": [\n               {\n                  \"Amt\": {\n                     \"Amt\": 307.14,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp001\"\n                        }\n                     }\n                  }\n               },\n               {\n                  \"Amt\": {\n                     \"Amt\": 153.57,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp001\"\n                        }\n                     }\n                  }\n               },\n               {\n                  \"Amt\": {\n                     \"Amt\": 30.71,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp002\"\n                        }\n                     }\n                  }\n               }\n            ],\n            \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n            \"InstgAgt\": {\n               \"FinInstnId\": {\n                  \"ClrSysMmbId\": {\n                     \"MmbId\": \"dfsp001\"\n                  }\n               }\n            },\n            \"InstdAgt\": {\n               \"FinInstnId\": {\n                  \"ClrSysMmbId\": {\n                     \"MmbId\": \"dfsp002\"\n                  }\n               }\n            }\n         }\n      }\n   },\n   \"networkMap\": {\n      \"messages\": [\n        {\n            \"id\": \"004_008@1.0.0\",\n            \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor{{version}}\",\n            \"cfg\": \"1.0.0\",\n            \"txTp\": \"pacs.002.001.12\",\n            \"channels\": [\n                {\n                    \"id\": \"001@1.0.0\",\n                    \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor{{version}}\",\n                    \"cfg\": \"1.0.0\",\n                    \"typologies\": [\n                        {\n                            \"id\": \"999_008@1.0.0\",\n                            \"host\": \"{{ofUrl}}function/off-typology-processor{{version}}\",\n                            \"cfg\": \"1.0.0\",\n                            \"rules\": [\n                                {\n                                    \"id\": \"008@1.0.0\",\n                                    \"host\": \"{{ofUrl}}function/off-rule008{{version}}\",\n                                    \"cfg\": \"1.0.0\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n   }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-008{{version}}/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-008{{version}}",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "AM-814 Scenario 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"const req = JSON.parse(request.data);",
							"const arangourl = pm.environment.get('arangoUrl');",
							"const config = [\"008\"];",
							"",
							"const pacs008Transactions = [",
							"    \"99900840081\"",
							"]",
							"",
							"const graphTransactions = [",
							"    \"d923682a97089a8416151afd1ef58355b8e777908007\",",
							"    \"d923682a97089aa84161519878e58355b8eeee108008\",",
							"    \"d923682a97077a841615r1ad1e581355b8eeee108007f7accd\",",
							"    \"d923682a97089aa8416151878e54898355b8eeee108008\",",
							"    \"d923682a97077a841615r4p1ad1e58355b8eeee108007f7accd\"",
							"]",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Should have desc value of 'No description provided in rule config.' \", function () {",
							"    pm.expect(jsonData.ruleResult.desc).to.be.eql(\"No description provided in rule config.\");",
							"});",
							"",
							"pm.test(\"should have rule result of false\", function () {",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(false);",
							"});",
							"",
							"pm.test(\"should have rule subRuleRef of '.02' \", function () {",
							"    pm.expect(jsonData.ruleResult.subRuleRef).to.be.eql(\".02\");",
							"});",
							"",
							"pm.test(\"should have rule reason of 'Different creditor in consecutive transactions' \", function () {",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"Different creditor in consecutive transactions\");",
							"});",
							"",
							"//Remove data inserted by pre-req script transactionHistory",
							"",
							"pm.test(\"Remove Seed Data from transactionHistory\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/transactionHistory/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(pacs008Transactions)}",
							"                        REMOVE { _key: transaction } IN transactionHistoryPacs008",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});",
							"",
							"//Remove data inserted by pre-req script transactionGraph",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});",
							"",
							"//Remove data inserted by pre-req script Configuration",
							"",
							"pm.test(\"Remove Seed Data from Configuration\", function () {",
							"    pm.sendRequest({",
							"        url:`${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR config IN ${JSON.stringify(config)}",
							"                        REMOVE { _key: config } IN configuration",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"const now = new Date().getTime();\r",
							"const arangourl = pm.environment.get('arangoUrl');\r",
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"\r",
							"var uuid = require('uuid');\r",
							"var myUUID = uuid.v4();\r",
							"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
							"\r",
							"const ruleConfig = [\r",
							"    {\r",
							"        \"id\": \"008@1.0.0\",\r",
							"        \"cfg\": \"1.0.0\",\r",
							"        \"config\": {\r",
							"            \"bands\": [\r",
							"                {\r",
							"                    \"subRuleRef\": \".02\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Different creditor in consecutive transactions\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".03\",\r",
							"                    \"outcome\": true,\r",
							"                    \"reason\": \"Same creditor found in consecutive transactions\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".00\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Insufficient account history\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".01\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Unsuccessful transaction\"\r",
							"                }\r",
							"            ]\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"const pacs008Transactions = [\r",
							"    {\r",
							"        \"TxTp\": \"pacs.008.001.10\",\r",
							"        \"FIToFICstmrCdt\": {\r",
							"            \"GrpHdr\": {\r",
							"                \"MsgId\": \"96ae98292ec04jhf29b5d40ba99864c38\",\r",
							"                \"CreDtTm\": new Date(now - 10000).toISOString(),\r",
							"                \"NbOfTxs\": 1,\r",
							"                \"SttlmInf\": {\r",
							"                    \"SttlmMtd\": \"CLRG\"\r",
							"                }\r",
							"            },\r",
							"            \"CdtTrfTxInf\": {\r",
							"                \"PmtId\": {\r",
							"                    \"InstrId\": \"5b65b9e27efb4a37bee1227327c707ab\",\r",
							"                    \"EndToEndId\": \"5b65b9e27efb4a37bee1227327c707ab\"\r",
							"                },\r",
							"                \"IntrBkSttlmAmt\": {\r",
							"                    \"Amt\": {\r",
							"                        \"Amt\": 9899,\r",
							"                        \"Ccy\": \"USD\"\r",
							"                    }\r",
							"                },\r",
							"                \"InstdAmt\": {\r",
							"                    \"Amt\": {\r",
							"                        \"Amt\": 9899,\r",
							"                        \"Ccy\": \"USD\"\r",
							"                    }\r",
							"                },\r",
							"                \"ChrgBr\": \"DEBT\",\r",
							"                \"ChrgsInf\": {\r",
							"                    \"Amt\": {\r",
							"                        \"Amt\": 307.14,\r",
							"                        \"Ccy\": \"USD\"\r",
							"                    },\r",
							"                    \"Agt\": {\r",
							"                        \"FinInstnId\": {\r",
							"                            \"ClrSysMmbId\": {\r",
							"                                \"MmbId\": \"dfsp001\"\r",
							"                            }\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"InitgPty\": {\r",
							"                    \"Nm\": \"April Blake Grant\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1968-02-01\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"+27730975224\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"+27-730975224\"\r",
							"                    }\r",
							"                },\r",
							"                \"Dbtr\": {\r",
							"                    \"Nm\": \"April Blake Grant\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1968-02-01\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"+27730975224\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"+27-730975224\"\r",
							"                    }\r",
							"                },\r",
							"                \"DbtrAcct\": {\r",
							"                    \"Id\": {\r",
							"                        \"Othr\": {\r",
							"                            \"Id\": \"352afab0eed3e0035ff73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"                            \"SchmeNm\": {\r",
							"                                \"Prtry\": \"PSEUDO\"\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"Nm\": \"April Grant\"\r",
							"                },\r",
							"                \"DbtrAgt\": {\r",
							"                    \"FinInstnId\": {\r",
							"                        \"ClrSysMmbId\": {\r",
							"                            \"MmbId\": \"dfsp001\"\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"CdtrAgt\": {\r",
							"                    \"FinInstnId\": {\r",
							"                        \"ClrSysMmbId\": {\r",
							"                            \"MmbId\": \"dfsp002\"\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"Cdtr\": {\r",
							"                    \"Nm\": \"Felicia Easton Quill\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1935-05-08\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"+27707650428\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"+27-707650428\"\r",
							"                    }\r",
							"                },\r",
							"                \"CdtrAcct\": {\r",
							"                    \"Id\": {\r",
							"                        \"Othr\": {\r",
							"                            \"Id\": \"24058ebbdd500fe2307edd55186e0abcd9726de434ae4927779d1e12822914aa\",\r",
							"                            \"SchmeNm\": {\r",
							"                                \"Prtry\": \"PSEUDO\"\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"Nm\": \"Felicia Quill\"\r",
							"                },\r",
							"                \"Purp\": {\r",
							"                    \"Cd\": \"MP2P\"\r",
							"                }\r",
							"            },\r",
							"            \"RgltryRptg\": {\r",
							"                \"Dtls\": {\r",
							"                    \"Tp\": \"BALANCE OF PAYMENTS\",\r",
							"                    \"Cd\": \"100\"\r",
							"                }\r",
							"            },\r",
							"            \"RmtInf\": {\r",
							"                \"Ustrd\": \"Payment of USD 30713.75 from April to Felicia\"\r",
							"            },\r",
							"            \"SplmtryData\": {\r",
							"                \"Envlp\": {\r",
							"                    \"Doc\": {\r",
							"                        \"Xprtn\": \"2021-11-30T10:38:56.000Z\"\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"const transactionGraph = [\r",
							"    {\r",
							"        _key: \"d923682a97089a8416151afd1ef58355b8e777908007\",\r",
							"        _from: \"accounts/352afab0eed3e0035ff73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        _to: \"accounts/24058ebbdd500fe2307edd55186e0abcd9726de434ae4927779d1e12822914aa\",\r",
							"        Amt: 1000,\r",
							"        TxTp: \"pacs.008.001.10\",\r",
							"        CreDtTm: new Date(now).toISOString(),\r",
							"        PmtInfId: \"5b65b9e27efb4a37bee1227327c707ab\",\r",
							"        EndToEndId: \"5b65b9e27efb4a37bee1227327c707ab\"\r",
							"    },\r",
							"    {\r",
							"        _key: \"d923682a97089aa84161519878e58355b8eeee108008\",\r",
							"        _from: \"accounts/352afab0eed3e0035ff73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        _to: \"accounts/352afab0eed3e0345fdf73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        Amt: 2000,\r",
							"        TxTp: \"pacs.008.001.10\",\r",
							"        CreDtTm: new Date(now).toISOString(),\r",
							"        PmtInfId: \"10173a4007aa480a89f8ca2eecf1b973\",\r",
							"        EndToEndId: \"10173a4007aa480a89f8ca2eecf1b973\"\r",
							"    },\r",
							"    {\r",
							"        _key: \"d923682a97077a841615r1ad1e581355b8eeee108007f7accd\",\r",
							"        _from: \"accounts/352afab0eed3e0035ff73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        _to: \"accounts/352afab0eed3e0345fdf73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        Amt: 2000,\r",
							"        TxTp: \"pacs.002.001.12\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(now).toISOString(),\r",
							"        PmtInfId: \"10173a4007aa480a89f8ca2eecf1b973\",\r",
							"        EndToEndId: \"10173a4007aa480a89f8ca2eecf1b973\"\r",
							"    },\r",
							"    {\r",
							"        _key: \"d923682a97089aa8416151878e54898355b8eeee108008\",\r",
							"        _from: \"accounts/352afab0eed3e0035ff73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        _to: \"accounts/352afab0eed3e0345fdf73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        Amt: 2000,\r",
							"        TxTp: \"pacs.008.001.10\",\r",
							"        TxSts: \"ACSC\",\r",
							"        CreDtTm: new Date(now).toISOString(),\r",
							"        PmtInfId: \"96627666b46d4dabbbbc11c369aca0b9\",\r",
							"        EndToEndId: \"96627666b46d4dabbbbc11c369aca0b9\"\r",
							"    },\r",
							"    {\r",
							"        _key: \"d923682a97077a841615r4p1ad1e58355b8eeee108007f7accd\",\r",
							"        _from: \"accounts/352afab0eed3e0035ff73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        _to: \"accounts/352afab0eed3e0345fdf73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        Amt: 2000,\r",
							"        TxTp: \"pacs.002.001.12\",\r",
							"        TxSts: \"ACSC\",\r",
							"        CreDtTm: new Date(now).toISOString(),\r",
							"        PmtInfId: \"96627666b46d4dabbbbc11c369aca0b9\",\r",
							"        EndToEndId: \"96627666b46d4dabbbbc11c369aca0b9\"\r",
							"    }\r",
							"]\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/transactionHistory/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(pacs008Transactions)}\r",
							"                    INSERT {_key: \"99900840081\", TxTp: transaction.TxTp, \r",
							"                            FIToFICstmrCdt: transaction.FIToFICstmrCdt, \r",
							"                            EndToEndId: transaction.FIToFICstmrCdt.CdtTrfTxInf.PmtId.EndToEndId, \r",
							"                            CreditorAcctId: transaction.FIToFICstmrCdt.CdtTrfTxInf.CdtrAcct.Id.Othr.Id,\r",
							"                            DebtorAcctId: transaction.FIToFICstmrCdt.CdtTrfTxInf.DbtrAcct.Id.Othr.Id, \r",
							"                            CreDtTm: transaction.FIToFICstmrCdt.GrpHdr.CreDtTm\r",
							"                            } INTO transactionHistoryPacs008\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
							"                    INSERT transaction INTO transactionRelationship\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"// Inserting Configuration for testing\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"008\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"transaction\": {\n      \"TxTp\": \"pacs.002.001.12\",\n      \"FIToFIPmtSts\": {\n         \"GrpHdr\": {\n            \"MsgId\": \"{{transactionID}}\",\n            \"CreDtTm\": \"{{now}}\"\n         },\n         \"TxInfAndSts\": {\n            \"OrgnlInstrId\": \"5b65b9e27efb4a37bee1227327c707ab\",\n            \"OrgnlEndToEndId\": \"5b65b9e27efb4a37bee1227327c707ab\",\n            \"TxSts\": \"ACCC\",\n            \"ChrgsInf\": [\n               {\n                  \"Amt\": {\n                     \"Amt\": 307.14,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp001\"\n                        }\n                     }\n                  }\n               },\n               {\n                  \"Amt\": {\n                     \"Amt\": 153.57,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp001\"\n                        }\n                     }\n                  }\n               },\n               {\n                  \"Amt\": {\n                     \"Amt\": 30.71,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp002\"\n                        }\n                     }\n                  }\n               }\n            ],\n            \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n            \"InstgAgt\": {\n               \"FinInstnId\": {\n                  \"ClrSysMmbId\": {\n                     \"MmbId\": \"dfsp001\"\n                  }\n               }\n            },\n            \"InstdAgt\": {\n               \"FinInstnId\": {\n                  \"ClrSysMmbId\": {\n                     \"MmbId\": \"dfsp002\"\n                  }\n               }\n            }\n         }\n      }\n   },\n   \"networkMap\": {\n      \"messages\": [\n        {\n            \"id\": \"004_008@1.0.0\",\n            \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor{{version}}\",\n            \"cfg\": \"1.0.0\",\n            \"txTp\": \"pacs.002.001.12\",\n            \"channels\": [\n                {\n                    \"id\": \"001@1.0.0\",\n                    \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor{{version}}\",\n                    \"cfg\": \"1.0.0\",\n                    \"typologies\": [\n                        {\n                            \"id\": \"999_008@1.0.0\",\n                            \"host\": \"{{ofUrl}}function/off-typology-processor{{version}}\",\n                            \"cfg\": \"1.0.0\",\n                            \"rules\": [\n                                {\n                                    \"id\": \"008@1.0.0\",\n                                    \"host\": \"{{ofUrl}}function/off-rule008{{version}}\",\n                                    \"cfg\": \"1.0.0\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n   }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-008{{version}}/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-008{{version}}",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "AM-814 Scenario 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"const req = JSON.parse(request.data);",
							"const arangourl = pm.environment.get('arangoUrl');",
							"const config = [\"008\"];",
							"const pacs008Transactions = [",
							"    \"99900850081\"",
							"]",
							"",
							"const graphTransactions = [",
							"    \"d923682a97089a8416151rafd1ef58355b8e777908007\",",
							"    \"d923682a97077a84161r5r1ad1e581355b8eeee108007f7accd\",",
							"    \"d923682a97089aa8f4161519878e58355b8eeee108008\",",
							"    \"d923682a97089aa8f4161519878e58355b8eeee108008567890\"",
							"]",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have rule result of true\", function () {",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(true);",
							"});",
							"",
							"pm.test(\"should have rule subRuleRef of '.03' \", function () {",
							"    pm.expect(jsonData.ruleResult.subRuleRef).to.be.eql(\".03\");",
							"});",
							"",
							"pm.test(\"should have rule reason of 'Same creditor found in consecutive transactions' \", function () {",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"Same creditor found in consecutive transactions\");",
							"});",
							"",
							"//Remove data inserted by pre-req script transactionHistory",
							"",
							"pm.test(\"Remove Seed Data from transactionHistory\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/transactionHistory/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(pacs008Transactions)}",
							"                        REMOVE { _key: transaction } IN transactionHistoryPacs008",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});",
							"",
							"//Remove data inserted by pre-req script transactionGraph",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});",
							"",
							"//Remove data inserted by pre-req script Configuration",
							"",
							"pm.test(\"Remove Seed Data from Configuration\", function () {",
							"    pm.sendRequest({",
							"        url:`${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR config IN ${JSON.stringify(config)}",
							"                        REMOVE { _key: config } IN configuration",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"const now = new Date().getTime();\r",
							"const arangourl = pm.environment.get('arangoUrl');\r",
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"\r",
							"var uuid = require('uuid');\r",
							"var myUUID = uuid.v4();\r",
							"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
							"\r",
							"const ruleConfig = [\r",
							"    {\r",
							"        \"id\": \"008@1.0.0\",\r",
							"        \"cfg\": \"1.0.0\",\r",
							"        \"config\": {\r",
							"            \"bands\": [\r",
							"                {\r",
							"                    \"subRuleRef\": \".02\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Different creditor in consecutive transactions\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".03\",\r",
							"                    \"outcome\": true,\r",
							"                    \"reason\": \"Same creditor found in consecutive transactions\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".00\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Insufficient account history\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".01\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Unsuccessful transaction\"\r",
							"                }\r",
							"            ]\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"const pacs008Transactions = [\r",
							"    {\r",
							"        \"_key\": \"99900850081\",\r",
							"        \"TxTp\": \"pacs.008.001.10\",\r",
							"        \"FIToFICstmrCdt\": {\r",
							"            \"GrpHdr\": {\r",
							"                \"MsgId\": \"96ae98292ec04tjhf29b5d40ba99864c38\",\r",
							"                \"CreDtTm\": new Date(now - 10000).toISOString(),\r",
							"                \"NbOfTxs\": 1,\r",
							"                \"SttlmInf\": {\r",
							"                    \"SttlmMtd\": \"CLRG\"\r",
							"                }\r",
							"            },\r",
							"            \"CdtTrfTxInf\": {\r",
							"                \"PmtId\": {\r",
							"                    \"InstrId\": \"601f244e07ea4ae990c7771b92bf894399999\",\r",
							"                    \"EndToEndId\": \"601f244e07ea4ae990c7771b92bf894344444\"\r",
							"                },\r",
							"                \"IntrBkSttlmAmt\": {\r",
							"                    \"Amt\": {\r",
							"                        \"Amt\": 9899,\r",
							"                        \"Ccy\": \"USD\"\r",
							"                    }\r",
							"                },\r",
							"                \"InstdAmt\": {\r",
							"                    \"Amt\": {\r",
							"                        \"Amt\": 9899,\r",
							"                        \"Ccy\": \"USD\"\r",
							"                    }\r",
							"                },\r",
							"                \"ChrgBr\": \"DEBT\",\r",
							"                \"ChrgsInf\": {\r",
							"                    \"Amt\": {\r",
							"                        \"Amt\": 307.14,\r",
							"                        \"Ccy\": \"USD\"\r",
							"                    },\r",
							"                    \"Agt\": {\r",
							"                        \"FinInstnId\": {\r",
							"                            \"ClrSysMmbId\": {\r",
							"                                \"MmbId\": \"dfsp001\"\r",
							"                            }\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"InitgPty\": {\r",
							"                    \"Nm\": \"April Blake Grant\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1968-02-01\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"+27730975224\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"+27-730975224\"\r",
							"                    }\r",
							"                },\r",
							"                \"Dbtr\": {\r",
							"                    \"Nm\": \"April Blake Grant\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1968-02-01\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"+27730975224\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"+27-730975224\"\r",
							"                    }\r",
							"                },\r",
							"                \"DbtrAcct\": {\r",
							"                    \"Id\": {\r",
							"                        \"Othr\": {\r",
							"                            \"Id\": \"352afab0eed3e0035ff73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"                            \"SchmeNm\": {\r",
							"                                \"Prtry\": \"PSEUDO\"\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"Nm\": \"April Grant\"\r",
							"                },\r",
							"                \"DbtrAgt\": {\r",
							"                    \"FinInstnId\": {\r",
							"                        \"ClrSysMmbId\": {\r",
							"                            \"MmbId\": \"dfsp001\"\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"CdtrAgt\": {\r",
							"                    \"FinInstnId\": {\r",
							"                        \"ClrSysMmbId\": {\r",
							"                            \"MmbId\": \"dfsp002\"\r",
							"                        }\r",
							"                    }\r",
							"                },\r",
							"                \"Cdtr\": {\r",
							"                    \"Nm\": \"Felicia Easton Quill\",\r",
							"                    \"Id\": {\r",
							"                        \"PrvtId\": {\r",
							"                            \"DtAndPlcOfBirth\": {\r",
							"                                \"BirthDt\": \"1935-05-08\",\r",
							"                                \"CityOfBirth\": \"Unknown\",\r",
							"                                \"CtryOfBirth\": \"ZZ\"\r",
							"                            },\r",
							"                            \"Othr\": {\r",
							"                                \"Id\": \"+27707650428\",\r",
							"                                \"SchmeNm\": {\r",
							"                                    \"Prtry\": \"MSISDN\"\r",
							"                                }\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"CtctDtls\": {\r",
							"                        \"MobNb\": \"+27-707650428\"\r",
							"                    }\r",
							"                },\r",
							"                \"CdtrAcct\": {\r",
							"                    \"Id\": {\r",
							"                        \"Othr\": {\r",
							"                            \"Id\": \"24058ebbdd500fe2307cdd55186e0abcd9726de434ae4927779d1e12822914aa\",\r",
							"                            \"SchmeNm\": {\r",
							"                                \"Prtry\": \"PSEUDO\"\r",
							"                            }\r",
							"                        }\r",
							"                    },\r",
							"                    \"Nm\": \"Felicia Quill\"\r",
							"                },\r",
							"                \"Purp\": {\r",
							"                    \"Cd\": \"MP2P\"\r",
							"                }\r",
							"            },\r",
							"            \"RgltryRptg\": {\r",
							"                \"Dtls\": {\r",
							"                    \"Tp\": \"BALANCE OF PAYMENTS\",\r",
							"                    \"Cd\": \"100\"\r",
							"                }\r",
							"            },\r",
							"            \"RmtInf\": {\r",
							"                \"Ustrd\": \"Payment of USD 30713.75 from April to Felicia\"\r",
							"            },\r",
							"            \"SplmtryData\": {\r",
							"                \"Envlp\": {\r",
							"                    \"Doc\": {\r",
							"                        \"Xprtn\": \"2021-11-30T10:38:56.000Z\"\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"const transactionGraph = [\r",
							"    //History 1 pacs008\r",
							"    {\r",
							"        _key: \"d923682a97089a8416151rafd1ef58355b8e777908007\",\r",
							"        _from: \"accounts/352afab0eed3e0035ff73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        Amt: 1000,\r",
							"        TxTp: \"pacs.008.001.10\",\r",
							"        CreDtTm: new Date(new Date(now - 50000)).toISOString(),\r",
							"        PmtInfId: \"525007696c0b4b199bef1a5fc5eefd1a212\",\r",
							"        EndToEndId: \"525007696c0b4b199bef1a5fc5eefd1a\"\r",
							"    },\r",
							"\r",
							"    //History 1 pacs002\r",
							"    {\r",
							"        _key: \"d923682a97077a84161r5r1ad1e581355b8eeee108007f7accd\",\r",
							"        _from: \"accounts/352afab0eed3e0035ff73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        Amt: 2000,\r",
							"        TxTp: \"pacs.002.001.12\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now - 40000)).toISOString(),\r",
							"        PmtInfId: \"525007696c0b4b199bef1a5fc5eefd1a212\",\r",
							"        EndToEndId: \"525007696c0b4b199bef1a5fc5eefd1a\"\r",
							"    },\r",
							"\r",
							"    //History 2 pacs008\r",
							"    {\r",
							"        _key: \"d923682a97089aa8f4161519878e58355b8eeee108008\",\r",
							"        _from: \"accounts/352afab0eed3e0035ff73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        Amt: 2000,\r",
							"        TxTp: \"pacs.008.001.10\",\r",
							"        CreDtTm: new Date(new Date(now - 10000)).toISOString(),\r",
							"        PmtInfId: \"601f244e07ea4ae990c7771b92bf894399999\",\r",
							"        EndToEndId: \"601f244e07ea4ae990c7771b92bf894344444\"\r",
							"    },\r",
							"\r",
							"    //History 2 pacs002\r",
							"    {\r",
							"        _key: \"d923682a97089aa8f4161519878e58355b8eeee108008567890\",\r",
							"        _from: \"accounts/352afab0eed3e0035ff73cec422c7d4a9f66f289cee9c16dc6bca0777a4d91566\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        Amt: 2000,\r",
							"        TxTp: \"pacs.002.001.12\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now)).toISOString(),\r",
							"        PmtInfId: \"525007696c0b4b199bef1a5fc5eefd1a212\",\r",
							"        EndToEndId: \"525007696c0b4b199bef1a5fc5eefd1a\"\r",
							"    }\r",
							"]\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/transactionHistory/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(pacs008Transactions)}\r",
							"                    INSERT {_key: transaction._key, TxTp: transaction.TxTp, \r",
							"                            FIToFICstmrCdt: transaction.FIToFICstmrCdt, \r",
							"                            EndToEndId: transaction.FIToFICstmrCdt.CdtTrfTxInf.PmtId.EndToEndId, \r",
							"                            CreditorAcctId: transaction.FIToFICstmrCdt.CdtTrfTxInf.CdtrAcct.Id.Othr.Id,\r",
							"                            DebtorAcctId: transaction.FIToFICstmrCdt.CdtTrfTxInf.DbtrAcct.Id.Othr.Id, \r",
							"                            CreDtTm: transaction.FIToFICstmrCdt.GrpHdr.CreDtTm \r",
							"                            } INTO transactionHistoryPacs008\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
							"                    INSERT transaction INTO transactionRelationship\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"// Inserting Configuration for testing\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"008\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"transaction\": {\n      \"TxTp\": \"pacs.002.001.12\",\n      \"FIToFIPmtSts\": {\n         \"GrpHdr\": {\n            \"MsgId\": \"{{transactionID}}\",\n            \"CreDtTm\": \"{{now}}\"\n         },\n         \"TxInfAndSts\": {\n            \"OrgnlInstrId\": \"601f244e07ea4ae990c7771b92bf894399999\",\n            \"OrgnlEndToEndId\": \"601f244e07ea4ae990c7771b92bf894344444\",\n            \"TxSts\": \"ACCC\",\n            \"ChrgsInf\": [\n               {\n                  \"Amt\": {\n                     \"Amt\": 307.14,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp001\"\n                        }\n                     }\n                  }\n               },\n               {\n                  \"Amt\": {\n                     \"Amt\": 153.57,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp001\"\n                        }\n                     }\n                  }\n               },\n               {\n                  \"Amt\": {\n                     \"Amt\": 30.71,\n                     \"Ccy\": \"USD\"\n                  },\n                  \"Agt\": {\n                     \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                           \"MmbId\": \"dfsp002\"\n                        }\n                     }\n                  }\n               }\n            ],\n            \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n            \"InstgAgt\": {\n               \"FinInstnId\": {\n                  \"ClrSysMmbId\": {\n                     \"MmbId\": \"dfsp001\"\n                  }\n               }\n            },\n            \"InstdAgt\": {\n               \"FinInstnId\": {\n                  \"ClrSysMmbId\": {\n                     \"MmbId\": \"dfsp002\"\n                  }\n               }\n            }\n         }\n      }\n   },\n   \"networkMap\": {\n      \"messages\": [\n        {\n            \"id\": \"004_008@1.0.0\",\n            \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor{{version}}\",\n            \"cfg\": \"1.0.0\",\n            \"txTp\": \"pacs.002.001.12\",\n            \"channels\": [\n                {\n                    \"id\": \"001@1.0.0\",\n                    \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor{{version}}\",\n                    \"cfg\": \"1.0.0\",\n                    \"typologies\": [\n                        {\n                            \"id\": \"999_008@1.0.0\",\n                            \"host\": \"{{ofUrl}}function/off-typology-processor{{version}}\",\n                            \"cfg\": \"1.0.0\",\n                            \"rules\": [\n                                {\n                                    \"id\": \"008@1.0.0\",\n                                    \"host\": \"{{ofUrl}}function/off-rule008{{version}}\",\n                                    \"cfg\": \"1.0.0\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n   }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-008{{version}}/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-008{{version}}",
						"execute"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "transactionID",
			"value": ""
		},
		{
			"key": "EndToEndId",
			"value": ""
		}
	]
}