{
	"info": {
		"_postman_id": "e3b8cf1d-afd8-44b3-9ece-45ae9272f6d0",
		"name": "Rule-090",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "e2e pacs 002",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const arangourl = pm.environment.get(\"arangoUrl\")",
									"",
									"const jsonData = pm.response.json();",
									"",
									"const req = JSON.parse(request.data);",
									"",
									"const transactions = [\"9990900021\",  \"9990900081\", \"9990900131\",\"9990900011\"]",
									"const graphTransactions = [",
									"    \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",",
									"    jsonData.data.FIToFIPmtSts.GrpHdr.MsgId",
									"]",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"should not have errors\", function () {",
									"    pm.expect(jsonData).not.to.have.property('errors')",
									"});",
									"",
									"pm.test(\"should be a valid transaction\", function () {",
									"    pm.expect(jsonData.message).to.eql(\"Transaction is valid\");",
									"});",
									"",
									"pm.test(\"should send to data preparation successfully\", function () {",
									"    pm.expect(jsonData.sent).to.eql(true);",
									"});",
									"",
									"pm.test(\"should have the same outgoing and incoming json\", function () {",
									"    pm.expect(jsonData.data).to.eql(req);",
									"});",
									"",
									"",
									"pm.test(\"Remove Seed Data from DB\", function () {",
									"    pm.sendRequest({",
									"        url: `${arangourl}_db/transactionHistory/_api/cursor`,",
									"        method: 'POST',",
									"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                query: `FOR transaction IN ${JSON.stringify(transactions)}",
									"                        REMOVE { _key: transaction } IN transactionHistory",
									"                        OPTIONS { ignoreErrors: true }`",
									"            })",
									"        }",
									"    })",
									"});",
									"",
									"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
									"    pm.sendRequest({",
									"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
									"        method: 'POST',",
									"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}",
									"                        REMOVE { _key: transaction } IN transactionRelationship",
									"                        OPTIONS { ignoreErrors: true }`",
									"            })",
									"        }",
									"    })",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var uuid = require('uuid');\r",
									"var myUUID = uuid.v4();\r",
									"\r",
									"const now = new Date().getTime();\r",
									"pm.globals.set(\"now\", new Date().toISOString());\r",
									"\r",
									"const arangourl = pm.environment.get(\"arangoUrl\")\r",
									"const baseUrl = pm.environment.get('ofUrl');\r",
									"const version = pm.environment.get('version');\r",
									"\r",
									"var req = JSON.parse(request.data);\r",
									"console.log(req.FIToFIPmtSts.GrpHdr.MsgId);\r",
									"let e2eID = JSON.stringify(req.FIToFIPmtSts.GrpHdr.MsgId);\r",
									"\r",
									"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
									"\r",
									"console.log(e2eID)\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"console.log(e2eID)\r",
									"\r",
									"pm.collectionVariables.set(\"EndToEndId\", e2eID);\r",
									"\r",
									"const networkMaps = [\r",
									"    {\r",
									"        \"key\": \"090\",\r",
									"        \"active\": true,\r",
									"        \"cfg\": \"2.0.0\",\r",
									"        \"messages\": [\r",
									"            {\r",
									"                \"id\": \"004_090@1.0.0\",\r",
									"                \"host\": `${baseUrl}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0`,\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"txTp\": \"pacs.002.001.12\",\r",
									"                \"channels\": [\r",
									"                    {\r",
									"                        \"id\": \"001@1.0.0\",\r",
									"                        \"host\": `${baseUrl}function/off-channel-aggregation-decisioning-processor-rel-1-0-0`,\r",
									"                        \"cfg\": \"1.0.0\",\r",
									"                        \"typologies\": [\r",
									"                            {\r",
									"                                \"id\": \"999_090@1.0.0\",\r",
									"                                \"host\": `${baseUrl}function/off-typology-processor-rel-1-0-0`,\r",
									"                                \"cfg\": \"1.0.0\",\r",
									"                                \"rules\": [\r",
									"                                    {\r",
									"                                        \"id\": \"090@1.0.0\",\r",
									"                                        \"host\": `${baseUrl}function/off-rule-090${version}`,\r",
									"                                        \"cfg\": \"1.0.0\"\r",
									"                                    }\r",
									"                                ]\r",
									"                            }\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        ]\r",
									"\r",
									"    }\r",
									"]\r",
									"\r",
									"const ruleConfig = [\r",
									"    {\r",
									"        \"id\": \"090@1.0.0\",\r",
									"        \"cfg\": \"1.0.0\",\r",
									"        \"config\": {\r",
									"            \"timeframes\": [\r",
									"                {\r",
									"                    \"threshold\": 28800000\r",
									"                }\r",
									"            ],\r",
									"            \"bands\": [\r",
									"                {\r",
									"                    \"subRuleRef\": \".00\",\r",
									"                    \"outcome\": false,\r",
									"                    \"reason\": \"Insufficient transaction history\"\r",
									"                },\r",
									"                {\r",
									"                    \"subRuleRef\": \".01\",\r",
									"                    \"upperLimit\": 3,\r",
									"                    \"outcome\": false,\r",
									"                    \"reason\": \"Upstream transaction divergence within acceptable limits\"\r",
									"                },\r",
									"                {\r",
									"                    \"subRuleRef\": \".02\",\r",
									"                    \"lowerLimit\": 3,\r",
									"                    \"outcome\": true,\r",
									"                    \"reason\": \"Upstream transaction divergence detected\"\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    }\r",
									"]\r",
									"\r",
									"const tpExpressions = [\r",
									"    {\r",
									"        \"typology_name\": \"End-to-end test\",\r",
									"        \"id\": \"999_090@1.0.0\",\r",
									"        \"cfg\": \"1.0.0\",\r",
									"        \"rules\": [\r",
									"            {\r",
									"                \"id\": \"090@1.0.0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"ref\": \".00\",\r",
									"                \"true\": \"0\",\r",
									"                \"false\": \"0\"\r",
									"            },\r",
									"            {\r",
									"                \"id\": \"090@1.0.0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"ref\": \".01\",\r",
									"                \"true\": \"0\",\r",
									"                \"false\": \"0\"\r",
									"            },\r",
									"            {\r",
									"                \"id\": \"090@1.0.0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"ref\": \".02\",\r",
									"                \"true\": \"200\",\r",
									"                \"false\": \"0\"\r",
									"            }\r",
									"        ],\r",
									"        \"expression\": {\r",
									"            \"operator\": \"+\",\r",
									"            \"terms\": [\r",
									"                {\r",
									"                    \"id\": \"090@1.0.0\",\r",
									"                    \"cfg\": \"1.0.0\"\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    }\r",
									"]\r",
									"\r",
									"const pacs008Transactions = [{\r",
									"    \"TxTp\": \"pacs.008.001.10\",\r",
									"    \"FIToFICstmrCdt\": {\r",
									"        \"GrpHdr\": {\r",
									"            \"MsgId\": \"96ae98292ec04bf29b5d40ba99864c38\",\r",
									"            \"CreDtTm\": new Date(new Date(now - 10000)).toISOString(),\r",
									"            \"NbOfTxs\": 1,\r",
									"            \"SttlmInf\": {\r",
									"                \"SttlmMtd\": \"CLRG\"\r",
									"            }\r",
									"        },\r",
									"        \"CdtTrfTxInf\": {\r",
									"            \"PmtId\": {\r",
									"                \"InstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\r",
									"                \"EndToEndId\": \"2c516801007642dfb89294dde\"\r",
									"            },\r",
									"            \"IntrBkSttlmAmt\": {\r",
									"                \"Amt\": {\r",
									"                    \"Amt\": 31020.89,\r",
									"                    \"Ccy\": \"USD\"\r",
									"                }\r",
									"            },\r",
									"            \"InstdAmt\": {\r",
									"                \"Amt\": {\r",
									"                    \"Amt\": 9000,\r",
									"                    \"Ccy\": \"ZAR\"\r",
									"                }\r",
									"            },\r",
									"            \"ChrgBr\": \"DEBT\",\r",
									"            \"ChrgsInf\": {\r",
									"                \"Amt\": {\r",
									"                    \"Amt\": 307.14,\r",
									"                    \"Ccy\": \"USD\"\r",
									"                },\r",
									"                \"Agt\": {\r",
									"                    \"FinInstnId\": {\r",
									"                        \"ClrSysMmbId\": {\r",
									"                            \"MmbId\": \"dfsp001\"\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"InitgPty\": {\r",
									"                \"Nm\": \"April Blake Grant\",\r",
									"                \"Id\": {\r",
									"                    \"PrvtId\": {\r",
									"                        \"DtAndPlcOfBirth\": {\r",
									"                            \"BirthDt\": \"1968-02-01\",\r",
									"                            \"CityOfBirth\": \"Unknown\",\r",
									"                            \"CtryOfBirth\": \"ZZ\"\r",
									"                        },\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"+27730975224\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CtctDtls\": {\r",
									"                    \"MobNb\": \"+27-730975224\"\r",
									"                }\r",
									"            },\r",
									"            \"Dbtr\": {\r",
									"                \"Nm\": \"April Blake Grant\",\r",
									"                \"Id\": {\r",
									"                    \"PrvtId\": {\r",
									"                        \"DtAndPlcOfBirth\": {\r",
									"                            \"BirthDt\": \"1968-02-01\",\r",
									"                            \"CityOfBirth\": \"Unknown\",\r",
									"                            \"CtryOfBirth\": \"ZZ\"\r",
									"                        },\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"+27730975224\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CtctDtls\": {\r",
									"                    \"MobNb\": \"+27-730975224\"\r",
									"                }\r",
									"            },\r",
									"            \"DbtrAcct\": {\r",
									"                \"Id\": {\r",
									"                    \"Othr\": {\r",
									"                        \"Id\": \"efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b\",\r",
									"                        \"SchmeNm\": {\r",
									"                            \"Prtry\": \"PSEUDO\"\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"Nm\": \"April Grant\"\r",
									"            },\r",
									"            \"DbtrAgt\": {\r",
									"                \"FinInstnId\": {\r",
									"                    \"ClrSysMmbId\": {\r",
									"                        \"MmbId\": \"dfsp001\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"CdtrAgt\": {\r",
									"                \"FinInstnId\": {\r",
									"                    \"ClrSysMmbId\": {\r",
									"                        \"MmbId\": \"dfsp002\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"Cdtr\": {\r",
									"                \"Nm\": \"Felicia Easton Quill\",\r",
									"                \"Id\": {\r",
									"                    \"PrvtId\": {\r",
									"                        \"DtAndPlcOfBirth\": {\r",
									"                            \"BirthDt\": \"1935-05-08\",\r",
									"                            \"CityOfBirth\": \"Unknown\",\r",
									"                            \"CtryOfBirth\": \"ZZ\"\r",
									"                        },\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"+27707650428\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CtctDtls\": {\r",
									"                    \"MobNb\": \"+27-707650428\"\r",
									"                }\r",
									"            },\r",
									"            \"CdtrAcct\": {\r",
									"                \"Id\": {\r",
									"                    \"Othr\": {\r",
									"                        \"Id\": \"03aeae97e5e2263c8c22bc0dec6\",\r",
									"                        \"SchmeNm\": {\r",
									"                            \"Prtry\": \"PSEUDO\"\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"Nm\": \"Felicia Quill\"\r",
									"            },\r",
									"            \"Purp\": {\r",
									"                \"Cd\": \"MP2P\"\r",
									"            }\r",
									"        },\r",
									"        \"RgltryRptg\": {\r",
									"            \"Dtls\": {\r",
									"                \"Tp\": \"BALANCE OF PAYMENTS\",\r",
									"                \"Cd\": \"100\"\r",
									"            }\r",
									"        },\r",
									"        \"RmtInf\": {\r",
									"            \"Ustrd\": \"Payment of USD 30713.75 from April to Felicia\"\r",
									"        },\r",
									"        \"SplmtryData\": {\r",
									"            \"Envlp\": {\r",
									"                \"Doc\": {\r",
									"                    \"Xprtn\": \"2021-11-30T10:38:56.000Z\"\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}]\r",
									"const pacs002Transactions = [{\r",
									"    \"TxTp\": \"pacs.002.001.12\",\r",
									"    \"FIToFIPmtSts\": {\r",
									"        \"GrpHdr\": {\r",
									"            \"MsgId\": \"40bea71c5a054978ad0da7f94b2a40e9799\",\r",
									"            \"CreDtTm\": new Date(new Date(now)).toISOString(),\r",
									"        },\r",
									"        \"TxInfAndSts\": {\r",
									"            \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2255\",\r",
									"            \"OrgnlEndToEndId\": \"2c516801007642dfb89294dde\",\r",
									"            \"TxSts\": \"ACCC\",\r",
									"            \"ChrgsInf\": [\r",
									"                {\r",
									"                    \"Amt\": {\r",
									"                        \"Amt\": 307.14,\r",
									"                        \"Ccy\": \"USD\"\r",
									"                    },\r",
									"                    \"Agt\": {\r",
									"                        \"FinInstnId\": {\r",
									"                            \"ClrSysMmbId\": {\r",
									"                                \"MmbId\": \"dfsp001\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                {\r",
									"                    \"Amt\": {\r",
									"                        \"Amt\": 153.57,\r",
									"                        \"Ccy\": \"USD\"\r",
									"                    },\r",
									"                    \"Agt\": {\r",
									"                        \"FinInstnId\": {\r",
									"                            \"ClrSysMmbId\": {\r",
									"                                \"MmbId\": \"dfsp001\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                {\r",
									"                    \"Amt\": {\r",
									"                        \"Amt\": 30.71,\r",
									"                        \"Ccy\": \"USD\"\r",
									"                    },\r",
									"                    \"Agt\": {\r",
									"                        \"FinInstnId\": {\r",
									"                            \"ClrSysMmbId\": {\r",
									"                                \"MmbId\": \"dfsp002\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            ],\r",
									"            \"AccptncDtTm\": \"2021-12-03T15:24:26.000Z\",\r",
									"            \"InstgAgt\": {\r",
									"                \"FinInstnId\": {\r",
									"                    \"ClrSysMmbId\": {\r",
									"                        \"MmbId\": \"dfsp001\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"InstdAgt\": {\r",
									"                \"FinInstnId\": {\r",
									"                    \"ClrSysMmbId\": {\r",
									"                        \"MmbId\": \"dfsp002\"\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}]\r",
									"\r",
									"const pain001Transactions = [{\r",
									"    \"TxTp\": \"pain.001.001.11\",\r",
									"    \"CstmrCdtTrfInitn\": {\r",
									"        \"GrpHdr\": {\r",
									"            \"MsgId\": \"2669e349-500d-44ba-9e27-7767a1660aa0\",\r",
									"            \"CreDtTm\": new Date(new Date(now - 30000).getTime()).toISOString(),\r",
									"            \"NbOfTxs\": 1,\r",
									"            \"InitgPty\": {\r",
									"                \"Nm\": \"Ivan Reese Russel-Klein\",\r",
									"                \"Id\": {\r",
									"                    \"PrvtId\": {\r",
									"                        \"DtAndPlcOfBirth\": {\r",
									"                            \"BirthDt\": \"1967-11-23\",\r",
									"                            \"CityOfBirth\": \"Unknown\",\r",
									"                            \"CtryOfBirth\": \"ZZ\"\r",
									"                        },\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CtctDtls\": {\r",
									"                    \"MobNb\": \"\"\r",
									"                }\r",
									"            }\r",
									"        },\r",
									"        \"PmtInf\": {\r",
									"            \"PmtInfId\": \"2c516801007642dfb892944dde1cf845897\",\r",
									"            \"PmtMtd\": \"TRA\",\r",
									"            \"ReqdAdvcTp\": {\r",
									"                \"DbtAdvc\": {\r",
									"                    \"Cd\": \"ADWD\",\r",
									"                    \"Prtry\": \"Advice with transaction details\"\r",
									"                }\r",
									"            },\r",
									"            \"ReqdExctnDt\": {\r",
									"                \"Dt\": \"2021-10-07\",\r",
									"                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r",
									"            },\r",
									"            \"Dbtr\": {\r",
									"                \"Nm\": \"Ivan Reese Russel-Klein\",\r",
									"                \"Id\": {\r",
									"                    \"PrvtId\": {\r",
									"                        \"DtAndPlcOfBirth\": {\r",
									"                            \"BirthDt\": \"1967-11-23\",\r",
									"                            \"CityOfBirth\": \"Unknown\",\r",
									"                            \"CtryOfBirth\": \"ZZ\"\r",
									"                        },\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CtctDtls\": {\r",
									"                    \"MobNb\": \"\"\r",
									"                }\r",
									"            },\r",
									"            \"DbtrAcct\": {\r",
									"                \"Id\": {\r",
									"                    \"Othr\": {\r",
									"                        \"Id\": \"03aeae97e5e2263c8c22bc0dec615b\",\r",
									"                        \"SchmeNm\": {\r",
									"                            \"Prtry\": \"PASSPORT\"\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"Nm\": \"Ivan Russel-Klein\"\r",
									"            },\r",
									"            \"DbtrAgt\": {\r",
									"                \"FinInstnId\": {\r",
									"                    \"ClrSysMmbId\": {\r",
									"                        \"MmbId\": \"dfsp001\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"CdtTrfTxInf\": {\r",
									"                \"PmtId\": {\r",
									"                    \"EndToEndId\": \"2c516801007642dfb892944dde1cf84500\"\r",
									"                },\r",
									"                \"PmtTpInf\": {\r",
									"                    \"CtgyPurp\": {\r",
									"                        \"Prtry\": \"TRANSFER\"\r",
									"                    }\r",
									"                },\r",
									"                \"Amt\": {\r",
									"                    \"InstdAmt\": {\r",
									"                        \"Amt\": {\r",
									"                            \"Amt\": \"50431891779910900\",\r",
									"                            \"Ccy\": \"USD\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"EqvtAmt\": {\r",
									"                        \"Amt\": {\r",
									"                            \"Amt\": \"50431891779910900\",\r",
									"                            \"Ccy\": \"USD\"\r",
									"                        },\r",
									"                        \"CcyOfTrf\": \"USD\"\r",
									"                    }\r",
									"                },\r",
									"                \"ChrgBr\": \"DEBT\",\r",
									"                \"CdtrAgt\": {\r",
									"                    \"FinInstnId\": {\r",
									"                        \"ClrSysMmbId\": {\r",
									"                            \"MmbId\": \"dfsp002\"\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"Cdtr\": {\r",
									"                    \"Nm\": \"\",\r",
									"                    \"Id\": {\r",
									"                        \"PrvtId\": {\r",
									"                            \"DtAndPlcOfBirth\": {\r",
									"                                \"BirthDt\": \"1923-04-26\",\r",
									"                                \"CityOfBirth\": \"\",\r",
									"                                \"CtryOfBirth\": \"\"\r",
									"                            },\r",
									"                            \"Othr\": {\r",
									"                                \"Id\": \"\",\r",
									"                                \"SchmeNm\": {\r",
									"                                    \"Prtry\": \"MSISDN\"\r",
									"                                }\r",
									"                            }\r",
									"                        }\r",
									"                    },\r",
									"                    \"CtctDtls\": {\r",
									"                        \"MobNb\": \"\"\r",
									"                    }\r",
									"                },\r",
									"                \"CdtrAcct\": {\r",
									"                    \"Id\": {\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"c22bc0dec615b13ee614c\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    },\r",
									"                    \"Nm\": \"April Adamson\"\r",
									"                },\r",
									"                \"Purp\": {\r",
									"                    \"Cd\": \"MP2P\"\r",
									"                },\r",
									"                \"RgltryRptg\": {\r",
									"                    \"Dtls\": {\r",
									"                        \"Tp\": \"BALANCE OF PAYMENTS\",\r",
									"                        \"Cd\": \"100\"\r",
									"                    }\r",
									"                },\r",
									"                \"RmtInf\": {\r",
									"                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r",
									"                },\r",
									"                \"SplmtryData\": {\r",
									"                    \"Envlp\": {\r",
									"                        \"Doc\": {\r",
									"                            \"Cdtr\": {\r",
									"                                \"FrstNm\": \"Ivan\",\r",
									"                                \"MddlNm\": \"Reese\",\r",
									"                                \"LastNm\": \"Russel-Klein\",\r",
									"                                \"MrchntClssfctnCd\": \"BLANK\"\r",
									"                            },\r",
									"                            \"Dbtr\": {\r",
									"                                \"FrstNm\": \"\",\r",
									"                                \"MddlNm\": \"\",\r",
									"                                \"LastNm\": \"\",\r",
									"                                \"MrchntClssfctnCd\": \"BLANK\"\r",
									"                            },\r",
									"                            \"DbtrFinSvcsPrvdrFees\": {\r",
									"                                \"Ccy\": \"USD\",\r",
									"                                \"Amt\": \"499325661187237\"\r",
									"                            },\r",
									"                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        },\r",
									"        \"SplmtryData\": {\r",
									"            \"Envlp\": {\r",
									"                \"Doc\": {\r",
									"                    \"InitgPty\": {\r",
									"                        \"InitrTp\": \"CONSUMER\",\r",
									"                        \"Glctn\": {\r",
									"                            \"Lat\": \"-3.1291\",\r",
									"                            \"Long\": \"39.0076\"\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}]\r",
									"\r",
									"const pain013Transactions = [{\r",
									"    \"TxTp\": \"pain.013.001.09\",\r",
									"    \"CdtrPmtActvtnReq\": {\r",
									"        \"GrpHdr\": {\r",
									"            \"MsgId\": \"c46087cb-7688-4b36-9141-c9f1fb1ae511\",\r",
									"            \"CreDtTm\": new Date(new Date(now - 20000).getTime()).toISOString(),\r",
									"            \"NbOfTxs\": 1,\r",
									"            \"InitgPty\": {\r",
									"                \"Nm\": \"Horatio Sam Ford\",\r",
									"                \"Id\": {\r",
									"                    \"PrvtId\": {\r",
									"                        \"DtAndPlcOfBirth\": {\r",
									"                            \"BirthDt\": \"1981-04-11\",\r",
									"                            \"CityOfBirth\": \"Unknown\",\r",
									"                            \"CtryOfBirth\": \"ZZ\"\r",
									"                        },\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"+27721299138\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CtctDtls\": {\r",
									"                    \"MobNb\": \"+27-721299138\"\r",
									"                }\r",
									"            }\r",
									"        },\r",
									"        \"PmtInf\": {\r",
									"            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r",
									"            \"PmtMtd\": \"TRA\",\r",
									"            \"ReqdAdvcTp\": {\r",
									"                \"DbtAdvc\": {\r",
									"                    \"Cd\": \"ADWD\",\r",
									"                    \"Prtry\": \"Advice with transaction details\"\r",
									"                }\r",
									"            },\r",
									"            \"ReqdExctnDt\": {\r",
									"                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r",
									"            },\r",
									"            \"XpryDt\": {\r",
									"                \"DtTm\": \"2021-10-21\"\r",
									"            },\r",
									"            \"Dbtr\": {\r",
									"                \"Nm\": \"2021-10-21T14:02:54.000Z\",\r",
									"                \"Id\": {\r",
									"                    \"PrvtId\": {\r",
									"                        \"DtAndPlcOfBirth\": {\r",
									"                            \"BirthDt\": \"2021-10-07\",\r",
									"                            \"CityOfBirth\": \"Unknown\",\r",
									"                            \"CtryOfBirth\": \"zz\"\r",
									"                        },\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"ZZ\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"+27721299138\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CtctDtls\": {\r",
									"                    \"MobNb\": \"+27-783078685\"\r",
									"                }\r",
									"            },\r",
									"            \"DbtrAcct\": {\r",
									"                \"Id\": {\r",
									"                    \"Othr\": {\r",
									"                        \"Id\": \"+27-721299138\",\r",
									"                        \"SchmeNm\": {\r",
									"                            \"Prtry\": \"+27721299138\"\r",
									"                        },\r",
									"                        \"Nm\": \"PASSPORT\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"DbtrAgt\": {\r",
									"                \"FinInstnId\": {\r",
									"                    \"ClrSysMmbId\": {\r",
									"                        \"MmbId\": \"Horatio Ford\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"CdtTrfTxInf\": {\r",
									"                \"PmtId\": {\r",
									"                    \"EndToEndId\": \"2c516801007642dfb892944dde1cf84500\"\r",
									"                },\r",
									"                \"PmtTpInf\": {\r",
									"                    \"CtgyPurp\": {\r",
									"                        \"Prtry\": \"TRANSFER\"\r",
									"                    }\r",
									"                },\r",
									"                \"Amt\": {\r",
									"                    \"InstdAmt\": {\r",
									"                        \"Amt\": {\r",
									"                            \"Amt\": 50431891779910900,\r",
									"                            \"Ccy\": \"USD\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"EqvtAmt\": {\r",
									"                        \"Amt\": {\r",
									"                            \"Amt\": 50431891779910900,\r",
									"                            \"Ccy\": \"USD\"\r",
									"                        },\r",
									"                        \"CcyOfTrf\": \"USD\"\r",
									"                    }\r",
									"                },\r",
									"                \"ChrgBr\": \"DEBT\",\r",
									"                \"CdtrAgt\": {\r",
									"                    \"FinInstnId\": {\r",
									"                        \"ClrSysMmbId\": {\r",
									"                            \"MmbId\": \"dfsp002\"\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"Cdtr\": {\r",
									"                    \"Nm\": \"April Sam Adamson\",\r",
									"                    \"Id\": {\r",
									"                        \"PrvtId\": {\r",
									"                            \"DtAndPlcOfBirth\": {\r",
									"                                \"BirthDt\": \"1923-04-26\",\r",
									"                                \"CityOfBirth\": \"Unknown\",\r",
									"                                \"CtryOfBirth\": \"ZZ\"\r",
									"                            },\r",
									"                            \"Othr\": {\r",
									"                                \"Id\": \"+27782722305\",\r",
									"                                \"SchmeNm\": {\r",
									"                                    \"Prtry\": \"MSISDN\"\r",
									"                                }\r",
									"                            }\r",
									"                        }\r",
									"                    },\r",
									"                    \"CtctDtls\": {\r",
									"                        \"MobNb\": \"+27-782722305\"\r",
									"                    }\r",
									"                },\r",
									"                \"CdtrAcct\": {\r",
									"                    \"Id\": {\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"+27783078685\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    },\r",
									"                    \"Nm\": \"April Adamson\"\r",
									"                },\r",
									"                \"Purp\": {\r",
									"                    \"Cd\": \"MP2P\"\r",
									"                },\r",
									"                \"RgltryRptg\": {\r",
									"                    \"Dtls\": {\r",
									"                        \"Tp\": \"BALANCE OF PAYMENTS\",\r",
									"                        \"Cd\": \"100\"\r",
									"                    }\r",
									"                },\r",
									"                \"RmtInf\": {\r",
									"                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r",
									"                },\r",
									"                \"SplmtryData\": {\r",
									"                    \"Envlp\": {\r",
									"                        \"Doc\": {\r",
									"                            \"PyeeRcvAmt\": {\r",
									"                                \"Amt\": {\r",
									"                                    \"Amt\": 4906747824834590.33,\r",
									"                                    \"Ccy\": \"USD\"\r",
									"                                }\r",
									"                            },\r",
									"                            \"PyeeFinSvcsPrvdrFee\": {\r",
									"                                \"Amt\": {\r",
									"                                    \"Amt\": 49067478248345.9,\r",
									"                                    \"Ccy\": \"USD\"\r",
									"                                }\r",
									"                            },\r",
									"                            \"PyeeFinSvcsPrvdrComssn\": {\r",
									"                                \"Amt\": {\r",
									"                                    \"Amt\": 0,\r",
									"                                    \"Ccy\": \"USD\"\r",
									"                                }\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        },\r",
									"        \"SplmtryData\": {\r",
									"            \"Envlp\": {\r",
									"                \"Doc\": {\r",
									"                    \"InitgPty\": {\r",
									"                        \"Glctn\": {\r",
									"                            \"Lat\": \"-3.1675\",\r",
									"                            \"Long\": \"39.059\"\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}]\r",
									"\r",
									"const transactionGraph = [\r",
									"    {\r",
									"        _key: \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
									"        _from: \"accounts/efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b\",\r",
									"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
									"        TxTp: \"pacs.002.001.12\",\r",
									"        TxSts: \"ACCC\",\r",
									"        CreDtTm: new Date(now).toISOString(),\r",
									"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r",
									"        EndToEndId: \"2c516801007642dfb89294dde\"\r",
									"\r",
									"    }\r",
									"]\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/networkmap/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR doc IN networkConfiguration\r",
									"                    FILTER doc.active == true\r",
									"                    UPDATE doc WITH { active: false } IN networkConfiguration`\r",
									"        })\r",
									"    }\r",
									"}, () =>\r",
									"    pm.sendRequest({\r",
									"        url: `${arangourl}_db/networkmap/_api/cursor?waitForSync=true`,\r",
									"        method: 'POST',\r",
									"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"        body: {\r",
									"            mode: 'raw',\r",
									"            raw: JSON.stringify({\r",
									"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}\r",
									"                            INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration\r",
									"                            OPTIONS { overwrite: true }`\r",
									"            })\r",
									"        }\r",
									"    })\r",
									");\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
									"                    INSERT {_key: \"090\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: {\r",
									"            query: `FOR expression IN ${JSON.stringify(tpExpressions)}\r",
									"                    INSERT {_key: \"090\", id: expression.id, cfg: expression.cfg, rules: expression.rules, expression: expression.expression } INTO typologyExpression\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        }\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}/_db/transactionHistory/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR transaction IN ${JSON.stringify(pacs002Transactions)}\r",
									"                    INSERT {_key: \"9990900021\", TxTp: transaction.TxTp, FIToFIPmtSts: transaction.FIToFIPmtSts} INTO transactionHistory\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}/_db/pseudonyms/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
									"                    INSERT transaction INTO transactionRelationship\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}/_db/transactionHistory/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR transaction IN ${JSON.stringify(pacs008Transactions)}\r",
									"                    INSERT {_key: \"9990900081\", TxTp: transaction.TxTp, FIToFICstmrCdt: transaction.FIToFICstmrCdt} INTO transactionHistory\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}/_db/transactionHistory/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR transaction IN ${JSON.stringify(pain013Transactions)}\r",
									"                    INSERT {_key: \"9990900131\", TxTp: transaction.TxTp, CdtrPmtActvtnReq: transaction.CdtrPmtActvtnReq} INTO transactionHistory\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}/_db/transactionHistory/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR transaction IN ${JSON.stringify(pain001Transactions)}\r",
									"                    INSERT {_key: \"9990900011\", TxTp: transaction.TxTp, CstmrCdtTrfInitn: transaction.CstmrCdtTrfInitn} INTO transactionHistory\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"TxTp\": \"pacs.002.001.12\",\n    \"FIToFIPmtSts\": {\n        \"GrpHdr\": {\n            \"MsgId\": \"{{transactionID}}\",\n            \"CreDtTm\": \"{{now}}\"\n        },\n        \"TxInfAndSts\": {\n            \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n            \"OrgnlEndToEndId\": \"2c516801007642dfb89294dde\",\n            \"TxSts\": \"ACCC\",\n            \"ChrgsInf\": [\n                {\n                    \"Amt\": {\n                        \"Amt\": 307.14,\n                        \"Ccy\": \"USD\"\n                    },\n                    \"Agt\": {\n                        \"FinInstnId\": {\n                            \"ClrSysMmbId\": {\n                                \"MmbId\": \"dfsp001\"\n                            }\n                        }\n                    }\n                },\n                {\n                    \"Amt\": {\n                        \"Amt\": 153.57,\n                        \"Ccy\": \"USD\"\n                    },\n                    \"Agt\": {\n                        \"FinInstnId\": {\n                            \"ClrSysMmbId\": {\n                                \"MmbId\": \"dfsp001\"\n                            }\n                        }\n                    }\n                },\n                {\n                    \"Amt\": {\n                        \"Amt\": 30.71,\n                        \"Ccy\": \"USD\"\n                    },\n                    \"Agt\": {\n                        \"FinInstnId\": {\n                            \"ClrSysMmbId\": {\n                                \"MmbId\": \"dfsp002\"\n                            }\n                        }\n                    }\n                }\n            ],\n            \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n            \"InstgAgt\": {\n                \"FinInstnId\": {\n                    \"ClrSysMmbId\": {\n                        \"MmbId\": \"dfsp001\"\n                    }\n                }\n            },\n            \"InstdAgt\": {\n                \"FinInstnId\": {\n                    \"ClrSysMmbId\": {\n                        \"MmbId\": \"dfsp002\"\n                    }\n                }\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ofUrl}}function/off-transaction-monitoring-service{{TMSversion}}/transfer-response",
							"host": [
								"{{ofUrl}}function"
							],
							"path": [
								"off-transaction-monitoring-service{{TMSversion}}",
								"transfer-response"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"\r",
									"\r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"   \r",
									"});\r",
									"\r",
									"pm.test(\"check that the report status is NALT \", function () {\r",
									"    pm.expect(jsonData.result[0].report.status).to.eql(\"NALT\")\r",
									"    pm.expect(jsonData.result[0].report.tadpResult.channelResult[0].typologyResult[0].ruleResults[0].result).to.eql(false);\r",
									"    pm.expect(jsonData.result[0].report.tadpResult.channelResult[0].typologyResult[0].ruleResults[0].subRuleRef).to.eql(\".00\");\r",
									"    pm.expect(jsonData.result[0].report.tadpResult.channelResult[0].typologyResult[0].ruleResults[0].reason).to.eql(\"Insufficient transaction history\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(checkStatusCode, 5000);\r",
									"\r",
									"function checkStatusCode() {\r",
									"\r",
									"    pm.sendRequest('https://postman-echo.com/get', function (err, res) {\r",
									"\r",
									"        tests['status code should be 200'] = res.code === 200;\r",
									"\r",
									"    });\r",
									"}\r",
									"var Header = require('postman-collection').Header;\r",
									"pm.request.headers.append(Header.create(`Bearer ${pm.globals.get(\"arangoToken\")}`, 'Authorization'));\r",
									"console.log(\"received end to end id for above request \", pm.collectionVariables.get(\"EndToEndId\"));\r",
									"\r",
									"pm.globals.set(\"query\", JSON.stringify(\r",
									"    `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.FIToFIPmtSts.GrpHdr.MsgId == \r",
									"       `+ pm.collectionVariables.get(\"EndToEndId\") + `\r",
									"       return transaction `\r",
									"));\r",
									"\r",
									"console.log(pm.environment.get(\"query\"))\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"for transaction In transactions FILTER transaction.transaction.FIToFIPmtSts.GrpHdr.MsgId ==  {{EndToEndId}} return transaction\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{arangoUrl}}_db/transactionHistory/_api/cursor",
							"host": [
								"{{arangoUrl}}_db"
							],
							"path": [
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Scenario 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"const arangourl = pm.environment.get(\"arangoUrl\")\r",
							"\r",
							"var uuid = require('uuid');\r",
							"var myUUID = uuid.v4();\r",
							"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
							"\r",
							"const now = new Date().getTime();\r",
							"\r",
							"const ruleConfig = [\r",
							"    {\r",
							"        \"id\": \"090@1.0.0\",\r",
							"        \"cfg\": \"1.0.0\",\r",
							"        \"config\": {\r",
							"            \"timeframes\": [\r",
							"                {\r",
							"                    \"threshold\": 28800000\r",
							"                }\r",
							"            ],\r",
							"            \"bands\": [\r",
							"                {\r",
							"                    \"subRuleRef\": \".00\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Insufficient transaction history\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".01\",\r",
							"                    \"upperLimit\": 3,\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Upstream transaction divergence within acceptable limits\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".02\",\r",
							"                    \"lowerLimit\": 3,\r",
							"                    \"outcome\": true,\r",
							"                    \"reason\": \"Upstream transaction divergence detected\"\r",
							"                }\r",
							"            ]\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"const transactionGraph = [\r",
							"    // A\r",
							"    {\r",
							"        _key: \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pacs.002.001.12\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(now).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r",
							"        EndToEndId: \"2c516801007642dfb89294dde444\"\r",
							"\r",
							"    },\r",
							"    // B to A\r",
							"    {\r",
							"        _key: \"97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af93\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CreDtTm\": new Date(new Date(now - 32400000)).toISOString(),\r",
							"        \"Amt\": 9000,\r",
							"        \"Ccy\": \"ZAR\",\r",
							"        \"PmtInfId\": \"b51ec534ee48-4575-b6a9-ead2955b8069\",\r",
							"        \"EndToEndId\": \"2c516801007642dfb89294dde444\"\r",
							"\r",
							"    }\r",
							"]\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
							"                    INSERT transaction INTO transactionRelationship\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"090\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const req = JSON.parse(request.data);\r",
							"const arangourl = pm.environment.get('arangoUrl');\r",
							"\r",
							"\r",
							"const graphTransactions = [\r",
							"    \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"]\r",
							"\r",
							"pm.test(\"should have status code of 200 \", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"should respond with correct network map\", function () {\r",
							"    const requestNetworkMap = JSON.parse(pm.request.body.raw).networkMap;\r",
							"    const responseNetworkMap = pm.response.json().networkSubMap;\r",
							"    pm.expect(requestNetworkMap).to.be.eql(responseNetworkMap);\r",
							"});\r",
							"\r",
							"pm.test(\"should respond with correct transaction\", function () {\r",
							"    const requestTransaction = JSON.parse(pm.request.body.raw).transaction;\r",
							"    const responseTransaction = pm.response.json().transaction;\r",
							"    pm.expect(requestTransaction).to.eql(responseTransaction);\r",
							"});\r",
							"\r",
							"pm.test(\"should have rule result of true\", function () {\r",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(false);\r",
							"    console.log(jsonData.ruleResult.reason)\r",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"Insufficient transaction history\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,\r",
							"        method: 'POST',\r",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify({\r",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}\r",
							"                        REMOVE { _key: transaction } IN transactionRelationship\r",
							"                        OPTIONS { ignoreErrors: true }`\r",
							"            })\r",
							"        }\r",
							"    })\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"transaction\": {\r\n        \"TxTp\": \"pacs.002.001.12\",\r\n        \"FIToFIPmtSts\": {\r\n            \"GrpHdr\": {\r\n                \"MsgId\": \"{{transactionID}}\",\r\n                \"CreDtTm\": \"{{now}}\"\r\n            },\r\n            \"TxInfAndSts\": {\r\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\r\n                \"OrgnlEndToEndId\": \"2c516801007642dfb89294dde444\",\r\n                \"TxSts\": \"ACCC\",\r\n                \"ChrgsInf\": [\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 307.14,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 153.57,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 30.71,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp002\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\r\n                \"InstgAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp001\"\r\n                        }\r\n                    }\r\n                },\r\n                \"InstdAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"networkMap\": {\r\n        \"messages\": [\r\n            {\r\n                \"id\": \"004_090@1.0.0\",\r\n                \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\r\n                \"cfg\": \"1.0.0\",\r\n                \"txTp\": \"pacs.002.001.12\",\r\n                \"channels\": [\r\n                    {\r\n                        \"id\": \"001@1.0.0\",\r\n                        \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r\n                        \"cfg\": \"1.0.0\",\r\n                        \"typologies\": [\r\n                            {\r\n                                \"id\": \"999_090@1.0.0\",\r\n                                \"host\": \"{{ofUrl}}function/off-typology-processor-rel-1-0-0\",\r\n                                \"cfg\": \"1.0.0\",\r\n                                \"rules\": [\r\n                                    {\r\n                                        \"id\": \"090@1.0.0\",\r\n                                        \"host\": \"{{ofUrl}}function/off-rule-090{{version}}\",\r\n                                        \"cfg\": \"1.0.0\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-090{{version}}/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-090{{version}}",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Scenario 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"const now = new Date().getTime();\r",
							"const arangourl = pm.environment.get('arangoUrl');\r",
							"\r",
							"var uuid = require('uuid');\r",
							"var myUUID = uuid.v4();\r",
							"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
							"\r",
							"\r",
							"const ruleConfig = [\r",
							"    {\r",
							"        \"id\": \"090@1.0.0\",\r",
							"        \"cfg\": \"1.0.0\",\r",
							"        \"config\": {\r",
							"            \"timeframes\": [\r",
							"                {\r",
							"                    \"threshold\": 28800000\r",
							"                }\r",
							"            ],\r",
							"            \"bands\": [\r",
							"                {\r",
							"                    \"subRuleRef\": \".00\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Insufficient transaction history\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".01\",\r",
							"                    \"upperLimit\": 3,\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Upstream transaction divergence within acceptable limits\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".02\",\r",
							"                    \"lowerLimit\": 3,\r",
							"                    \"outcome\": true,\r",
							"                    \"reason\": \"Upstream transaction divergence detected\"\r",
							"                }\r",
							"            ]\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"const transactionGraph = [\r",
							"    // A\r",
							"    {\r",
							"        _key: \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pacs.002.001.12\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(now).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r",
							"        EndToEndId: \"2c516801007642dfb89294dde\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // B to A\r",
							"    {\r",
							"        _key: \"97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af93\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CreDtTm\": new Date(new Date(now - 21600000)).toISOString(),\r",
							"        \"Amt\": 9000,\r",
							"        \"Ccy\": \"ZAR\",\r",
							"        \"PmtInfId\": \"b51ec534ee48-4575-b6a9-ead2955b8069\",\r",
							"        \"EndToEndId\": \"2c516801007642dfb89294dde\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // C to A\r",
							"    {\r",
							"        _key: \"123578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af9311111\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CreDtTm\": new Date(new Date(now - 10800000)).toISOString(),\r",
							"        \"Amt\": 9000,\r",
							"        \"Ccy\": \"ZAR\",\r",
							"        \"PmtInfId\": \"b51ec534ee48-4575-b6a9-ead2955b8064\",\r",
							"        \"EndToEndId\": \"2c516801007642dfb892944dde65400\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // B to D 1\r",
							"    {\r",
							"        _key: \"fhio30028490239331d1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af93\",\r",
							"        _to: \"accounts/fd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pain.001.001.11\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now - 120000)).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1c\",\r",
							"        EndToEndId: \"2c516801007642dfb892944dde65400\"\r",
							"    },\r",
							"\r",
							"    // B to D 2\r",
							"    {\r",
							"        _key: \"zrui578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af93\",\r",
							"        _to: \"accounts/fd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CreDtTm\": new Date(new Date(now - 7200000)).toISOString(),\r",
							"        \"Amt\": 10000,\r",
							"        \"Ccy\": \"ZAR\",\r",
							"        \"PmtInfId\": \"b51ec534ee48-4575-b6a9-ead2955b8064\",\r",
							"        \"EndToEndId\": \"2c516801007642dfb892944dd7890\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // C to E 1    \r",
							"    {\r",
							"        _key: \"u8903458490239331d1e58355b8eeee108007f7accd4adc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af9311111\",\r",
							"        _to: \"accounts/www9dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pain.001.001.11\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now - 14400000)).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1c\",\r",
							"        EndToEndId: \"2c516801007642dfb892944d\"\r",
							"    },\r",
							"\r",
							"    // C to F\r",
							"    {\r",
							"        _key: \"ghui9028490239331d1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af9311111\",\r",
							"        _to: \"accounts/zzzfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pain.001.001.11\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now - 32400000)).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1c\",\r",
							"        EndToEndId: \"2c516801007642dfb892944dd7890w\"\r",
							"    }\r",
							"]\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
							"                    INSERT transaction INTO transactionRelationship\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"090\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const req = JSON.parse(request.data);\r",
							"\r",
							"const arangourl = pm.environment.get('arangoUrl');\r",
							"\r",
							"const graphTransactions = [\r",
							"    \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\", \r",
							"    \"123578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"fhio30028490239331d1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"zrui578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"u8903458490239331d1e58355b8eeee108007f7accd4adc\",\r",
							"    \"ghui9028490239331d1e58355b8eeee108007f7accd4adc9dc\"\r",
							"]\r",
							"\r",
							"pm.test(\"should have status code of 200 \", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"should respond with correct network map\", function () {\r",
							"    const requestNetworkMap = JSON.parse(pm.request.body.raw).networkMap;\r",
							"    const responseNetworkMap = pm.response.json().networkSubMap;\r",
							"    pm.expect(requestNetworkMap).to.be.eql(responseNetworkMap);\r",
							"});\r",
							"\r",
							"pm.test(\"should respond with correct transaction\", function () {\r",
							"    const requestTransaction = JSON.parse(pm.request.body.raw).transaction;\r",
							"    const responseTransaction = pm.response.json().transaction;\r",
							"    pm.expect(requestTransaction).to.eql(responseTransaction);\r",
							"});\r",
							"\r",
							"pm.test(\"should have rule result of true\", function () {\r",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(false);\r",
							"    console.log(jsonData.ruleResult.reason)\r",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"Upstream transaction divergence within acceptable limits\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,\r",
							"        method: 'POST',\r",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify({\r",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}\r",
							"                        REMOVE { _key: transaction } IN transactionRelationship\r",
							"                        OPTIONS { ignoreErrors: true }`\r",
							"            })\r",
							"        }\r",
							"    })\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"transaction\": {\r\n        \"TxTp\": \"pacs.002.001.12\",\r\n        \"FIToFIPmtSts\": {\r\n            \"GrpHdr\": {\r\n                \"MsgId\": \"{{transactionID}}\",\r\n                \"CreDtTm\": \"{{now}}\"\r\n            },\r\n            \"TxInfAndSts\": {\r\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\r\n                \"OrgnlEndToEndId\": \"2c516801007642dfb89294dde\",\r\n                \"TxSts\": \"ACCC\",\r\n                \"ChrgsInf\": [\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 307.14,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 153.57,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 30.71,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp002\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\r\n                \"InstgAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp001\"\r\n                        }\r\n                    }\r\n                },\r\n                \"InstdAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n        \"networkMap\": {\r\n        \"messages\": [\r\n            {\r\n                \"id\": \"004_090@1.0.0\",\r\n                \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\r\n                \"cfg\": \"1.0.0\",\r\n                \"txTp\": \"pacs.002.001.12\",\r\n                \"channels\": [\r\n                    {\r\n                        \"id\": \"001@1.0.0\",\r\n                        \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r\n                        \"cfg\": \"1.0.0\",\r\n                        \"typologies\": [\r\n                            {\r\n                                \"id\": \"999_090@1.0.0\",\r\n                                \"host\": \"{{ofUrl}}function/off-typology-processor-rel-1-0-0\",\r\n                                \"cfg\": \"1.0.0\",\r\n                                \"rules\": [\r\n                                    {\r\n                                        \"id\": \"090@1.0.0\",\r\n                                        \"host\": \"{{ofUrl}}function/off-rule-090{{version}}\",\r\n                                        \"cfg\": \"1.0.0\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-090{{version}}/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-090{{version}}",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Scenario 3",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"\r",
							"const now = new Date().getTime();\r",
							"const arangourl = pm.environment.get('arangoUrl');\r",
							"\r",
							"var uuid = require('uuid');\r",
							"var myUUID = uuid.v4();\r",
							"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
							"\r",
							"const ruleConfig = [\r",
							"    {\r",
							"        \"id\": \"090@1.0.0\",\r",
							"        \"cfg\": \"1.0.0\",\r",
							"        \"config\": {\r",
							"            \"timeframes\": [\r",
							"                {\r",
							"                    \"threshold\": 28800000\r",
							"                }\r",
							"            ],\r",
							"            \"bands\": [\r",
							"                {\r",
							"                    \"subRuleRef\": \".00\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Insufficient transaction history\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".01\",\r",
							"                    \"upperLimit\": 3,\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Upstream transaction divergence within acceptable limits\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".02\",\r",
							"                    \"lowerLimit\": 3,\r",
							"                    \"outcome\": true,\r",
							"                    \"reason\": \"Upstream transaction divergence detected\"\r",
							"                }\r",
							"            ]\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"const transactionGraph = [\r",
							"\r",
							"    // A\r",
							"    {\r",
							"        _key: \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pacs.002.001.12\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(now).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r",
							"        EndToEndId: \"2c516801007642dfb89294dde\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // B to A\r",
							"    {\r",
							"        _key: \"97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af93\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CreDtTm\": new Date(new Date(now - 21600000)).toISOString(),\r",
							"        \"Amt\": 9000,\r",
							"        \"Ccy\": \"ZAR\",\r",
							"        \"PmtInfId\": \"b51ec534ee48-4575-b6a9-ead2955b8069\",\r",
							"        \"EndToEndId\": \"2c516801007642dfb89294dde\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // C to A\r",
							"    {\r",
							"        _key: \"123578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af9311111\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CreDtTm\": new Date(new Date(now - 10800000)).toISOString(),\r",
							"        \"Amt\": 9000,\r",
							"        \"Ccy\": \"ZAR\",\r",
							"        \"PmtInfId\": \"b51ec534ee48-4575-b6a9-ead2955b8064\",\r",
							"        \"EndToEndId\": \"2c516801007642dfb892944dde65400\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // B to C\r",
							"    {\r",
							"        _key: \"io30028490239331d1e58355b8eeee108007f7accd4adcv\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af93\",\r",
							"        _to: \"accounts/pdu29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pain.001.001.11\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now - 3600000)).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1c\",\r",
							"        EndToEndId: \"2c516801007642dfb892944dde65400\"\r",
							"    },\r",
							"\r",
							"    // B to D 1\r",
							"    {\r",
							"        _key: \"fhio30028490239331d1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af93\",\r",
							"        _to: \"accounts/fd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pain.001.001.11\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now - 120000)).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1c\",\r",
							"        EndToEndId: \"2c516801007642dfb892944dde65400\"\r",
							"    },\r",
							"\r",
							"    // B to D 2\r",
							"    {\r",
							"        _key: \"zrui578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af93\",\r",
							"        _to: \"accounts/fd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CreDtTm\": new Date(new Date(now - 7200000)).toISOString(),\r",
							"        \"Amt\": 10000,\r",
							"        \"Ccy\": \"ZAR\",\r",
							"        \"PmtInfId\": \"b51ec534ee48-4575-b6a9-ead2955b8064\",\r",
							"        \"EndToEndId\": \"2c516801007642dfb892944dd7890\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // C to E 1    \r",
							"    {\r",
							"        _key: \"u8903458490239331d1e58355b8eeee108007f7accd4adc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af9311111\",\r",
							"        _to: \"accounts/www9dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pain.001.001.11\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now - 14400000)).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1c\",\r",
							"        EndToEndId: \"2c516801007642dfb892944d\"\r",
							"    },\r",
							"\r",
							"    // C to F\r",
							"    {\r",
							"        _key: \"ghui9028490239331d1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af9311111\",\r",
							"        _to: \"accounts/zzzfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pain.001.001.11\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now - 32400000)).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1c\",\r",
							"        EndToEndId: \"2c516801007642dfb892944dd7890w\"\r",
							"    }\r",
							"]\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
							"                    INSERT transaction INTO transactionRelationship\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"090\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const req = JSON.parse(request.data);\r",
							"\r",
							"const arangourl = pm.environment.get('arangoUrl');\r",
							"\r",
							"const graphTransactions = [\r",
							"    \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\", \r",
							"    \"123578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"io30028490239331d1e58355b8eeee108007f7accd4adcv\",\r",
							"    \"fhio30028490239331d1e58355b8eeee108007f7accd4adc9dc\", \r",
							"    \"zrui578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"u8903458490239331d1e58355b8eeee108007f7accd4adc\",\r",
							"    \"ghui9028490239331d1e58355b8eeee108007f7accd4adc9dc\"\r",
							"]\r",
							"\r",
							"pm.test(\"should have status code of 200 \", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"should respond with correct network map\", function () {\r",
							"    const requestNetworkMap = JSON.parse(pm.request.body.raw).networkMap;\r",
							"    const responseNetworkMap = pm.response.json().networkSubMap;\r",
							"    pm.expect(requestNetworkMap).to.be.eql(responseNetworkMap);\r",
							"});\r",
							"\r",
							"pm.test(\"should respond with correct transaction\", function () {\r",
							"    const requestTransaction = JSON.parse(pm.request.body.raw).transaction;\r",
							"    const responseTransaction = pm.response.json().transaction;\r",
							"    pm.expect(requestTransaction).to.eql(responseTransaction);\r",
							"});\r",
							"\r",
							"pm.test(\"should have rule result of true\", function () {\r",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(true);\r",
							"    console.log(jsonData.ruleResult.reason)\r",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"Upstream transaction divergence detected\");\r",
							"});\r",
							"\r",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,\r",
							"        method: 'POST',\r",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify({\r",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}\r",
							"                        REMOVE { _key: transaction } IN transactionRelationship\r",
							"                        OPTIONS { ignoreErrors: true }`\r",
							"            })\r",
							"        }\r",
							"    })\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"transaction\": {\r\n        \"TxTp\": \"pacs.002.001.12\",\r\n        \"FIToFIPmtSts\": {\r\n            \"GrpHdr\": {\r\n                \"MsgId\": \"{{transactionID}}\",\r\n                \"CreDtTm\": \"{{now}}\"\r\n            },\r\n            \"TxInfAndSts\": {\r\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\r\n                \"OrgnlEndToEndId\": \"2c516801007642dfb89294dde\",\r\n                \"TxSts\": \"ACCC\",\r\n                \"ChrgsInf\": [\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 307.14,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 153.57,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 30.71,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp002\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\r\n                \"InstgAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp001\"\r\n                        }\r\n                    }\r\n                },\r\n                \"InstdAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n        \"networkMap\": {\r\n        \"messages\": [\r\n            {\r\n                \"id\": \"004_090@1.0.0\",\r\n                \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\r\n                \"cfg\": \"1.0.0\",\r\n                \"txTp\": \"pacs.002.001.12\",\r\n                \"channels\": [\r\n                    {\r\n                        \"id\": \"001@1.0.0\",\r\n                        \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r\n                        \"cfg\": \"1.0.0\",\r\n                        \"typologies\": [\r\n                            {\r\n                                \"id\": \"999_090@1.0.0\",\r\n                                \"host\": \"{{ofUrl}}function/off-typology-processor-rel-1-0-0\",\r\n                                \"cfg\": \"1.0.0\",\r\n                                \"rules\": [\r\n                                    {\r\n                                        \"id\": \"090@1.0.0\",\r\n                                        \"host\": \"{{ofUrl}}function/off-rule-090{{version}}\",\r\n                                        \"cfg\": \"1.0.0\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-090{{version}}/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-090{{version}}",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Scenario 4",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"\r",
							"const now = new Date().getTime();\r",
							"const arangourl = pm.environment.get('arangoUrl');\r",
							"\r",
							"var uuid = require('uuid');\r",
							"var myUUID = uuid.v4();\r",
							"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
							"\r",
							"const ruleConfig = [\r",
							"    {\r",
							"        \"id\": \"090@1.0.0\",\r",
							"        \"cfg\": \"1.0.1\",\r",
							"        \"config\": {\r",
							"            \"timeframes\": [\r",
							"                {\r",
							"                    \"threshold\": 43200000\r",
							"                }\r",
							"            ],\r",
							"            \"bands\": [\r",
							"                {\r",
							"                    \"subRuleRef\": \".00\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Insufficient transaction history\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".01\",\r",
							"                    \"upperLimit\": 3,\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Upstream transaction divergence within acceptable limits\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".02\",\r",
							"                    \"lowerLimit\": 3,\r",
							"                    \"outcome\": true,\r",
							"                    \"reason\": \"Upstream transaction divergence detected\"\r",
							"                }\r",
							"            ]\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"const transactionGraph = [\r",
							"\r",
							"    // A\r",
							"    {\r",
							"        _key: \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pacs.002.001.12\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(now).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r",
							"        EndToEndId: \"2c516801007642dfb89294dde\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // B to A\r",
							"    {\r",
							"        _key: \"97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af93\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CreDtTm\": new Date(new Date(now - 21600000)).toISOString(),\r",
							"        \"Amt\": 9000,\r",
							"        \"Ccy\": \"ZAR\",\r",
							"        \"PmtInfId\": \"b51ec534ee48-4575-b6a9-ead2955b8069\",\r",
							"        \"EndToEndId\": \"2c516801007642dfb89294dde\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // C to A\r",
							"    {\r",
							"        _key: \"123578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af9311111\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CreDtTm\": new Date(new Date(now - 10800000)).toISOString(),\r",
							"        \"Amt\": 9000,\r",
							"        \"Ccy\": \"ZAR\",\r",
							"        \"PmtInfId\": \"b51ec534ee48-4575-b6a9-ead2955b8064\",\r",
							"        \"EndToEndId\": \"2c516801007642dfb892944dde65400\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // B to D 1\r",
							"    {\r",
							"        _key: \"fhio30028490239331d1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af93\",\r",
							"        _to: \"accounts/fd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pain.001.001.11\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now - 120000)).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1c\",\r",
							"        EndToEndId: \"2c516801007642dfb892944dde65400\"\r",
							"    },\r",
							"\r",
							"    // B to D 2\r",
							"    {\r",
							"        _key: \"zrui578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af93\",\r",
							"        _to: \"accounts/fd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CreDtTm\": new Date(new Date(now - 7200000)).toISOString(),\r",
							"        \"Amt\": 10000,\r",
							"        \"Ccy\": \"ZAR\",\r",
							"        \"PmtInfId\": \"b51ec534ee48-4575-b6a9-ead2955b8064\",\r",
							"        \"EndToEndId\": \"2c516801007642dfb892944dd7890\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // C to E 1    \r",
							"    {\r",
							"        _key: \"u8903458490239331d1e58355b8eeee108007f7accd4adc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af9311111\",\r",
							"        _to: \"accounts/www9dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pain.001.001.11\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now - 14400000)).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1c\",\r",
							"        EndToEndId: \"2c516801007642dfb892944d\"\r",
							"    },\r",
							"\r",
							"    // C to F\r",
							"    {\r",
							"        _key: \"ghui9028490239331d1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af9311111\",\r",
							"        _to: \"accounts/zzzfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pain.001.001.11\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now - 32400000)).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1c\",\r",
							"        EndToEndId: \"2c516801007642dfb892944dd7890w\"\r",
							"    }\r",
							"]\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
							"                    INSERT transaction INTO transactionRelationship\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"090\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const req = JSON.parse(request.data);\r",
							"const arangourl = pm.environment.get('arangoUrl');\r",
							"\r",
							"\r",
							"const graphTransactions = [\r",
							"    \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\", \r",
							"    \"123578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"fhio30028490239331d1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"zrui578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"u8903458490239331d1e58355b8eeee108007f7accd4adc\",\r",
							"    \"ghui9028490239331d1e58355b8eeee108007f7accd4adc9dc\"\r",
							"]\r",
							"\r",
							"pm.test(\"should have status code of 200 \", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"should respond with correct network map\", function () {\r",
							"    const requestNetworkMap = JSON.parse(pm.request.body.raw).networkMap;\r",
							"    const responseNetworkMap = pm.response.json().networkSubMap;\r",
							"    pm.expect(requestNetworkMap).to.be.eql(responseNetworkMap);\r",
							"});\r",
							"\r",
							"pm.test(\"should respond with correct transaction\", function () {\r",
							"    const requestTransaction = JSON.parse(pm.request.body.raw).transaction;\r",
							"    const responseTransaction = pm.response.json().transaction;\r",
							"    pm.expect(requestTransaction).to.eql(responseTransaction);\r",
							"});\r",
							"\r",
							"pm.test(\"should have rule result of true\", function () {\r",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(true);\r",
							"    console.log(jsonData.ruleResult.reason)\r",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"Upstream transaction divergence detected\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,\r",
							"        method: 'POST',\r",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify({\r",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}\r",
							"                        REMOVE { _key: transaction } IN transactionRelationship\r",
							"                        OPTIONS { ignoreErrors: true }`\r",
							"            })\r",
							"        }\r",
							"    })\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"transaction\": {\r\n        \"TxTp\": \"pacs.002.001.12\",\r\n        \"FIToFIPmtSts\": {\r\n            \"GrpHdr\": {\r\n                \"MsgId\": \"{{transactionID}}\",\r\n                \"CreDtTm\": \"{{now}}\"\r\n            },\r\n            \"TxInfAndSts\": {\r\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\r\n                \"OrgnlEndToEndId\": \"2c516801007642dfb89294dde\",\r\n                \"TxSts\": \"ACCC\",\r\n                \"ChrgsInf\": [\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 307.14,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 153.57,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 30.71,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp002\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\r\n                \"InstgAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp001\"\r\n                        }\r\n                    }\r\n                },\r\n                \"InstdAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n       \"networkMap\": {\r\n        \"messages\": [\r\n            {\r\n                \"id\": \"004_090@1.0.0\",\r\n                \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\r\n                \"cfg\": \"1.0.0\",\r\n                \"txTp\": \"pacs.002.001.12\",\r\n                \"channels\": [\r\n                    {\r\n                        \"id\": \"001@1.0.0\",\r\n                        \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r\n                        \"cfg\": \"1.0.0\",\r\n                        \"typologies\": [\r\n                            {\r\n                                \"id\": \"999_090@1.0.0\",\r\n                                \"host\": \"{{ofUrl}}function/off-typology-processor-rel-1-0-0\",\r\n                                \"cfg\": \"1.0.0\",\r\n                                \"rules\": [\r\n                                    {\r\n                                        \"id\": \"090@1.0.0\",\r\n                                        \"host\": \"{{ofUrl}}function/off-rule-090{{version}}\",\r\n                                        \"cfg\": \"1.0.1\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-090{{version}}/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-090{{version}}",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Scenario 5",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.globals.set(\"now\", new Date().toISOString());\r",
							"\r",
							"const now = new Date().getTime();\r",
							"const arangourl = pm.environment.get('arangoUrl');\r",
							"\r",
							"var uuid = require('uuid');\r",
							"var myUUID = uuid.v4();\r",
							"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
							"\r",
							"const ruleConfig = [\r",
							"    {\r",
							"        \"id\": \"090@1.0.0\",\r",
							"        \"cfg\": \"1.0.2\",\r",
							"        \"config\": {\r",
							"            \"timeframes\": [\r",
							"                {\r",
							"                    \"threshold\": 28800000\r",
							"                }\r",
							"            ],\r",
							"            \"bands\": [\r",
							"                {\r",
							"                    \"subRuleRef\": \".00\",\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Insufficient transaction history\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".01\",\r",
							"                    \"upperLimit\": 2,\r",
							"                    \"outcome\": false,\r",
							"                    \"reason\": \"Upstream transaction divergence within acceptable limits\"\r",
							"                },\r",
							"                {\r",
							"                    \"subRuleRef\": \".02\",\r",
							"                    \"lowerLimit\": 2,\r",
							"                    \"outcome\": true,\r",
							"                    \"reason\": \"Upstream transaction divergence detected\"\r",
							"                }\r",
							"            ]\r",
							"        }\r",
							"    }\r",
							"]\r",
							"\r",
							"const transactionGraph = [\r",
							"\r",
							"    // A\r",
							"    {\r",
							"        _key: \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pacs.002.001.12\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(now).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r",
							"        EndToEndId: \"2c516801007642dfb89294dde\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // B to A\r",
							"    {\r",
							"        _key: \"97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af93\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CreDtTm\": new Date(new Date(now - 21600000)).toISOString(),\r",
							"        \"Amt\": 9000,\r",
							"        \"Ccy\": \"ZAR\",\r",
							"        \"PmtInfId\": \"b51ec534ee48-4575-b6a9-ead2955b8069\",\r",
							"        \"EndToEndId\": \"2c516801007642dfb89294dde\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // C to A\r",
							"    {\r",
							"        _key: \"123578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af9311111\",\r",
							"        _to: \"accounts/af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CreDtTm\": new Date(new Date(now - 10800000)).toISOString(),\r",
							"        \"Amt\": 9000,\r",
							"        \"Ccy\": \"ZAR\",\r",
							"        \"PmtInfId\": \"b51ec534ee48-4575-b6a9-ead2955b8064\",\r",
							"        \"EndToEndId\": \"2c516801007642dfb892944dde65400\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // B to D 1\r",
							"    {\r",
							"        _key: \"fhio30028490239331d1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af93\",\r",
							"        _to: \"accounts/fd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pain.001.001.11\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now - 120000)).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1c\",\r",
							"        EndToEndId: \"2c516801007642dfb892944dde65400\"\r",
							"    },\r",
							"\r",
							"    // B to D 2\r",
							"    {\r",
							"        _key: \"zrui578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af93\",\r",
							"        _to: \"accounts/fd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        \"TxTp\": \"pain.001.001.11\",\r",
							"        \"CreDtTm\": new Date(new Date(now - 7200000)).toISOString(),\r",
							"        \"Amt\": 10000,\r",
							"        \"Ccy\": \"ZAR\",\r",
							"        \"PmtInfId\": \"b51ec534ee48-4575-b6a9-ead2955b8064\",\r",
							"        \"EndToEndId\": \"2c516801007642dfb892944dd7890\"\r",
							"\r",
							"    },\r",
							"\r",
							"    // C to E 1    \r",
							"    {\r",
							"        _key: \"u8903458490239331d1e58355b8eeee108007f7accd4adc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af9311111\",\r",
							"        _to: \"accounts/www9dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pain.001.001.11\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now - 14400000)).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1c\",\r",
							"        EndToEndId: \"2c516801007642dfb892944d\"\r",
							"    },\r",
							"\r",
							"    // C to F\r",
							"    {\r",
							"        _key: \"ghui9028490239331d1e58355b8eeee108007f7accd4adc9dc\",\r",
							"        _from: \"accounts/af36cfd29dd05eb483358899055a552af9311111\",\r",
							"        _to: \"accounts/zzzfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",\r",
							"        TxTp: \"pain.001.001.11\",\r",
							"        TxSts: \"ACCC\",\r",
							"        CreDtTm: new Date(new Date(now - 32400000)).toISOString(),\r",
							"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1c\",\r",
							"        EndToEndId: \"2c516801007642dfb892944dd7890w\"\r",
							"    }\r",
							"]\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
							"                    INSERT transaction INTO transactionRelationship\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${arangourl}_db/Configuration/_api/cursor?waitForSync=true`,\r",
							"    method: 'POST',\r",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
							"                    INSERT {_key: \"090\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
							"                    OPTIONS { overwrite: true }`\r",
							"        })\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const req = JSON.parse(request.data);\r",
							"\r",
							"const arangourl = pm.environment.get('arangoUrl');\r",
							"\r",
							"const graphTransactions = [\r",
							"    \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\", \"123578902151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"fhio30028490239331d1e58355b8eeee108007f7accd4adc9dc\",\r",
							"    \"zrui578902151ad1e58355b8eeee108007f7accd4adc9dc\",\"u8903458490239331d1e58355b8eeee108007f7accd4adc\",\r",
							"    \"ghui9028490239331d1e58355b8eeee108007f7accd4adc9dc\"\r",
							"]\r",
							"\r",
							"pm.test(\"should have status code of 200 \", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"should respond with correct network map\", function () {\r",
							"    const requestNetworkMap = JSON.parse(pm.request.body.raw).networkMap;\r",
							"    const responseNetworkMap = pm.response.json().networkSubMap;\r",
							"    pm.expect(requestNetworkMap).to.be.eql(responseNetworkMap);\r",
							"});\r",
							"\r",
							"pm.test(\"should respond with correct transaction\", function () {\r",
							"    const requestTransaction = JSON.parse(pm.request.body.raw).transaction;\r",
							"    const responseTransaction = pm.response.json().transaction;\r",
							"    pm.expect(requestTransaction).to.eql(responseTransaction);\r",
							"});\r",
							"\r",
							"pm.test(\"should have rule result of true\", function () {\r",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(true);\r",
							"    console.log(jsonData.ruleResult.reason)\r",
							"    pm.expect(jsonData.ruleResult.reason).to.be.eql(\"Upstream transaction divergence detected\");\r",
							"});\r",
							"\r",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,\r",
							"        method: 'POST',\r",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify({\r",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}\r",
							"                        REMOVE { _key: transaction } IN transactionRelationship\r",
							"                        OPTIONS { ignoreErrors: true }`\r",
							"            })\r",
							"        }\r",
							"    })\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"transaction\": {\r\n        \"TxTp\": \"pacs.002.001.12\",\r\n        \"FIToFIPmtSts\": {\r\n            \"GrpHdr\": {\r\n                \"MsgId\": \"{{transactionID}}\",\r\n                \"CreDtTm\": \"{{now}}\"\r\n            },\r\n            \"TxInfAndSts\": {\r\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\r\n                \"OrgnlEndToEndId\": \"2c516801007642dfb89294dde\",\r\n                \"TxSts\": \"ACCC\",\r\n                \"ChrgsInf\": [\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 307.14,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 153.57,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp001\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Amt\": {\r\n                            \"Amt\": 30.71,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"Agt\": {\r\n                            \"FinInstnId\": {\r\n                                \"ClrSysMmbId\": {\r\n                                    \"MmbId\": \"dfsp002\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\r\n                \"InstgAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp001\"\r\n                        }\r\n                    }\r\n                },\r\n                \"InstdAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n       \"networkMap\": {\r\n        \"messages\": [\r\n            {\r\n                \"id\": \"004_090@1.0.0\",\r\n                \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\r\n                \"cfg\": \"1.0.0\",\r\n                \"txTp\": \"pacs.002.001.12\",\r\n                \"channels\": [\r\n                    {\r\n                        \"id\": \"001@1.0.0\",\r\n                        \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r\n                        \"cfg\": \"1.0.0\",\r\n                        \"typologies\": [\r\n                            {\r\n                                \"id\": \"999_090@1.0.0\",\r\n                                \"host\": \"{{ofUrl}}function/off-typology-processor-rel-1-0-0\",\r\n                                \"cfg\": \"1.0.0\",\r\n                                \"rules\": [\r\n                                    {\r\n                                        \"id\": \"090@1.0.0\",\r\n                                        \"host\": \"{{ofUrl}}function/off-rule-090{{version}}\",\r\n                                        \"cfg\": \"1.0.2\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-090{{version}}/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-090{{version}}",
						"execute"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "EndToEndId",
			"value": ""
		},
		{
			"key": "transactionID",
			"value": ""
		}
	]
}