{
	"info": {
		"_postman_id": "870f64eb-6026-494a-8572-425b2c42782c",
		"name": "Rule054 Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "e2e pacs 002",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"var req = JSON.parse(request.data);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"should not have errors\", function () {",
									"    pm.expect(jsonData).not.to.have.property('errors')",
									"});",
									"",
									"pm.test(\"should be a valid transaction\", function () {",
									"    pm.expect(jsonData.message).to.eql(\"Transaction is valid\");",
									"});",
									"",
									"pm.test(\"should send to data preparation successfully\", function () {",
									"    pm.expect(jsonData.sent).to.eql(true);",
									"});",
									"",
									"pm.test(\"should have the same outgoing and incoming json\", function () {",
									"    pm.expect(jsonData.data).to.eql(req);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var uuid = require('uuid');\r",
									"var myUUID = uuid.v4();\r",
									"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
									"\r",
									"const msgId = pm.collectionVariables.get(\"transactionID\");\r",
									"const arangourl = pm.environment.get('arangoUrl');\r",
									"const baseUrl = pm.environment.get('ofUrl');\r",
									"const version = pm.environment.get(\"version\");\r",
									"const now = new Date().getTime();\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/networkmap/_api/cursor`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR doc IN networkConfiguration\r",
									"                    FILTER doc.active == true\r",
									"                    UPDATE doc WITH { active: false } IN networkConfiguration`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"const ruleConfig = [\r",
									"    {\r",
									"        \"id\": \"054@1.0.0\",\r",
									"        \"cfg\": \"1.0.1\",\r",
									"        \"config\": {\r",
									"            \"bands\": [\r",
									"                {\r",
									"                    \"subRuleRef\": \".00\",\r",
									"                    \"upperLimit\": 3,\r",
									"                    \"outcome\": false,\r",
									"                    \"reason\": \"Insufficient transaction history\"\r",
									"                },\r",
									"                {\r",
									"                    \"subRuleRef\": \".01\",\r",
									"                    \"upperLimit\": 15.5073,\r",
									"                    \"outcome\": false,\r",
									"                    \"reason\": \"Benfords Law: Debtor transaction history indicates a low probability of fictitious amounts\"\r",
									"                },\r",
									"                {\r",
									"                    \"subRuleRef\": \".02\",\r",
									"                    \"lowerLimit\": 15.5073,\r",
									"                    \"outcome\": true,\r",
									"                    \"reason\": \"Benfords Law: Debtor transaction history indicates a high probability of fictitious amounts\"\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    }\r",
									"]\r",
									"\r",
									"let e2eID = JSON.stringify(msgId);\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"pm.collectionVariables.set(\"EndToEndId\", e2eID);\r",
									"\r",
									"const networkMaps = [\r",
									"    {\r",
									"        \"key\": \"054\",\r",
									"        \"active\": true,\r",
									"        \"cfg\": \"1.0.0\",\r",
									"        \"messages\": [\r",
									"            {\r",
									"                \"id\": \"004_054@1.0.0\",\r",
									"                \"host\": `${baseUrl}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0`,\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"txTp\": \"pacs.002.001.12\",\r",
									"                \"channels\": [\r",
									"                    {\r",
									"                        \"id\": \"001@1.0.0\",\r",
									"                        \"host\": `${baseUrl}function/off-channel-aggregation-decisioning-processor-rel-1-0-0`,\r",
									"                        \"cfg\": \"1.0.0\",\r",
									"                        \"typologies\": [\r",
									"                            {\r",
									"                                \"id\": \"999_054@1.0.0\",\r",
									"                                \"host\": `${baseUrl}function/off-typology-processor-rel-1-0-0`,\r",
									"                                \"cfg\": \"1.0.0\",\r",
									"                                \"rules\": [\r",
									"                                    {\r",
									"                                        \"id\": \"054@1.0.0\",\r",
									"                                        \"host\": `${baseUrl}function/off-rule-054${version}`,\r",
									"                                        \"cfg\": \"1.0.1\"\r",
									"                                    }\r",
									"                                ]\r",
									"                            }\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        ]\r",
									"    }\r",
									"]\r",
									"\r",
									"const tpExpressions = [\r",
									"    {\r",
									"        \"typology_name\": \"End-to-end test\",\r",
									"        \"id\": \"999_054@1.0.0\",\r",
									"        \"cfg\": \"1.0.0\",\r",
									"        \"rules\": [\r",
									"            {\r",
									"                \"id\": \"054@1.0.0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"ref\": \".00\",\r",
									"                \"true\": \"0\",\r",
									"                \"false\": \"0\"\r",
									"            },\r",
									"            {\r",
									"                \"id\": \"054@1.0.0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"ref\": \".01\",\r",
									"                \"true\": \"100\",\r",
									"                \"false\": \"0\"\r",
									"            },\r",
									"            {\r",
									"                \"id\": \"054@1.0.0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"ref\": \".02\",\r",
									"                \"true\": \"0\",\r",
									"                \"false\": \"0\"\r",
									"            }\r",
									"        ],\r",
									"        \"expression\": {\r",
									"            \"operator\": \"+\",\r",
									"            \"terms\": [\r",
									"                {\r",
									"                    \"id\": \"054@1.0.0\",\r",
									"                    \"cfg\": \"1.0.0\"\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    }\r",
									"]\r",
									"\r",
									"const pacs008Transactions = [{\r",
									"    \"TxTp\": \"pacs.008.001.10\",\r",
									"    \"FIToFICstmrCdt\": {\r",
									"        \"GrpHdr\": {\r",
									"            \"MsgId\": \"96ae98292ec04bf29b5d40ba99864c38\",\r",
									"            \"CreDtTm\": new Date(new Date(now - 10000)).toISOString(),\r",
									"            \"NbOfTxs\": 1,\r",
									"            \"SttlmInf\": {\r",
									"                \"SttlmMtd\": \"CLRG\"\r",
									"            }\r",
									"        },\r",
									"        \"CdtTrfTxInf\": {\r",
									"            \"PmtId\": {\r",
									"                \"InstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\r",
									"                \"EndToEndId\": \"2c516801007642dfb89294dde\"\r",
									"            },\r",
									"            \"IntrBkSttlmAmt\": {\r",
									"                \"Amt\": {\r",
									"                    \"Amt\": 31048.89,\r",
									"                    \"Ccy\": \"USD\"\r",
									"                }\r",
									"            },\r",
									"            \"InstdAmt\": {\r",
									"                \"Amt\": {\r",
									"                    \"Amt\": 9000,\r",
									"                    \"Ccy\": \"ZAR\"\r",
									"                }\r",
									"            },\r",
									"            \"ChrgBr\": \"DEBT\",\r",
									"            \"ChrgsInf\": {\r",
									"                \"Amt\": {\r",
									"                    \"Amt\": 307.14,\r",
									"                    \"Ccy\": \"USD\"\r",
									"                },\r",
									"                \"Agt\": {\r",
									"                    \"FinInstnId\": {\r",
									"                        \"ClrSysMmbId\": {\r",
									"                            \"MmbId\": \"dfsp001\"\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"InitgPty\": {\r",
									"                \"Nm\": \"April Blake Grant\",\r",
									"                \"Id\": {\r",
									"                    \"PrvtId\": {\r",
									"                        \"DtAndPlcOfBirth\": {\r",
									"                            \"BirthDt\": \"1968-02-01\",\r",
									"                            \"CityOfBirth\": \"Unknown\",\r",
									"                            \"CtryOfBirth\": \"ZZ\"\r",
									"                        },\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"+27730975224\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CtctDtls\": {\r",
									"                    \"MobNb\": \"+27-730975224\"\r",
									"                }\r",
									"            },\r",
									"            \"Dbtr\": {\r",
									"                \"Nm\": \"April Blake Grant\",\r",
									"                \"Id\": {\r",
									"                    \"PrvtId\": {\r",
									"                        \"DtAndPlcOfBirth\": {\r",
									"                            \"BirthDt\": \"1968-02-01\",\r",
									"                            \"CityOfBirth\": \"Unknown\",\r",
									"                            \"CtryOfBirth\": \"ZZ\"\r",
									"                        },\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"+27730975224\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CtctDtls\": {\r",
									"                    \"MobNb\": \"+27-730975224\"\r",
									"                }\r",
									"            },\r",
									"            \"DbtrAcct\": {\r",
									"                \"Id\": {\r",
									"                    \"Othr\": {\r",
									"                        \"Id\": \"efdafefdee55c7a1e5eba4ccc0f01639dc37a048241b20495378f5a1343985b\",\r",
									"                        \"SchmeNm\": {\r",
									"                            \"Prtry\": \"PSEUDO\"\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"Nm\": \"April Grant\"\r",
									"            },\r",
									"            \"DbtrAgt\": {\r",
									"                \"FinInstnId\": {\r",
									"                    \"ClrSysMmbId\": {\r",
									"                        \"MmbId\": \"dfsp001\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"CdtrAgt\": {\r",
									"                \"FinInstnId\": {\r",
									"                    \"ClrSysMmbId\": {\r",
									"                        \"MmbId\": \"dfsp002\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"Cdtr\": {\r",
									"                \"Nm\": \"Felicia Easton Quill\",\r",
									"                \"Id\": {\r",
									"                    \"PrvtId\": {\r",
									"                        \"DtAndPlcOfBirth\": {\r",
									"                            \"BirthDt\": \"1935-05-08\",\r",
									"                            \"CityOfBirth\": \"Unknown\",\r",
									"                            \"CtryOfBirth\": \"ZZ\"\r",
									"                        },\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"+27707650428\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CtctDtls\": {\r",
									"                    \"MobNb\": \"+27-707650428\"\r",
									"                }\r",
									"            },\r",
									"            \"CdtrAcct\": {\r",
									"                \"Id\": {\r",
									"                    \"Othr\": {\r",
									"                        \"Id\": \"03aeae97e5e2263c8c22bc0dec6j579032xjjjijixzawrg900phcvcxda\",\r",
									"                        \"SchmeNm\": {\r",
									"                            \"Prtry\": \"PSEUDO\"\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"Nm\": \"Felicia Quill\"\r",
									"            },\r",
									"            \"Purp\": {\r",
									"                \"Cd\": \"MP2P\"\r",
									"            }\r",
									"        },\r",
									"        \"RgltryRptg\": {\r",
									"            \"Dtls\": {\r",
									"                \"Tp\": \"BALANCE OF PAYMENTS\",\r",
									"                \"Cd\": \"100\"\r",
									"            }\r",
									"        },\r",
									"        \"RmtInf\": {\r",
									"            \"Ustrd\": \"Payment of USD 30713.75 from April to Felicia\"\r",
									"        },\r",
									"        \"SplmtryData\": {\r",
									"            \"Envlp\": {\r",
									"                \"Doc\": {\r",
									"                    \"Xprtn\": \"2021-11-30T10:38:56.000Z\"\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}]\r",
									"const pacs002Transactions = [{\r",
									"    \"TxTp\": \"pacs.002.001.12\",\r",
									"    \"FIToFIPmtSts\": {\r",
									"        \"GrpHdr\": {\r",
									"            \"MsgId\": \"40bea71c5a054978ad0da7f94b2a40e9799\",\r",
									"            \"CreDtTm\": new Date(new Date(now)).toISOString(),\r",
									"        },\r",
									"        \"TxInfAndSts\": {\r",
									"            \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2255\",\r",
									"            \"OrgnlEndToEndId\": \"2c516801007642dfb89294dde\",\r",
									"            \"TxSts\": \"ACCC\",\r",
									"            \"ChrgsInf\": [\r",
									"                {\r",
									"                    \"Amt\": {\r",
									"                        \"Amt\": 307.14,\r",
									"                        \"Ccy\": \"USD\"\r",
									"                    },\r",
									"                    \"Agt\": {\r",
									"                        \"FinInstnId\": {\r",
									"                            \"ClrSysMmbId\": {\r",
									"                                \"MmbId\": \"dfsp001\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                {\r",
									"                    \"Amt\": {\r",
									"                        \"Amt\": 153.57,\r",
									"                        \"Ccy\": \"USD\"\r",
									"                    },\r",
									"                    \"Agt\": {\r",
									"                        \"FinInstnId\": {\r",
									"                            \"ClrSysMmbId\": {\r",
									"                                \"MmbId\": \"dfsp001\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                {\r",
									"                    \"Amt\": {\r",
									"                        \"Amt\": 30.71,\r",
									"                        \"Ccy\": \"USD\"\r",
									"                    },\r",
									"                    \"Agt\": {\r",
									"                        \"FinInstnId\": {\r",
									"                            \"ClrSysMmbId\": {\r",
									"                                \"MmbId\": \"dfsp002\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            ],\r",
									"            \"AccptncDtTm\": \"2021-12-03T15:24:26.000Z\",\r",
									"            \"InstgAgt\": {\r",
									"                \"FinInstnId\": {\r",
									"                    \"ClrSysMmbId\": {\r",
									"                        \"MmbId\": \"dfsp001\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"InstdAgt\": {\r",
									"                \"FinInstnId\": {\r",
									"                    \"ClrSysMmbId\": {\r",
									"                        \"MmbId\": \"dfsp002\"\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}]\r",
									"\r",
									"const pain001Transactions = [{\r",
									"    \"TxTp\": \"pain.001.001.11\",\r",
									"    \"CstmrCdtTrfInitn\": {\r",
									"        \"GrpHdr\": {\r",
									"            \"MsgId\": \"2669e349-500d-44ba-9e27-7767a1660aa0\",\r",
									"            \"CreDtTm\": new Date(new Date(now - 30000).getTime()).toISOString(),\r",
									"            \"NbOfTxs\": 1,\r",
									"            \"InitgPty\": {\r",
									"                \"Nm\": \"Ivan Reese Russel-Klein\",\r",
									"                \"Id\": {\r",
									"                    \"PrvtId\": {\r",
									"                        \"DtAndPlcOfBirth\": {\r",
									"                            \"BirthDt\": \"1967-11-23\",\r",
									"                            \"CityOfBirth\": \"Unknown\",\r",
									"                            \"CtryOfBirth\": \"ZZ\"\r",
									"                        },\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CtctDtls\": {\r",
									"                    \"MobNb\": \"\"\r",
									"                }\r",
									"            }\r",
									"        },\r",
									"        \"PmtInf\": {\r",
									"            \"PmtInfId\": \"2c516801007642dfb892944dde1cf845897\",\r",
									"            \"PmtMtd\": \"TRA\",\r",
									"            \"ReqdAdvcTp\": {\r",
									"                \"DbtAdvc\": {\r",
									"                    \"Cd\": \"ADWD\",\r",
									"                    \"Prtry\": \"Advice with transaction details\"\r",
									"                }\r",
									"            },\r",
									"            \"ReqdExctnDt\": {\r",
									"                \"Dt\": \"2021-10-07\",\r",
									"                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r",
									"            },\r",
									"            \"Dbtr\": {\r",
									"                \"Nm\": \"Ivan Reese Russel-Klein\",\r",
									"                \"Id\": {\r",
									"                    \"PrvtId\": {\r",
									"                        \"DtAndPlcOfBirth\": {\r",
									"                            \"BirthDt\": \"1967-11-23\",\r",
									"                            \"CityOfBirth\": \"Unknown\",\r",
									"                            \"CtryOfBirth\": \"ZZ\"\r",
									"                        },\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CtctDtls\": {\r",
									"                    \"MobNb\": \"\"\r",
									"                }\r",
									"            },\r",
									"            \"DbtrAcct\": {\r",
									"                \"Id\": {\r",
									"                    \"Othr\": {\r",
									"                        \"Id\": \"03aeae97e5e2263c8c22bc0dec615b\",\r",
									"                        \"SchmeNm\": {\r",
									"                            \"Prtry\": \"PASSPORT\"\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"Nm\": \"Ivan Russel-Klein\"\r",
									"            },\r",
									"            \"DbtrAgt\": {\r",
									"                \"FinInstnId\": {\r",
									"                    \"ClrSysMmbId\": {\r",
									"                        \"MmbId\": \"dfsp001\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"CdtTrfTxInf\": {\r",
									"                \"PmtId\": {\r",
									"                    \"EndToEndId\": \"2c516801007642dfb892944dde1cf84500\"\r",
									"                },\r",
									"                \"PmtTpInf\": {\r",
									"                    \"CtgyPurp\": {\r",
									"                        \"Prtry\": \"TRANSFER\"\r",
									"                    }\r",
									"                },\r",
									"                \"Amt\": {\r",
									"                    \"InstdAmt\": {\r",
									"                        \"Amt\": {\r",
									"                            \"Amt\": \"50431891779910900\",\r",
									"                            \"Ccy\": \"USD\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"EqvtAmt\": {\r",
									"                        \"Amt\": {\r",
									"                            \"Amt\": \"50431891779910900\",\r",
									"                            \"Ccy\": \"USD\"\r",
									"                        },\r",
									"                        \"CcyOfTrf\": \"USD\"\r",
									"                    }\r",
									"                },\r",
									"                \"ChrgBr\": \"DEBT\",\r",
									"                \"CdtrAgt\": {\r",
									"                    \"FinInstnId\": {\r",
									"                        \"ClrSysMmbId\": {\r",
									"                            \"MmbId\": \"dfsp002\"\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"Cdtr\": {\r",
									"                    \"Nm\": \"\",\r",
									"                    \"Id\": {\r",
									"                        \"PrvtId\": {\r",
									"                            \"DtAndPlcOfBirth\": {\r",
									"                                \"BirthDt\": \"1923-04-26\",\r",
									"                                \"CityOfBirth\": \"\",\r",
									"                                \"CtryOfBirth\": \"\"\r",
									"                            },\r",
									"                            \"Othr\": {\r",
									"                                \"Id\": \"\",\r",
									"                                \"SchmeNm\": {\r",
									"                                    \"Prtry\": \"MSISDN\"\r",
									"                                }\r",
									"                            }\r",
									"                        }\r",
									"                    },\r",
									"                    \"CtctDtls\": {\r",
									"                        \"MobNb\": \"\"\r",
									"                    }\r",
									"                },\r",
									"                \"CdtrAcct\": {\r",
									"                    \"Id\": {\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"c22bc0dec615b13ee614c\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    },\r",
									"                    \"Nm\": \"April Adamson\"\r",
									"                },\r",
									"                \"Purp\": {\r",
									"                    \"Cd\": \"MP2P\"\r",
									"                },\r",
									"                \"RgltryRptg\": {\r",
									"                    \"Dtls\": {\r",
									"                        \"Tp\": \"BALANCE OF PAYMENTS\",\r",
									"                        \"Cd\": \"100\"\r",
									"                    }\r",
									"                },\r",
									"                \"RmtInf\": {\r",
									"                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r",
									"                },\r",
									"                \"SplmtryData\": {\r",
									"                    \"Envlp\": {\r",
									"                        \"Doc\": {\r",
									"                            \"Cdtr\": {\r",
									"                                \"FrstNm\": \"Ivan\",\r",
									"                                \"MddlNm\": \"Reese\",\r",
									"                                \"LastNm\": \"Russel-Klein\",\r",
									"                                \"MrchntClssfctnCd\": \"BLANK\"\r",
									"                            },\r",
									"                            \"Dbtr\": {\r",
									"                                \"FrstNm\": \"\",\r",
									"                                \"MddlNm\": \"\",\r",
									"                                \"LastNm\": \"\",\r",
									"                                \"MrchntClssfctnCd\": \"BLANK\"\r",
									"                            },\r",
									"                            \"DbtrFinSvcsPrvdrFees\": {\r",
									"                                \"Ccy\": \"USD\",\r",
									"                                \"Amt\": \"499325661187237\"\r",
									"                            },\r",
									"                            \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        },\r",
									"        \"SplmtryData\": {\r",
									"            \"Envlp\": {\r",
									"                \"Doc\": {\r",
									"                    \"InitgPty\": {\r",
									"                        \"InitrTp\": \"CONSUMER\",\r",
									"                        \"Glctn\": {\r",
									"                            \"Lat\": \"-3.1291\",\r",
									"                            \"Long\": \"39.0006\"\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}]\r",
									"\r",
									"const pain013Transactions = [{\r",
									"    \"TxTp\": \"pain.013.001.09\",\r",
									"    \"CdtrPmtActvtnReq\": {\r",
									"        \"GrpHdr\": {\r",
									"            \"MsgId\": \"c46087cb-7688-4b36-9141-c9f1fb1ae511\",\r",
									"            \"CreDtTm\": new Date(new Date(now - 20000).getTime()).toISOString(),\r",
									"            \"NbOfTxs\": 1,\r",
									"            \"InitgPty\": {\r",
									"                \"Nm\": \"Horatio Sam Ford\",\r",
									"                \"Id\": {\r",
									"                    \"PrvtId\": {\r",
									"                        \"DtAndPlcOfBirth\": {\r",
									"                            \"BirthDt\": \"1981-04-11\",\r",
									"                            \"CityOfBirth\": \"Unknown\",\r",
									"                            \"CtryOfBirth\": \"ZZ\"\r",
									"                        },\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"+27721299138\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CtctDtls\": {\r",
									"                    \"MobNb\": \"+27-721299138\"\r",
									"                }\r",
									"            }\r",
									"        },\r",
									"        \"PmtInf\": {\r",
									"            \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\r",
									"            \"PmtMtd\": \"TRA\",\r",
									"            \"ReqdAdvcTp\": {\r",
									"                \"DbtAdvc\": {\r",
									"                    \"Cd\": \"ADWD\",\r",
									"                    \"Prtry\": \"Advice with transaction details\"\r",
									"                }\r",
									"            },\r",
									"            \"ReqdExctnDt\": {\r",
									"                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r",
									"            },\r",
									"            \"XpryDt\": {\r",
									"                \"DtTm\": \"2021-10-21\"\r",
									"            },\r",
									"            \"Dbtr\": {\r",
									"                \"Nm\": \"2021-10-21T14:02:54.000Z\",\r",
									"                \"Id\": {\r",
									"                    \"PrvtId\": {\r",
									"                        \"DtAndPlcOfBirth\": {\r",
									"                            \"BirthDt\": \"2021-10-07\",\r",
									"                            \"CityOfBirth\": \"Unknown\",\r",
									"                            \"CtryOfBirth\": \"zz\"\r",
									"                        },\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"ZZ\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"+27721299138\"\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"CtctDtls\": {\r",
									"                    \"MobNb\": \"+27-783078685\"\r",
									"                }\r",
									"            },\r",
									"            \"DbtrAcct\": {\r",
									"                \"Id\": {\r",
									"                    \"Othr\": {\r",
									"                        \"Id\": \"+27-721299138\",\r",
									"                        \"SchmeNm\": {\r",
									"                            \"Prtry\": \"+27721299138\"\r",
									"                        },\r",
									"                        \"Nm\": \"PASSPORT\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"DbtrAgt\": {\r",
									"                \"FinInstnId\": {\r",
									"                    \"ClrSysMmbId\": {\r",
									"                        \"MmbId\": \"Horatio Ford\"\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"CdtTrfTxInf\": {\r",
									"                \"PmtId\": {\r",
									"                    \"EndToEndId\": \"2c516801007642dfb892944dde1cf84500\"\r",
									"                },\r",
									"                \"PmtTpInf\": {\r",
									"                    \"CtgyPurp\": {\r",
									"                        \"Prtry\": \"TRANSFER\"\r",
									"                    }\r",
									"                },\r",
									"                \"Amt\": {\r",
									"                    \"InstdAmt\": {\r",
									"                        \"Amt\": {\r",
									"                            \"Amt\": 50431891779910900,\r",
									"                            \"Ccy\": \"USD\"\r",
									"                        }\r",
									"                    },\r",
									"                    \"EqvtAmt\": {\r",
									"                        \"Amt\": {\r",
									"                            \"Amt\": 50431891779910900,\r",
									"                            \"Ccy\": \"USD\"\r",
									"                        },\r",
									"                        \"CcyOfTrf\": \"USD\"\r",
									"                    }\r",
									"                },\r",
									"                \"ChrgBr\": \"DEBT\",\r",
									"                \"CdtrAgt\": {\r",
									"                    \"FinInstnId\": {\r",
									"                        \"ClrSysMmbId\": {\r",
									"                            \"MmbId\": \"dfsp002\"\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"Cdtr\": {\r",
									"                    \"Nm\": \"April Sam Adamson\",\r",
									"                    \"Id\": {\r",
									"                        \"PrvtId\": {\r",
									"                            \"DtAndPlcOfBirth\": {\r",
									"                                \"BirthDt\": \"1923-04-26\",\r",
									"                                \"CityOfBirth\": \"Unknown\",\r",
									"                                \"CtryOfBirth\": \"ZZ\"\r",
									"                            },\r",
									"                            \"Othr\": {\r",
									"                                \"Id\": \"+27782722305\",\r",
									"                                \"SchmeNm\": {\r",
									"                                    \"Prtry\": \"MSISDN\"\r",
									"                                }\r",
									"                            }\r",
									"                        }\r",
									"                    },\r",
									"                    \"CtctDtls\": {\r",
									"                        \"MobNb\": \"+27-782722305\"\r",
									"                    }\r",
									"                },\r",
									"                \"CdtrAcct\": {\r",
									"                    \"Id\": {\r",
									"                        \"Othr\": {\r",
									"                            \"Id\": \"+27783078685\",\r",
									"                            \"SchmeNm\": {\r",
									"                                \"Prtry\": \"MSISDN\"\r",
									"                            }\r",
									"                        }\r",
									"                    },\r",
									"                    \"Nm\": \"April Adamson\"\r",
									"                },\r",
									"                \"Purp\": {\r",
									"                    \"Cd\": \"MP2P\"\r",
									"                },\r",
									"                \"RgltryRptg\": {\r",
									"                    \"Dtls\": {\r",
									"                        \"Tp\": \"BALANCE OF PAYMENTS\",\r",
									"                        \"Cd\": \"100\"\r",
									"                    }\r",
									"                },\r",
									"                \"RmtInf\": {\r",
									"                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r",
									"                },\r",
									"                \"SplmtryData\": {\r",
									"                    \"Envlp\": {\r",
									"                        \"Doc\": {\r",
									"                            \"PyeeRcvAmt\": {\r",
									"                                \"Amt\": {\r",
									"                                    \"Amt\": 4906747824834590.33,\r",
									"                                    \"Ccy\": \"USD\"\r",
									"                                }\r",
									"                            },\r",
									"                            \"PyeeFinSvcsPrvdrFee\": {\r",
									"                                \"Amt\": {\r",
									"                                    \"Amt\": 49067478248345.9,\r",
									"                                    \"Ccy\": \"USD\"\r",
									"                                }\r",
									"                            },\r",
									"                            \"PyeeFinSvcsPrvdrComssn\": {\r",
									"                                \"Amt\": {\r",
									"                                    \"Amt\": 0,\r",
									"                                    \"Ccy\": \"USD\"\r",
									"                                }\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        },\r",
									"        \"SplmtryData\": {\r",
									"            \"Envlp\": {\r",
									"                \"Doc\": {\r",
									"                    \"InitgPty\": {\r",
									"                        \"Glctn\": {\r",
									"                            \"Lat\": \"-3.1675\",\r",
									"                            \"Long\": \"39.059\"\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"}]\r",
									"\r",
									"const transactionGraph = [\r",
									"    {\r",
									"        _key: \"97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
									"        _from: \"accounts/efdafefdee55c7a1e5eba4ccc0f01639dc37a048241b20495378f5a1343985b\",\r",
									"        _to: \"accounts/03aeae97e5e2263c8c22bc0dec6j579032xjjjijixzawrg900phcvcxda\",\r",
									"        \"TxTp\": \"pacs.008.001.10\",\r",
									"        \"CreDtTm\": new Date(new Date(now - 10000)).toISOString(),\r",
									"        \"Amt\": 9000,\r",
									"        \"Ccy\": \"ZAR\",\r",
									"        \"PmtInfId\": \"b51ec534ee48-4575-b6a9-ead2955b8069\",\r",
									"        \"EndToEndId\": \"2c516801007642dfb89294dde\"\r",
									"\r",
									"    },\r",
									"\r",
									"    {\r",
									"        _key: \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
									"        _from: \"accounts/efdafefdee55c7a1e5eba4ccc0f01639dc37a048241b20495378f5a1343985b\",\r",
									"        _to: \"accounts/03aeae97e5e2263c8c22bc0dec6j579032xjjjijixzawrg900phcvcxda\",\r",
									"        TxTp: \"pacs.002.001.12\",\r",
									"        TxSts: \"ACCC\",\r",
									"        CreDtTm: new Date(now).toISOString(),\r",
									"        PmtInfId: \"2f68ae16-467a-4ac4-ba32-eb518646aa1d\",\r",
									"        EndToEndId: \"2c516801007642dfb89294dde\"\r",
									"\r",
									"    }\r",
									"]\r",
									"\r",
									"setTimeout(checkStatusCode, 2000);\r",
									"\r",
									"function checkStatusCode() {\r",
									"\r",
									"    pm.sendRequest({\r",
									"        url: `${arangourl}_db/networkmap/_api/cursor`,\r",
									"        method: 'POST',\r",
									"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"        body: {\r",
									"            mode: 'raw',\r",
									"            raw: JSON.stringify({\r",
									"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}\r",
									"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration\r",
									"                    OPTIONS { overwrite: true }`\r",
									"            })\r",
									"        }\r",
									"    });\r",
									"}\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/Configuration/_api/cursor`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: {\r",
									"            query: `FOR expression IN ${JSON.stringify(tpExpressions)}\r",
									"                    INSERT {_key: \"054\", id: expression.id, cfg: expression.cfg, rules: expression.rules, expression: expression.expression } INTO typologyExpression\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        }\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/Configuration/_api/cursor`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR config IN ${JSON.stringify(ruleConfig)}\r",
									"                    INSERT {_key: \"054\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/pseudonyms/_api/cursor`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}\r",
									"                    INSERT transaction INTO transactionRelationship\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/transactionHistory/_api/cursor`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR transaction IN ${JSON.stringify(pain001Transactions)}\r",
									"                    INSERT {_key: \"9990541\", TxTp: transaction.TxTp, CstmrCdtTrfInitn: transaction.CstmrCdtTrfInitn} INTO transactionHistory\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/transactionHistory/_api/cursor`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR transaction IN ${JSON.stringify(pain013Transactions)}\r",
									"                    INSERT {_key: \"9990542\", TxTp: transaction.TxTp, CdtrPmtActvtnReq: transaction.CdtrPmtActvtnReq} INTO transactionHistory\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/transactionHistory/_api/cursor`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR transaction IN ${JSON.stringify(pacs008Transactions)}\r",
									"                    INSERT {_key: \"9990543\", TxTp: transaction.TxTp, FIToFICstmrCdt: transaction.FIToFICstmrCdt} INTO transactionHistory\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangourl}_db/transactionHistory/_api/cursor`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR transaction IN ${JSON.stringify(pacs002Transactions)}\r",
									"                    INSERT {_key: \"9990544\", TxTp: transaction.TxTp, FIToFIPmtSts: transaction.FIToFIPmtSts} INTO transactionHistory\r",
									"                    OPTIONS { overwrite: true }`\r",
									"        })\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"TxTp\": \"pacs.002.001.12\",\n  \"FIToFIPmtSts\": {\n    \"GrpHdr\": {\n      \"MsgId\": \"{{transactionID}}\",\n      \"CreDtTm\": \"2021-11-03T07:24:48.000Z\"\n    },\n    \"TxInfAndSts\": {\n      \"OrgnlInstrId\": \"557bf74712f14983900410a\",\n      \"OrgnlEndToEndId\": \"{{transactionID}}\",\n      \"TxSts\": \"ACCC\",\n      \"ChrgsInf\": [\n        {\n          \"Amt\": {\n            \"Amt\": 157605510200862,\n            \"Ccy\": \"USD\"\n          },\n          \"Agt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp001\"\n              }\n            }\n          }\n        },\n        {\n          \"Amt\": {\n            \"Amt\": 15918156530287100,\n            \"Ccy\": \"USD\"\n          },\n          \"Agt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp001\"\n              }\n            }\n          }\n        },\n        {\n          \"Amt\": {\n            \"Amt\": 15918156530287100,\n            \"Ccy\": \"USD\"\n          },\n          \"Agt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp002\"\n              }\n            }\n          }\n        }\n      ],\n      \"AccptncDtTm\": \"2021-11-03T07:24:47.000Z\",\n      \"InstgAgt\": {\n        \"FinInstnId\": {\n          \"ClrSysMmbId\": {\n            \"MmbId\": \"dfsp001\"\n          }\n        }\n      },\n      \"InstdAgt\": {\n        \"FinInstnId\": {\n          \"ClrSysMmbId\": {\n            \"MmbId\": \"dfsp002\"\n          }\n        }\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ofUrl}}function/off-transaction-monitoring-service-rel-1-0-0/transfer-response",
							"host": [
								"{{ofUrl}}function"
							],
							"path": [
								"off-transaction-monitoring-service-rel-1-0-0",
								"transfer-response"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"setTimeout(checkStatusCode, 5000);\r",
									"\r",
									"    function checkStatusCode() {\r",
									"\r",
									"        pm.sendRequest('https://postman-echo.com/get', function (err, res) {\r",
									"\r",
									"            tests['status code should be 200']= res.code ===200;\r",
									"\r",
									"        });\r",
									"    }var Header = require('postman-collection').Header;\r",
									"pm.request.headers.append(Header.create(`Bearer ${pm.globals.get(\"arangoToken\")}`, 'Authorization'));\r",
									"console.log(\"received end to end id for above request \",pm.collectionVariables.get(\"EndToEndId\")); \r",
									"\r",
									"pm.globals.set(\"query\", JSON.stringify(\r",
									"      `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.FIToFIPmtSts.GrpHdr.MsgId == \r",
									"       `+pm.collectionVariables.get(\"EndToEndId\")+`\r",
									"       return transaction ` \r",
									"));\r",
									"\r",
									"console.log(pm.environment.get(\"query\"))\r",
									" "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"const arangourl = pm.environment.get(\"arangoUrl\");\r",
									"const transactions = [\"9990541\", \"9990542\", \"9990543\", \"9990544\"]\r",
									"\r",
									"const graphTransactions = [\r",
									"    \"d923682a97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\",\r",
									"    \"97089a8416151ad1e58355b8eeee108007f7accd4adc9dc\"\r",
									"]\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"    pm.expect(jsonData.result[0].networkMap.cfg).to.eql('1.0.0');\r",
									"});\r",
									"\r",
									"pm.test(\"check that the report status is NALT \", function () {\r",
									"    pm.expect(jsonData.result[0].report.status).to.eql(\"NALT\")\r",
									"    pm.expect(jsonData.result[0].report.tadpResult.channelResult[0].typologyResult[0].ruleResults[0].result).to.eql(false);\r",
									"    pm.expect(jsonData.result[0].report.tadpResult.channelResult[0].typologyResult[0].ruleResults[0].subRuleRef).to.eql(\".00\");\r",
									"    pm.expect(jsonData.result[0].report.tadpResult.channelResult[0].typologyResult[0].ruleResults[0].reason).to.eql(\"Insufficient transaction history\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Remove Seed Data from DB\", function () {\r",
									"    pm.sendRequest({\r",
									"        url: `${arangourl}_db/transactionHistory/_api/cursor`,\r",
									"        method: 'POST',\r",
									"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"        body: {\r",
									"            mode: 'raw',\r",
									"            raw: JSON.stringify({\r",
									"                query: `FOR transaction IN ${JSON.stringify(transactions)}\r",
									"                        REMOVE { _key: transaction } IN transactionHistory\r",
									"                        OPTIONS { ignoreErrors: true }`\r",
									"            })\r",
									"        }\r",
									"    })\r",
									"});\r",
									"\r",
									"pm.test(\"Remove Seed Data from transactionGraph\", function () {\r",
									"    pm.sendRequest({\r",
									"        url: `${arangourl}_db/pseudonyms/_api/cursor`,\r",
									"        method: 'POST',\r",
									"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"        body: {\r",
									"            mode: 'raw',\r",
									"            raw: JSON.stringify({\r",
									"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}\r",
									"                        REMOVE { _key: transaction } IN transactionRelationship\r",
									"                        OPTIONS { ignoreErrors: true }`\r",
									"            })\r",
									"        }\r",
									"    })\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"for transaction In transactions FILTER transaction.transaction.FIToFIPmtSts.GrpHdr.MsgId ==  {{EndToEndId}} return transaction \"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{arangoUrl}}_db/transactionHistory/_api/cursor",
							"host": [
								"{{arangoUrl}}_db"
							],
							"path": [
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Scenario 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//AM-941 Scenario 1: Insufficient transaction history (54.00 = FALSE)",
							"",
							"pm.globals.set(\"now\", new Date().toISOString());",
							"",
							"const now = new Date().getTime();",
							"const arangourl = pm.environment.get('arangoUrl');",
							"var uuid = require('uuid');",
							"var e2eUUid = uuid.v4();",
							"pm.globals.set(\"e2eUUid\", e2eUUid);",
							"",
							"const ruleConfig = [",
							"    {",
							"    \"id\": \"054@1.0.0\",",
							"    \"cfg\": \"1.0.0\",",
							"    \"config\": {",
							"        \"bands\": [",
							"            {",
							"                \"subRuleRef\": \".00\",",
							"                \"upperLimit\": 3,",
							"                \"outcome\": false,",
							"                \"reason\": \"Insufficient transaction history\"",
							"            },",
							"            {",
							"                \"subRuleRef\": \".01\",",
							"                \"upperLimit\": 15.5073,",
							"                \"outcome\": false,",
							"                \"reason\": \"Benfords Law: Debtor transaction history indicates a low probability of fictitious amounts\"",
							"            },",
							"            {",
							"                \"subRuleRef\": \".02\",",
							"                \"lowerLimit\": 15.5073,",
							"                \"outcome\": true,",
							"                \"reason\": \"Benfords Law: Debtor transaction history indicates a high probability of fictitious amounts\"",
							"            }",
							"        ]",
							"    }",
							"}",
							"]",
							"",
							"const transactionGraph = [",
							"{",
							"      _key: '12345678909876543erfghyuioiuy654567876598765rtyu',",
							"      _id: 'transactionRelationship/12345678909876543erfghyuioiuy654567876598765rtyu',",
							"      _from: 'accounts/24058ebbdd500fe2307cdd5512345678987654345676t5trfghjn',",
							"      _to: 'accounts/098765432345678765456876545tgfcd45676543rtgbvjfr4567898',",
							"      _rev: '_d1dQxHe--_',",
							"      Amt: 10000,",
							"      TxTp: 'pacs.008.001.10',",
							"      CreDtTm: new Date(new Date(now - 10000).getTime()).toISOString(),",
							"      PmtInfId: '456754567878987898767876',",
							"      EndToEndId: '456754567878987898767876'",
							"}",
							"",
							"]",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}",
							"                    INSERT transaction INTO transactionRelationship",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/Configuration/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}",
							"                    INSERT {_key: \"054\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration",
							"                    OPTIONS { overwrite: true, waitForSync: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"const req = JSON.parse(request.data);",
							"const arangourl = pm.environment.get('arangoUrl');",
							"",
							"const graphTransactions = [\"12345678909876543erfghyuioiuy654567876598765rtyu\"]",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have rule result of false for Scenario 1: Insufficient transaction history (54.00 = FALSE)\", function () {",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(false);",
							"     pm.expect(jsonData.ruleResult.reason).to.be.eql('Insufficient transaction history');",
							"});",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}/_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transaction\": {\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"{{now}}\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n                \"OrgnlEndToEndId\": \"{{e2eUUid}}\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2054-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"networkMap\": {\n        \"messages\": [\n            {\n                \"id\": \"004_054@1.0.0\",\n                \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\n                \"cfg\": \"1.0.0\",\n                \"txTp\": \"pacs.002.001.12\",\n                \"channels\": [\n                    {\n                        \"id\": \"001@1.0.0\",\n                        \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\n                        \"cfg\": \"1.0.0\",\n                        \"typologies\": [\n                            {\n                                \"id\": \"999_054@1.0.0\",\n                                \"host\": \"{{ofUrl}}function/off-typology-processor-rel-1-0-0\",\n                                \"cfg\": \"1.0.0\",\n                                \"rules\": [\n                                    {\n                                        \"id\": \"054@1.0.0\",\n                                        \"host\": \"{{ofUrl}}function/off-rule-054{{version}}\",\n                                        \"cfg\": \"1.0.0\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-054-rel-1-0-0/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-054-rel-1-0-0",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Scenario 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//AM-942 Scenario 2: Insufficient successful transaction history (54.00 = FALSE)",
							"",
							"pm.globals.set(\"now\", new Date().toISOString());",
							"",
							"const now = new Date().getTime();",
							"const arangourl = pm.environment.get('arangoUrl');",
							"var uuid = require('uuid');",
							"var e2eUUid = uuid.v4();",
							"pm.globals.set(\"e2eUUid\", e2eUUid);",
							"",
							"const ruleConfig = [",
							"{",
							"    \"id\": \"054@1.0.0\",",
							"    \"cfg\": \"1.0.0\",",
							"    \"config\": {",
							"        \"bands\": [",
							"            {",
							"                \"subRuleRef\": \".00\",",
							"                \"upperLimit\": 3,",
							"                \"outcome\": false,",
							"                \"reason\": \"Insufficient transaction history\"",
							"            },",
							"            {",
							"                \"subRuleRef\": \".01\",",
							"                \"upperLimit\": 15.5073,",
							"                \"outcome\": false,",
							"                \"reason\": \"Benfords Law: Debtor transaction history indicates a low probability of fictitious amounts\"",
							"            },",
							"            {",
							"                \"subRuleRef\": \".02\",",
							"                \"lowerLimit\": 15.5073,",
							"                \"outcome\": true,",
							"                \"reason\": \"Benfords Law: Debtor transaction history indicates a high probability of fictitious amounts\"",
							"            }",
							"        ]",
							"    }",
							"}",
							"]",
							"",
							"const transactionGraph = [",
							"    {",
							"    _key: \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accd',",
							"    _from: \"accounts/e2fa05b6a56ceedb37581703b98590b44194a8c0d2799f4319ebbece5e20ecc1\",",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrt\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf67777\",",
							"    EndToEndId: \"34567865456789098tfcvbnhjgf67777\"",
							"},",
							" {",
							"    _key: \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e9012343\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accd',",
							"    _from: \"accounts/e2fa05b6a56ceedb37581703b98590b44194a8c0d2799f4319ebbece5e20ecc1\",",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrt\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACSC\",",
							"    CreDtTm: new Date(new Date(now - 40000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf67777\",",
							"    EndToEndId: \"34567865456789098tfcvbnhjgf67777\"",
							"},",
							"{",
							"    _key: \"asdfguy543456789087654rfghjkjhgre45678987654rtghj\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accd',",
							"    _from: \"accounts/e2fa05b6a56ceedb37581703b98590b44194a8c0d2799f4319ebbece5e20ecc1\",",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrt\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf67777\",",
							"    EndToEndId: \"34567865456789098tfcvbnhjgf67777\"",
							"},",
							"{",
							"      _key: 'd923682a97089a841898951878e99355b8eeee108008',",
							"      _id: 'transactionRelationship/d923682a97089a841898951878e99355b8eeee108008',",
							"      _from: 'accounts/sdfghy6543wdd500fe2307cdd55186e0abcd9726de477ae492dbe9d1e1282234567',",
							"      _to: 'accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrt',",
							"      _rev: '_d1dQxHe--_',",
							"      Amt: 10000,",
							"      TxTp: 'pacs.008.001.10',",
							"      CreDtTm: new Date(new Date(now - 200000).getTime()).toISOString(),",
							"      PmtInfId: '34567865456789098tfcvbnhjgf67777',",
							"      EndToEndId: '34567865456789098tfcvbnhjgf67777'",
							"},",
							"{",
							"      _key: 'd923682a97089a841898951878e99355b8eeee108008123456',",
							"      _id: 'transactionRelationship/d923682a97089a841898951878e99355b8eeee108008',",
							"      _from: 'accounts/sdfghy6543wdd500fe2307cdd55186e0abcd9726de477ae492dbe9d1e1282234567',",
							"      _to: 'accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrt',",
							"      _rev: '_d1dQxHe--_',",
							"      Amt: 10000,",
							"      TxTp: 'pacs.008.001.10',",
							"      CreDtTm: new Date(new Date(now - 100000).getTime()).toISOString(),",
							"      PmtInfId: '34567865456789098tfcvbnhjgf67777',",
							"      EndToEndId: '34567865456789098tfcvbnhjgf67777'",
							"},",
							"{",
							"      _key: '1234567898765jhgfde45676545678uhgt787654678765',",
							"      _id: 'transactionRelationship/1234567898765jhgfde45676545678uhgt787654678765',",
							"      _from: 'accounts/sdfghy6543wdd500fe2307cdd55186e0abcd9726de477ae492dbe9d1e1282234567',",
							"      _to: 'accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrt',",
							"      _rev: '_d1dQxHe--_',",
							"      Amt: 10000,",
							"      TxTp: 'pacs.008.001.10',",
							"      CreDtTm: new Date(new Date(now - 10000).getTime()).toISOString(),",
							"      PmtInfId: '34567865456789098tfcvbnhjgf67777',",
							"      EndToEndId: '34567865456789098tfcvbnhjgf67777'",
							"}",
							"",
							"]",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph)}",
							"                    INSERT transaction INTO transactionRelationship",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/Configuration/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}",
							"                    INSERT {_key: \"054\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"const req = JSON.parse(request.data);",
							"const arangourl = pm.environment.get('arangoUrl');",
							"",
							"const graphTransactions = [",
							"    \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\", ",
							"    \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e9012343\",",
							"    \"d923682a97089a841898951878e99355b8eeee108008\", ",
							"    \"d923682a97089a841898951878e99355b8eeee108008123456\", ",
							"    \"1234567898765jhgfde45676545678uhgt787654678765\", ",
							"    \"asdfguy543456789087654rfghjkjhgre45678987654rtghj\"]",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have rule result of false for Scenario 2: Insufficient successful transaction history (54.00 = FALSE)\", function () {",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(false);",
							"     pm.expect(jsonData.ruleResult.reason).to.be.eql('Insufficient transaction history');",
							"});",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transaction\": {\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"{{now}}\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n                \"OrgnlEndToEndId\": \"{{e2eUUid}}\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2054-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"networkMap\": {\n        \"messages\": [\n            {\n                \"id\": \"004_054@1.0.0\",\n                \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\n                \"cfg\": \"1.0.0\",\n                \"txTp\": \"pacs.002.001.12\",\n                \"channels\": [\n                    {\n                        \"id\": \"001@1.0.0\",\n                        \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\n                        \"cfg\": \"1.0.0\",\n                        \"typologies\": [\n                            {\n                                \"id\": \"999_054@1.0.0\",\n                                \"host\": \"{{ofUrl}}function/off-typology-processor-rel-1-0-0\",\n                                \"cfg\": \"1.0.0\",\n                                \"rules\": [\n                                    {\n                                        \"id\": \"054@1.0.0\",\n                                        \"host\": \"{{ofUrl}}function/off-rule-054{{version}}\",\n                                        \"cfg\": \"1.0.0\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-054-rel-1-0-0/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-054-rel-1-0-0",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Scenario 3",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//AM-943 Scenario 3: Successful transactions - Chi-Squared < 15.5073 (54.01 = FALSE)",
							"",
							"pm.globals.set(\"now\", new Date().toISOString());",
							"var uuid = require('uuid');",
							"var e2eUUid = uuid.v4();",
							"pm.globals.set(\"e2eUUid\", e2eUUid);",
							"const now = new Date().getTime();",
							"const arangourl = pm.environment.get('arangoUrl');",
							"",
							"const ruleConfig = [",
							"{",
							"    \"id\": \"054@1.0.0\",",
							"    \"cfg\": \"1.0.0\",",
							"    \"config\": {",
							"        \"bands\": [",
							"            {",
							"                \"subRuleRef\": \".00\",",
							"                \"upperLimit\": 3,",
							"                \"outcome\": false,",
							"                \"reason\": \"Insufficient transaction history\"",
							"            },",
							"            {",
							"                \"subRuleRef\": \".01\",",
							"                \"upperLimit\": 15.5073,",
							"                \"outcome\": false,",
							"                \"reason\": \"Benfords Law: Debtor transaction history indicates a low probability of fictitious amounts\"",
							"            },",
							"            {",
							"                \"subRuleRef\": \".02\",",
							"                \"lowerLimit\": 15.5073,",
							"                \"outcome\": true,",
							"                \"reason\": \"Benfords Law: Debtor transaction history indicates a high probability of fictitious amounts\"",
							"            }",
							"        ]",
							"    }",
							"}",
							"]",
							"",
							"const transactionGraph002 = [",
							"    {",
							"    _key: \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 87010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"},",
							" {",
							"    _key: \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e9012343\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 86010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"},",
							"{",
							"    _key: \"876543234tgbvfghjkgyuyt5678uyttyuikm552af93cd7ae360938321823456789\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 86010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"}",
							"]",
							"",
							"const transactionGraph008 =",
							"{",
							"      _key: 'd923682a97089a841898951878e99355b8eeee108008',",
							"      _id: 'transactionRelationship/d923682a97089a841898951878e99355b8eeee108008',",
							"      _from: `accounts/${e2eUUid}`,",
							"      _to: 'accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb',",
							"      _rev: '_d1dQxHe--_',",
							"      Amt: 10000,",
							"      TxTp: 'pacs.008.001.10',",
							"      CreDtTm: new Date(new Date(now - 87000000).getTime()).toISOString(),",
							"      PmtInfId: '34567865456789098tfcvbnhjgf6bz',",
							"      EndToEndId: `${e2eUUid}`",
							"}",
							"",
							"const duplicatedPacs008 = []",
							"",
							"const amounts = [110948, 199751, 138460, 174054, 171811, 194587, 131651, 139929, 160684, 117593, 117782, 293071, 270720, 226223, 209803, 262354, 212994, 215659, 288878, 311092, 363688, 366269, 377514, 313070, 387144, 402416, 484032, 407404, 417965, 448478, 549937, 506975, 505816, 588400, 521932, 549158, 532581, 577667, 518805, 634582, 655930, 684708, 753479, 724349, 717349, 793401, 802183, 880092, 833052, 964245, 900713, 967161]",
							"",
							"var pacs008MsgIds = []",
							"for (var i = 0; i < amounts.length; i++) {",
							"    var obj = Object.assign({}, transactionGraph008)",
							"         var myUUID = uuid.v4();",
							"         obj.Amt = amounts[i];",
							"          obj._key = myUUID;",
							"          duplicatedPacs008.push(obj)",
							"          pacs008MsgIds.push(myUUID)",
							"}",
							"pm.collectionVariables.set(\"msgIds\", pacs008MsgIds);",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph002)}",
							"                    INSERT transaction INTO transactionRelationship",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR transaction IN ${JSON.stringify(duplicatedPacs008)}",
							"                    INSERT transaction INTO transactionRelationship",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/Configuration/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}",
							"                    INSERT {_key: \"054\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"const req = JSON.parse(request.data);",
							"const arangourl = pm.environment.get('arangoUrl');",
							"const msgIds = pm.collectionVariables.get(\"msgIds\");",
							"",
							"const graphTransactions = [",
							"    \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\", ",
							"    \"876543234tgbvfghjkgyuyt5678uyttyuikm552af93cd7ae360938321823456789\", ",
							"    \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e9012343\",",
							"    \"d923682a97077a841616188ad1e58355b8eeee108007f7accd\", ",
							"    \"d923682a97089a841898951878e99355b8eeee108008123456\", ]",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have rule result of false for Scenario 3: Successful transactions - Chi-Squared < 15.5073 (54.01 = FALSE)\", function () {",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(false);",
							"     pm.expect(jsonData.ruleResult.reason).to.be.eql('Benfords Law: Debtor transaction history indicates a low probability of fictitious amounts');",
							"});",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(msgIds)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transaction\": {\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"{{now}}\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2z\",\n                \"OrgnlEndToEndId\": \"{{e2eUUid}}\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2054-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"networkMap\": {\n        \"messages\": [\n            {\n                \"id\": \"004_054@1.0.0\",\n                \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\n                \"cfg\": \"1.0.0\",\n                \"txTp\": \"pacs.002.001.12\",\n                \"channels\": [\n                    {\n                        \"id\": \"001@1.0.0\",\n                        \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\n                        \"cfg\": \"1.0.0\",\n                        \"typologies\": [\n                            {\n                                \"id\": \"999_054@1.0.0\",\n                                \"host\": \"{{ofUrl}}function/off-typology-processor-rel-1-0-0\",\n                                \"cfg\": \"1.0.0\",\n                                \"rules\": [\n                                    {\n                                        \"id\": \"054@1.0.0\",\n                                        \"host\": \"{{ofUrl}}function/off-rule-054{{version}}\",\n                                        \"cfg\": \"1.0.0\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-054-rel-1-0-0/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-054-rel-1-0-0",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Scenario 4",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//AM-944 Scenario 4: Successful transactions - Chi-Squared >= 15.5073 (54.02 = TRUE)",
							"",
							"pm.globals.set(\"now\", new Date().toISOString());",
							"var uuid = require('uuid');",
							"var e2eUUid = uuid.v4();",
							"pm.globals.set(\"e2eUUid\", e2eUUid);",
							"const now = new Date().getTime();",
							"const arangourl = pm.environment.get('arangoUrl');",
							"",
							"const ruleConfig = [",
							"{",
							"    \"id\": \"054@1.0.0\",",
							"    \"cfg\": \"1.0.0\",",
							"    \"config\": {",
							"        \"bands\": [",
							"            {",
							"                \"subRuleRef\": \".00\",",
							"                \"upperLimit\": 3,",
							"                \"outcome\": false,",
							"                \"reason\": \"Insufficient transaction history\"",
							"            },",
							"            {",
							"                \"subRuleRef\": \".01\",",
							"                \"upperLimit\": 15.5073,",
							"                \"outcome\": false,",
							"                \"reason\": \"Benfords Law: Debtor transaction history indicates a low probability of fictitious amounts\"",
							"            },",
							"            {",
							"                \"subRuleRef\": \".02\",",
							"                \"lowerLimit\": 15.5073,",
							"                \"outcome\": true,",
							"                \"reason\": \"Benfords Law: Debtor transaction history indicates a high probability of fictitious amounts\"",
							"            }",
							"        ]",
							"    }",
							"}",
							"]",
							"",
							"const transactionGraph002 = [",
							"    {",
							"    _key: \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 87010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"},",
							" {",
							"    _key: \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e9012343\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 86010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"},",
							"{",
							"    _key: \"876543234tgbvfghjkgyuyt5678uyttyuikm552af93cd7ae360938321823456789\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 86010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"}",
							"]",
							"",
							"const transactionGraph008 =",
							"{",
							"      _key: 'd923682a97089a841898951878e99355b8eeee108008',",
							"      _id: 'transactionRelationship/d923682a97089a841898951878e99355b8eeee108008',",
							"      _from: `accounts/${e2eUUid}`,",
							"      _to: 'accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb',",
							"      _rev: '_d1dQxHe--_',",
							"      Amt: 10000,",
							"      TxTp: 'pacs.008.001.10',",
							"      CreDtTm: new Date(new Date(now - 87000000).getTime()).toISOString(),",
							"      PmtInfId: '34567865456789098tfcvbnhjgf6bz',",
							"      EndToEndId: `${e2eUUid}`",
							"}",
							"",
							"const duplicatedPacs008 = []",
							"",
							"const amounts = [293071, 270720, 226223, 209803, 262354, 212994, 215659, 288878, 311092, 363688, 366269, 377514, 313070, 387144, 402416, 484032, 407404, 417965, 448478, 549937, 506975, 505816, 588400, 521932, 549158, 532581, 577667, 518805, 634582, 655930, 684708, 753479, 724349, 717349, 793401, 802183, 880092, 833052, 964245, 900713, 967161]",
							"",
							"var pacs008MsgIds = []",
							"for (var i = 0; i < amounts.length; i++) {",
							"    var obj = Object.assign({}, transactionGraph008)",
							"         var myUUID = uuid.v4();",
							"         obj.Amt = amounts[i];",
							"          obj._key = myUUID;",
							"          duplicatedPacs008.push(obj)",
							"          pacs008MsgIds.push(myUUID)",
							"}",
							"pm.collectionVariables.set(\"msgIds\", pacs008MsgIds);",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph002)}",
							"                    INSERT transaction INTO transactionRelationship",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR transaction IN ${JSON.stringify(duplicatedPacs008)}",
							"                    INSERT transaction INTO transactionRelationship",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/Configuration/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}",
							"                    INSERT {_key: \"054\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"const req = JSON.parse(request.data);",
							"const arangourl = pm.environment.get('arangoUrl');",
							"const msgIds = pm.collectionVariables.get(\"msgIds\");",
							"",
							"const graphTransactions = [",
							"    \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\", ",
							"    \"876543234tgbvfghjkgyuyt5678uyttyuikm552af93cd7ae360938321823456789\", ",
							"    \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e9012343\",",
							"    \"d923682a97077a841616188ad1e58355b8eeee108007f7accd\", ",
							"    \"d923682a97089a841898951878e99355b8eeee108008123456\" ]",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have rule result of true for Scenario 4: Successful transactions - Chi-Squared >= 15.5073 (54.02 = TRUE)\", function () {",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(true);",
							"     pm.expect(jsonData.ruleResult.reason).to.be.eql('Benfords Law: Debtor transaction history indicates a high probability of fictitious amounts');",
							"});",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(msgIds)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transaction\": {\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"{{now}}\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2z\",\n                \"OrgnlEndToEndId\": \"{{e2eUUid}}\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2054-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"networkMap\": {\n        \"messages\": [\n            {\n                \"id\": \"004_054@1.0.0\",\n                \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\n                \"cfg\": \"1.0.0\",\n                \"txTp\": \"pacs.002.001.12\",\n                \"channels\": [\n                    {\n                        \"id\": \"001@1.0.0\",\n                        \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\n                        \"cfg\": \"1.0.0\",\n                        \"typologies\": [\n                            {\n                                \"id\": \"999_054@1.0.0\",\n                                \"host\": \"{{ofUrl}}function/off-typology-processor-rel-1-0-0\",\n                                \"cfg\": \"1.0.0\",\n                                \"rules\": [\n                                    {\n                                        \"id\": \"054@1.0.0\",\n                                        \"host\": \"{{ofUrl}}function/off-rule-054{{version}}\",\n                                        \"cfg\": \"1.0.0\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-054-rel-1-0-0/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-054-rel-1-0-0",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Scenario 5",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//AM-945 Scenario 5: Successful and unsuccessful transactions - Chi-Squared >= 15.5073 (54.02 = TRUE)",
							"",
							"pm.globals.set(\"now\", new Date().toISOString());",
							"var uuid = require('uuid');",
							"var e2eUUid = uuid.v4();",
							"pm.globals.set(\"e2eUUid\", e2eUUid);",
							"const now = new Date().getTime();",
							"const arangourl = pm.environment.get('arangoUrl');",
							"const unsuccessfulE2eId = \"1234567898765rfvbnjhgfrt67u865678ijh\";",
							"const ruleConfig = [",
							"{",
							"    \"id\": \"054@1.0.0\",",
							"    \"cfg\": \"1.0.0\",",
							"    \"config\": {",
							"        \"bands\": [",
							"            {",
							"                \"subRuleRef\": \".00\",",
							"                \"upperLimit\": 3,",
							"                \"outcome\": false,",
							"                \"reason\": \"Insufficient transaction history\"",
							"            },",
							"            {",
							"                \"subRuleRef\": \".01\",",
							"                \"upperLimit\": 15.5073,",
							"                \"outcome\": false,",
							"                \"reason\": \"Benfords Law: Debtor transaction history indicates a low probability of fictitious amounts\"",
							"            },",
							"            {",
							"                \"subRuleRef\": \".02\",",
							"                \"lowerLimit\": 15.5073,",
							"                \"outcome\": true,",
							"                \"reason\": \"Benfords Law: Debtor transaction history indicates a high probability of fictitious amounts\"",
							"            }",
							"        ]",
							"    }",
							"}",
							"]",
							"",
							"const transactionGraph002 = [",
							"    {",
							"    _key: \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 87010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"},",
							" {",
							"    _key: \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e9012343\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 86010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"},",
							"{",
							"    _key: \"876543234tgbvfghjkgyuyt5678uyttyuikm552af93cd7ae360938321823456789\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 86010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"},",
							"{",
							"    _key: \"12345678987654345678uygfdxsdertyuytr4567898uygfder4e345678iujhg\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACSC\",",
							"    CreDtTm: new Date(new Date(now - 86010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${unsuccessfulE2eId}`",
							"}",
							"]",
							"",
							"const transactionGraph008 =",
							"{",
							"      _key: 'd923682a97089a841898951878e99355b8eeee108008',",
							"      _id: 'transactionRelationship/d923682a97089a841898951878e99355b8eeee108008',",
							"      _from: `accounts/${e2eUUid}`,",
							"      _to: 'accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb',",
							"      _rev: '_d1dQxHe--_',",
							"      Amt: 10000,",
							"      TxTp: 'pacs.008.001.10',",
							"      CreDtTm: new Date(new Date(now - 87000000).getTime()).toISOString(),",
							"      PmtInfId: '34567865456789098tfcvbnhjgf6bz',",
							"      EndToEndId: `${e2eUUid}`",
							"}",
							"",
							"const duplicatedPacs008 = []",
							"",
							"const amounts = [110948, 199751, 138460, 174054, 171811, 194587, 131651, 139929, 160684, 117593, 117782, 293071, 270720, 226223, 209803, 262354, 212994, 215659, 288878, 311092, 363688, 366269, 377514, 313070, 387144, 402416, 484032, 407404, 417965, 448478, 549937, 506975, 505816, 588400, 521932, 549158, 532581, 577667, 518805, 634582, 655930, 684708, 753479, 724349, 717349, 793401, 802183, 880092, 833052, 964245, 900713, 967161]",
							"",
							"var pacs008MsgIds = []",
							"for (var i = 0; i < amounts.length; i++) {",
							"    var obj = Object.assign({}, transactionGraph008)",
							"    var myUUID = uuid.v4();",
							"    if(i <= 10) {",
							"          obj.EndToEndId = `${unsuccessfulE2eId}`;",
							"    }     ",
							"          obj._key = myUUID;",
							"          obj.Amt = amounts[i];",
							"          duplicatedPacs008.push(obj)",
							"          pacs008MsgIds.push(myUUID)",
							"}",
							"pm.collectionVariables.set(\"msgIds\", pacs008MsgIds);",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph002)}",
							"                    INSERT transaction INTO transactionRelationship",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR transaction IN ${JSON.stringify(duplicatedPacs008)}",
							"                    INSERT transaction INTO transactionRelationship",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/Configuration/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}",
							"                    INSERT {_key: \"054\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"const req = JSON.parse(request.data);",
							"const arangourl = pm.environment.get('arangoUrl');",
							"const msgIds = pm.collectionVariables.get(\"msgIds\");",
							"",
							"const graphTransactions = [",
							"    \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\", ",
							"    \"876543234tgbvfghjkgyuyt5678uyttyuikm552af93cd7ae360938321823456789\", ",
							"    \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e9012343\",",
							"    \"d923682a97077a841616188ad1e58355b8eeee108007f7accd\", ",
							"    \"d923682a97089a841898951878e99355b8eeee108008123456\", ",
							"    \"12345678987654345678uygfdxsdertyuytr4567898uygfder4e345678iujhg\"]",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have rule result of true for Scenario 5: Successful and unsuccessful transactions - Chi-Squared >= 15.5073 (54.02 = TRUE)\", function () {",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(true);",
							"     pm.expect(jsonData.ruleResult.reason).to.be.eql('Benfords Law: Debtor transaction history indicates a high probability of fictitious amounts');",
							"});",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(msgIds)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transaction\": {\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"{{now}}\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2z\",\n                \"OrgnlEndToEndId\": \"{{e2eUUid}}\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2054-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"networkMap\": {\n        \"messages\": [\n            {\n                \"id\": \"004_054@1.0.0\",\n                \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\n                \"cfg\": \"1.0.0\",\n                \"txTp\": \"pacs.002.001.12\",\n                \"channels\": [\n                    {\n                        \"id\": \"001@1.0.0\",\n                        \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\n                        \"cfg\": \"1.0.0\",\n                        \"typologies\": [\n                            {\n                                \"id\": \"999_054@1.0.0\",\n                                \"host\": \"{{ofUrl}}function/off-typology-processor-rel-1-0-0\",\n                                \"cfg\": \"1.0.0\",\n                                \"rules\": [\n                                    {\n                                        \"id\": \"054@1.0.0\",\n                                        \"host\": \"{{ofUrl}}function/off-rule-054{{version}}\",\n                                        \"cfg\": \"1.0.0\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-054-rel-1-0-0/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-054-rel-1-0-0",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Scenario 6",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//AM-946 Scenario 6: Updated config file (transaction history) (54.01 = FALSE)",
							"",
							"pm.globals.set(\"now\", new Date().toISOString());",
							"var uuid = require('uuid');",
							"var e2eUUid = uuid.v4();",
							"pm.globals.set(\"e2eUUid\", e2eUUid);",
							"const now = new Date().getTime();",
							"const arangourl = pm.environment.get('arangoUrl');",
							"",
							"const ruleConfig = [",
							"{",
							"    \"id\": \"054@1.0.0\",",
							"    \"cfg\": \"1.0.1\",",
							"    \"config\": {",
							"        \"bands\": [",
							"            {",
							"                \"subRuleRef\": \".00\",",
							"                \"upperLimit\": 2,",
							"                \"outcome\": false,",
							"                \"reason\": \"Insufficient transaction history\"",
							"            },",
							"            {",
							"                \"subRuleRef\": \".01\",",
							"                \"upperLimit\": 15.5073,",
							"                \"outcome\": false,",
							"                \"reason\": \"Benfords Law: Debtor transaction history indicates a low probability of fictitious amounts\"",
							"            },",
							"            {",
							"                \"subRuleRef\": \".02\",",
							"                \"lowerLimit\": 15.5073,",
							"                \"outcome\": true,",
							"                \"reason\": \"Benfords Law: Debtor transaction history indicates a high probability of fictitious amounts\"",
							"            }",
							"        ]",
							"    }",
							"}",
							"]",
							"",
							"const transactionGraph002 = [",
							"    {",
							"    _key: \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 87010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"},",
							" {",
							"    _key: \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e9012343\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 86010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"},",
							"{",
							"    _key: \"876543234tgbvfghjkgyuyt5678uyttyuikm552af93cd7ae360938321823456789\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 86010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"}",
							"]",
							"",
							"const transactionGraph008 =",
							"{",
							"      _key: 'd923682a97089a841898951878e99355b8eeee108008',",
							"      _id: 'transactionRelationship/d923682a97089a841898951878e99355b8eeee108008',",
							"      _from: `accounts/${e2eUUid}`,",
							"      _to: 'accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb',",
							"      _rev: '_d1dQxHe--_',",
							"      Amt: 10000,",
							"      TxTp: 'pacs.008.001.10',",
							"      CreDtTm: new Date(new Date(now - 87000000).getTime()).toISOString(),",
							"      PmtInfId: '34567865456789098tfcvbnhjgf6bz',",
							"      EndToEndId: `${e2eUUid}`",
							"}",
							"",
							"const duplicatedPacs008 = []",
							"",
							"const amounts = [110948, 199751, 138460, 174054, 171811, 194587, 131651, 139929, 160684, 117593, 117782, 293071, 270720, 226223, 209803, 262354, 212994, 215659, 288878, 311092, 363688, 366269, 377514, 313070, 387144, 402416, 484032, 407404, 417965, 448478, 549937, 506975, 505816, 588400, 521932, 549158, 532581, 577667, 518805, 634582, 655930, 684708, 753479, 724349, 717349, 793401, 802183, 880092, 833052, 964245, 900713, 967161]",
							"",
							"var pacs008MsgIds = []",
							"for (var i = 0; i < amounts.length; i++) {",
							"    var obj = Object.assign({}, transactionGraph008)",
							"         var myUUID = uuid.v4();",
							"         obj.Amt = amounts[i];",
							"          obj._key = myUUID;",
							"          duplicatedPacs008.push(obj)",
							"          pacs008MsgIds.push(myUUID)",
							"}",
							"pm.collectionVariables.set(\"msgIds\", pacs008MsgIds);",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph002)}",
							"                    INSERT transaction INTO transactionRelationship",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR transaction IN ${JSON.stringify(duplicatedPacs008)}",
							"                    INSERT transaction INTO transactionRelationship",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/Configuration/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}",
							"                    INSERT {_key: \"054\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"const req = JSON.parse(request.data);",
							"const arangourl = pm.environment.get('arangoUrl');",
							"const msgIds = pm.collectionVariables.get(\"msgIds\");",
							"",
							"const graphTransactions = [",
							"    \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\", ",
							"    \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e9012343\",",
							"    \"876543234tgbvfghjkgyuyt5678uyttyuikm552af93cd7ae360938321823456789\", ",
							"    \"d923682a97089a841898951878e99355b8eeee108008\"]",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have rule result of false for SScenario 6: Updated config file (transaction history) (54.01 = FALSE)\", function () {",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(false);",
							"     pm.expect(jsonData.ruleResult.reason).to.be.eql('Benfords Law: Debtor transaction history indicates a low probability of fictitious amounts');",
							"});",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(msgIds)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transaction\": {\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"{{now}}\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n                \"OrgnlEndToEndId\": \"{{e2eUUid}}\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2054-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"networkMap\": {\n        \"messages\": [\n            {\n                \"id\": \"004_054@1.0.0\",\n                \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\n                \"cfg\": \"1.0.0\",\n                \"txTp\": \"pacs.002.001.12\",\n                \"channels\": [\n                    {\n                        \"id\": \"001@1.0.0\",\n                        \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\n                        \"cfg\": \"1.0.0\",\n                        \"typologies\": [\n                            {\n                                \"id\": \"999_054@1.0.0\",\n                                \"host\": \"{{ofUrl}}function/off-typology-processor-rel-1-0-0\",\n                                \"cfg\": \"1.0.0\",\n                                \"rules\": [\n                                    {\n                                        \"id\": \"054@1.0.0\",\n                                        \"host\": \"{{ofUrl}}function/off-rule-054{{version}}\",\n                                        \"cfg\": \"1.0.1\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-054-rel-1-0-0/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-054-rel-1-0-0",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Scenario 7",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//AM-947 Scenario 7: Updated config: band limits (Chi-Squared threshold) (54.01 = FALSE)",
							"",
							"pm.globals.set(\"now\", new Date().toISOString());",
							"var uuid = require('uuid');",
							"var e2eUUid = uuid.v4();",
							"pm.globals.set(\"e2eUUid\", e2eUUid);",
							"const now = new Date().getTime();",
							"const arangourl = pm.environment.get('arangoUrl');",
							"",
							"const ruleConfig = [",
							"{",
							"    \"id\": \"054@1.0.0\",",
							"    \"cfg\": \"1.0.2\",",
							"    \"config\": {",
							"        \"bands\": [",
							"            {",
							"                \"subRuleRef\": \".00\",",
							"                \"upperLimit\": 3,",
							"                \"outcome\": false,",
							"                \"reason\": \"Insufficient transaction history\"",
							"            },",
							"            {",
							"                \"subRuleRef\": \".01\",",
							"                \"upperLimit\": 7.3441,",
							"                \"outcome\": false,",
							"                \"reason\": \"Benfords Law: Debtor transaction history indicates a low probability of fictitious amounts\"",
							"            },",
							"            {",
							"                \"subRuleRef\": \".02\",",
							"                \"lowerLimit\": 7.3441,",
							"                \"outcome\": true,",
							"                \"reason\": \"Benfords Law: Debtor transaction history indicates a high probability of fictitious amounts\"",
							"            }",
							"        ]",
							"    }",
							"}",
							"]",
							"",
							"const transactionGraph002 = [",
							"    {",
							"    _key: \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 87010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"},",
							" {",
							"    _key: \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e9012343\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 86010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"},",
							"{",
							"    _key: \"876543234tgbvfghjkgyuyt5678uyttyuikm552af93cd7ae360938321823456789\",",
							"    _id: 'transactionRelationship/d923682a97077a841616188ad1e58355b8eeee108007f7accdb',",
							"    _from: `accounts/${e2eUUid}`,",
							"    _to: \"accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb\",",
							"    TxTp: \"pacs.002.001.12\",",
							"    TxSts: \"ACCC\",",
							"    CreDtTm: new Date(new Date(now - 86010000).getTime()).toISOString(),",
							"    PmtInfId: \"34567865456789098tfcvbnhjgf6bz\",",
							"    EndToEndId: `${e2eUUid}`",
							"}",
							"]",
							"",
							"const transactionGraph008 =",
							"{",
							"      _key: 'd923682a97089a841898951878e99355b8eeee108008',",
							"      _id: 'transactionRelationship/d923682a97089a841898951878e99355b8eeee108008',",
							"      _from: `accounts/${e2eUUid}`,",
							"      _to: 'accounts/23456789876545678987656789876567890987656789876567898765rfghjhbvcrtb',",
							"      _rev: '_d1dQxHe--_',",
							"      Amt: 10000,",
							"      TxTp: 'pacs.008.001.10',",
							"      CreDtTm: new Date(new Date(now - 87000000).getTime()).toISOString(),",
							"      PmtInfId: '34567865456789098tfcvbnhjgf6bz',",
							"      EndToEndId: `${e2eUUid}`",
							"}",
							"",
							"const duplicatedPacs008 = []",
							"",
							"const amounts = [110948, 199751, 138460, 174054, 171811, 194587, 131651, 139929, 160684, 117593, 117782, 293071, 270720, 226223, 209803, 262354, 212994, 215659, 288878, 311092, 363688, 366269, 377514, 313070, 387144, 402416, 484032, 407404, 417965, 448478, 549937, 506975, 505816, 588400, 521932, 549158, 532581, 577667, 518805, 634582, 655930, 684708, 753479, 724349, 717349, 793401, 802183, 880092, 833052, 964245, 900713, 967161]",
							"",
							"var pacs008MsgIds = []",
							"for (var i = 0; i < amounts.length; i++) {",
							"    var obj = Object.assign({}, transactionGraph008)",
							"         var myUUID = uuid.v4();",
							"         obj.Amt = amounts[i];",
							"          obj._key = myUUID;",
							"          duplicatedPacs008.push(obj)",
							"          pacs008MsgIds.push(myUUID)",
							"}",
							"pm.collectionVariables.set(\"msgIds\", pacs008MsgIds);",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR transaction IN ${JSON.stringify(transactionGraph002)}",
							"                    INSERT transaction INTO transactionRelationship",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR transaction IN ${JSON.stringify(duplicatedPacs008)}",
							"                    INSERT transaction INTO transactionRelationship",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});",
							"",
							"pm.sendRequest({",
							"    url: `${arangourl}_db/Configuration/_api/cursor`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR config IN ${JSON.stringify(ruleConfig)}",
							"                    INSERT {_key: \"054\", id: config.id, cfg: config.cfg, config: config.config} INTO configuration",
							"                    OPTIONS { overwrite: true }`",
							"        })",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"const req = JSON.parse(request.data);",
							"const arangourl = pm.environment.get('arangoUrl');",
							"const msgIds = pm.collectionVariables.get(\"msgIds\");",
							"",
							"const graphTransactions = [",
							"    \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e90\", ",
							"    \"af36cfd29dd05eb483358899055a552af93cd7ae36093832189e63dab1954e9012343\",",
							"    \"876543234tgbvfghjkgyuyt5678uyttyuikm552af93cd7ae360938321823456789\", ",
							"    \"d923682a97089a841898951878e99355b8eeee108008\" ]",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have rule result of true for Scenario 7: Updated config: band limits (Chi-Squared threshold) (54.01 = FALSE)\", function () {",
							"    pm.expect(jsonData.ruleResult.result).to.be.eql(true);",
							"     pm.expect(jsonData.ruleResult.reason).to.be.eql('Benfords Law: Debtor transaction history indicates a high probability of fictitious amounts');",
							"});",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(graphTransactions)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});",
							"",
							"pm.test(\"Remove Seed Data from transactionGraph\", function () {",
							"    pm.sendRequest({",
							"        url: `${arangourl}_db/pseudonyms/_api/cursor`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR transaction IN ${JSON.stringify(msgIds)}",
							"                        REMOVE { _key: transaction } IN transactionRelationship",
							"                        OPTIONS { ignoreErrors: true }`",
							"            })",
							"        }",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transaction\": {\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"{{now}}\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2z\",\n                \"OrgnlEndToEndId\": \"{{e2eUUid}}\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2054-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"networkMap\": {\n        \"messages\": [\n            {\n                \"id\": \"004_054@1.0.0\",\n                \"host\": \"{{ofUrl}}function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\n                \"cfg\": \"1.0.0\",\n                \"txTp\": \"pacs.002.001.12\",\n                \"channels\": [\n                    {\n                        \"id\": \"001@1.0.0\",\n                        \"host\": \"{{ofUrl}}function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\n                        \"cfg\": \"1.0.0\",\n                        \"typologies\": [\n                            {\n                                \"id\": \"999_054@1.0.0\",\n                                \"host\": \"{{ofUrl}}function/off-typology-processor-rel-1-0-0\",\n                                \"cfg\": \"1.0.0\",\n                                \"rules\": [\n                                    {\n                                        \"id\": \"054@1.0.0\",\n                                        \"host\": \"{{ofUrl}}function/off-rule-054{{version}}\",\n                                        \"cfg\": \"1.0.2\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-rule-054-rel-1-0-0/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-rule-054-rel-1-0-0",
						"execute"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "transactionID",
			"value": ""
		},
		{
			"key": "EndToEndId",
			"value": ""
		},
		{
			"key": "msgIds",
			"value": ""
		}
	]
}