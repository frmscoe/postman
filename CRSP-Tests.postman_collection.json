{
	"info": {
		"_postman_id": "d176cd9f-1077-46fc-b23b-f6477c5a627c",
		"name": "CRSP-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1323032"
	},
	"item": [
		{
			"name": "e2e pain 001",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var uuid = require('uuid');\r",
									"var myUUID = uuid.v4();\r",
									"var arangoUrl = pm.environment.get(\"arangoUrl\");\r",
									"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
									"\r",
									"const msgId = pm.collectionVariables.get(\"transactionID\");\r",
									"let e2eID = JSON.stringify(msgId);\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"pm.collectionVariables.set(\"EndToEndId\", e2eID);\r",
									"\r",
									"const networkMaps = [\r",
									"    {\r",
									"        \"key\": \"100\",\r",
									"        \"active\": true,\r",
									"        \"cfg\": \"1.0.0\",\r",
									"        \"messages\": [\r",
									"            {\r",
									"                \"id\": \"001@1.0\",\r",
									"                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\r",
									"                \"cfg\": \"1.0\",\r",
									"                \"txTp\": \"pain.001.001.11\",\r",
									"                \"channels\": [\r",
									"                    {\r",
									"                        \"id\": \"001@1.0\",\r",
									"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r",
									"                        \"cfg\": \"1.0\",\r",
									"                        \"typologies\": [\r",
									"                            {\r",
									"                                \"id\": \"028@1.0.0\",\r",
									"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\r",
									"                                \"cfg\": \"1.0.0\",\r",
									"                                \"rules\": [\r",
									"                                    {\r",
									"                                        \"id\": \"028@1.0.0\",\r",
									"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-028-rel-1-1-0\",\r",
									"                                        \"cfg\": \"1.0.0\"\r",
									"                                    }\r",
									"                                ]\r",
									"                            }\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        ]\r",
									"    }\r",
									"]\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR doc IN networkConfiguration\r",
									"                    FILTER doc.active == true\r",
									"                    UPDATE doc WITH { active: false } IN networkConfiguration`\r",
									"        })\r",
									"    }\r",
									"}, () => {\r",
									"    pm.sendRequest({\r",
									"        url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,\r",
									"        method: 'POST',\r",
									"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"        body: {\r",
									"            mode: 'raw',\r",
									"            raw: JSON.stringify({\r",
									"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}\r",
									"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration\r",
									"                    OPTIONS { overwrite: true }`\r",
									"            })\r",
									"        }\r",
									"    });\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TxTp\": \"pain.001.001.11\",\r\n    \"CstmrCdtTrfInitn\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{transactionID}}\",\r\n            \"CreDtTm\": \"2021-11-12T10:18:43.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Colin Cameron\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1951-04-28\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": { \r\n                            \"Id\": \"+27718877119\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-718877119\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"6fba567b-bc2b-4d66-80a8-2434dbd2\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"Dt\": \"2021-11-12\",\r\n                \"DtTm\": \"2021-11-12T10:18:43.000Z\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Colin Cameron\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1951-04-28\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27718877119\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-718877119\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27718877119\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Colin Cameron\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"baf005dc-c223-4be1-8e5a-ed72ba472b80\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER BLANK\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\":123123,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\":123123,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"David Owen Klein\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1962-01-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27781569879\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-781569879\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27781569879\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"David Klein\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 53317231546556900.46 from Colin to David\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"Dbtr\": {\r\n                                \"FrstNm\": \"Colin\",\r\n                                \"MddlNm\": \"\",\r\n                                \"LastNm\": \"Cameron\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"Cdtr\": {\r\n                                \"FrstNm\": \"David\",\r\n                                \"MddlNm\": \"Owen\",\r\n                                \"LastNm\": \"Klein\",\r\n                                \"MrchntClssfctnCd\": \"BLANK\"\r\n                            },\r\n                            \"DbtrFinSvcsPrvdrFees\": {\r\n                                \"Ccy\": \"USD\",\r\n                                \"Amt\": 123123\r\n                            },\r\n                            \"Xprtn\": \"2021-11-12T10:23:43.000Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"InitrTp\": \"CONSUMER\",\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.0187\",\r\n                            \"Long\": \"37.4368\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ofUrl}}function/off-transaction-monitoring-service{{version}}/execute",
							"host": [
								"{{ofUrl}}function"
							],
							"path": [
								"off-transaction-monitoring-service{{version}}",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(() => {\r",
									"    var Header = require('postman-collection').Header;\r",
									"    pm.request.headers.append(Header.create(`Bearer ${pm.globals.get(\"arangoToken\")}`, 'Authorization'));\r",
									"}, 5000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.eql([]);\r",
									"    // CRSP should only process PACS.002 messages\r",
									"    //pm.expect(jsonData.result).to.not.eql([]);\r",
									"    //pm.expect(jsonData.result[0].networkMap.cfg).to.eql('1.0.0');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"for transaction In transactions FILTER transaction.transaction.CstmrCdtTrfInitn.GrpHdr.MsgId == {{EndToEndId}} return transaction \"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{arangoUrl}}_db/transactionHistory/_api/cursor",
							"host": [
								"{{arangoUrl}}_db"
							],
							"path": [
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "e2e pain 013",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var uuid = require('uuid');\r",
									"var myUUID = uuid.v4();\r",
									"var arangoUrl = pm.environment.get(\"arangoUrl\");\r",
									"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
									"\r",
									"const msgId = pm.collectionVariables.get(\"transactionID\");\r",
									"\r",
									"let e2eID = JSON.stringify(msgId);\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"pm.collectionVariables.set(\"EndToEndId\", e2eID);\r",
									"\r",
									"const networkMaps = [\r",
									"    {\r",
									"        \"key\": \"55\",\r",
									"        \"active\": true,\r",
									"        \"cfg\": \"2.1.1\",\r",
									"        \"messages\": [\r",
									"            {\r",
									"                \"id\": \"002@1.0\",\r",
									"                \"host\": \"http://gateway.openfaas:8080\",\r",
									"                \"cfg\": \"1.0\",\r",
									"                \"txTp\": \"pain.013.001.09\",\r",
									"                \"channels\": [\r",
									"                    {\r",
									"                        \"id\": \"001@1.0\",\r",
									"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r",
									"                        \"cfg\": \"1.0\",\r",
									"                        \"typologies\": [\r",
									"                            {\r",
									"                                \"id\": \"028@1.0.0\",\r",
									"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\r",
									"                                \"cfg\": \"1.0\",\r",
									"                                \"rules\": [\r",
									"                                    {\r",
									"                                        \"id\": \"028@1.0.0\",\r",
									"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-028\",\r",
									"                                        \"cfg\": \"1.0.0\"\r",
									"                                    }\r",
									"                                ]\r",
									"                            }\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        ]\r",
									"    }\r",
									"]\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR doc IN networkConfiguration\r",
									"                    FILTER doc.active == true\r",
									"                    UPDATE doc WITH { active: false } IN networkConfiguration`\r",
									"        })\r",
									"    }\r",
									"}, () => {\r",
									"    pm.sendRequest({\r",
									"        url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,\r",
									"        method: 'POST',\r",
									"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"        body: {\r",
									"            mode: 'raw',\r",
									"            raw: JSON.stringify({\r",
									"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}\r",
									"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration\r",
									"                    OPTIONS { overwrite: true }`\r",
									"            })\r",
									"        }\r",
									"    });\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TxTp\": \"pain.013.001.09\",\r\n    \"CdtrPmtActvtnReq\": {\r\n        \"GrpHdr\": {\r\n            \"MsgId\": \"{{transactionID}}\",\r\n            \"CreDtTm\": \"2021-10-21T14:02:54.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Horatio Sam Ford\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1981-04-11\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27721299138\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-721299138\"\r\n                }\r\n            }\r\n        },\r\n        \"PmtInf\": {\r\n            \"PmtInfId\": \"6fba567b-bc2b-4d66-80a8-2434dbd2\",\r\n            \"PmtMtd\": \"TRA\",\r\n            \"ReqdAdvcTp\": {\r\n                \"DbtAdvc\": {\r\n                    \"Cd\": \"ADWD\",\r\n                    \"Prtry\": \"Advice with transaction details\"\r\n                }\r\n            },\r\n            \"ReqdExctnDt\": {\r\n                \"DtTm\": \"2021-10-07T09:25:31.000Z\"\r\n            },\r\n            \"XpryDt\": {\r\n                \"DtTm\": \"2021-10-21\"\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"2021-10-21T14:02:54.000Z\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"2021-10-07\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"zz\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"ZZ\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"+27721299138\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-783078685\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27-721299138\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"+27721299138\"\r\n                        },\r\n                        \"Nm\": \"PASSPORT\"\r\n                    }\r\n                }\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"Horatio Ford\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtTrfTxInf\": {\r\n                \"PmtId\": {\r\n                    \"EndToEndId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\"\r\n                },\r\n                \"PmtTpInf\": {\r\n                    \"CtgyPurp\": {\r\n                        \"Prtry\": \"TRANSFER\"\r\n                    }\r\n                },\r\n                \"Amt\": {\r\n                    \"InstdAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 50431891779910900,\r\n                            \"Ccy\": \"USD\"\r\n                        }\r\n                    },\r\n                    \"EqvtAmt\": {\r\n                        \"Amt\": {\r\n                            \"Amt\": 50431891779910900,\r\n                            \"Ccy\": \"USD\"\r\n                        },\r\n                        \"CcyOfTrf\": \"USD\"\r\n                    }\r\n                },\r\n                \"ChrgBr\": \"DEBT\",\r\n                \"CdtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp002\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"April Sam Adamson\",\r\n                    \"Id\": {\r\n                        \"PrvtId\": {\r\n                            \"DtAndPlcOfBirth\": {\r\n                                \"BirthDt\": \"1923-04-26\",\r\n                                \"CityOfBirth\": \"Unknown\",\r\n                                \"CtryOfBirth\": \"ZZ\"\r\n                            },\r\n                            \"Othr\": {\r\n                                \"Id\": \"+27782722305\",\r\n                                \"SchmeNm\": {\r\n                                    \"Prtry\": \"MSISDN\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"CtctDtls\": {\r\n                        \"MobNb\": \"+27-782722305\"\r\n                    }\r\n                },\r\n                \"CdtrAcct\": {\r\n                    \"Id\": {\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27783078685\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"Nm\": \"April Adamson\"\r\n                },\r\n                \"Purp\": {\r\n                    \"Cd\": \"MP2P\"\r\n                },\r\n                \"RgltryRptg\": {\r\n                    \"Dtls\": {\r\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                        \"Cd\": \"100\"\r\n                    }\r\n                },\r\n                \"RmtInf\": {\r\n                    \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\r\n                },\r\n                \"SplmtryData\": {\r\n                    \"Envlp\": {\r\n                        \"Doc\": {\r\n                            \"PyeeRcvAmt\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 4906747824834590.33,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrFee\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 49067478248345.9,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            },\r\n                            \"PyeeFinSvcsPrvdrComssn\": {\r\n                                \"Amt\": {\r\n                                    \"Amt\": 0,\r\n                                    \"Ccy\": \"USD\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"InitgPty\": {\r\n                        \"Glctn\": {\r\n                            \"Lat\": \"-3.1675\",\r\n                            \"Long\": \"39.059\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ofUrl}}function/off-transaction-monitoring-service{{version}}/quoteReply",
							"host": [
								"{{ofUrl}}function"
							],
							"path": [
								"off-transaction-monitoring-service{{version}}",
								"quoteReply"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(() => {\r",
									"    var Header = require('postman-collection').Header;\r",
									"    pm.request.headers.append(Header.create(`Bearer ${pm.globals.get(\"arangoToken\")}`, 'Authorization'));\r",
									"}, 5000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									" \r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.eql([]);\r",
									"    // CRSP should only process PACS.002 messages\r",
									"    //pm.expect(jsonData.result).to.not.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"for transaction In transactionHistory FILTER transaction.CdtrPmtActvtnReq.GrpHdr.MsgId ==  {{EndToEndId}} return transaction \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{arangoUrl}}_db/transactionHistory/_api/cursor",
							"host": [
								"{{arangoUrl}}_db"
							],
							"path": [
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "e2e pacs 008",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var uuid = require('uuid');\r",
									"var myUUID = uuid.v4();\r",
									"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
									"\r",
									"const msgId = pm.collectionVariables.get(\"transactionID\");\r",
									"\r",
									"let e2eID = JSON.stringify(msgId);\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"pm.collectionVariables.set(\"EndToEndId\", e2eID);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TxTp\": \"pacs.008.001.10\",\r\n    \"FIToFICstmrCdt\": {\r\n        \"GrpHdr\": {\r\n           \"MsgId\": \"{{transactionID}}\",\r\n            \"CreDtTm\": \"2021-11-23T12:30:21.000Z\",\r\n            \"NbOfTxs\": 1,\r\n            \"SttlmInf\": {\r\n                \"SttlmMtd\": \"CLRG\"\r\n            }\r\n        },\r\n        \"CdtTrfTxInf\": {\r\n            \"PmtId\": {\r\n                \"InstrId\": \"557bf747-12f1-4983-9004-10a\",\r\n                \"EndToEndId\": \"eae96fc6-d2e2-465e-b371-d6\"\r\n            },\r\n            \"IntrBkSttlmAmt\": {\r\n                \"Amt\": {\r\n                    \"Amt\": 14315.99,\r\n                    \"Ccy\": \"USD\"\r\n                }\r\n            },\r\n            \"InstdAmt\": {\r\n                \"Amt\": {\r\n                    \"Amt\": 14315.99,\r\n                    \"Ccy\": \"USD\"\r\n                }\r\n            },\r\n            \"ChrgBr\": \"DEBT\",\r\n            \"ChrgsInf\": {\r\n                \"Amt\": {\r\n                    \"Amt\": 141.74,\r\n                    \"Ccy\": \"USD\"\r\n                },\r\n                \"Agt\": {\r\n                    \"FinInstnId\": {\r\n                        \"ClrSysMmbId\": {\r\n                            \"MmbId\": \"dfsp001\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            \"InitgPty\": {\r\n                \"Nm\": \"Evan Morgan O'Connell\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1965-01-27\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27887145476\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-887145476\"\r\n                }\r\n            },\r\n            \"Dbtr\": {\r\n                \"Nm\": \"Evan Morgan O'Connell\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1965-01-27\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27887145476\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-887145476\"\r\n                }\r\n            },\r\n            \"DbtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27887145476\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Evan O'Connell\"\r\n            },\r\n            \"DbtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp001\"\r\n                    }\r\n                }\r\n            },\r\n            \"CdtrAgt\": {\r\n                \"FinInstnId\": {\r\n                    \"ClrSysMmbId\": {\r\n                        \"MmbId\": \"dfsp002\"\r\n                    }\r\n                }\r\n            },\r\n            \"Cdtr\": {\r\n                \"Nm\": \"Colin Owen Bryce\",\r\n                \"Id\": {\r\n                    \"PrvtId\": {\r\n                        \"DtAndPlcOfBirth\": {\r\n                            \"BirthDt\": \"1995-01-03\",\r\n                            \"CityOfBirth\": \"Unknown\",\r\n                            \"CtryOfBirth\": \"ZZ\"\r\n                        },\r\n                        \"Othr\": {\r\n                            \"Id\": \"+27875136965\",\r\n                            \"SchmeNm\": {\r\n                                \"Prtry\": \"MSISDN\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"CtctDtls\": {\r\n                    \"MobNb\": \"+27-875136965\"\r\n                }\r\n            },\r\n            \"CdtrAcct\": {\r\n                \"Id\": {\r\n                    \"Othr\": {\r\n                        \"Id\": \"+27875136965\",\r\n                        \"SchmeNm\": {\r\n                            \"Prtry\": \"MSISDN\"\r\n                        }\r\n                    }\r\n                },\r\n                \"Nm\": \"Colin Bryce\"\r\n            },\r\n            \"Purp\": {\r\n                \"Cd\": \"MP2P\"\r\n            }\r\n        },\r\n        \"RgltryRptg\": {\r\n            \"Dtls\": {\r\n                \"Tp\": \"BALANCE OF PAYMENTS\",\r\n                \"Cd\": \"100\"\r\n            }\r\n        },\r\n        \"RmtInf\": {\r\n            \"Ustrd\": \"Payment of USD 14174.25 from Evan to Colin\"\r\n        },\r\n        \"SplmtryData\": {\r\n            \"Envlp\": {\r\n                \"Doc\": {\r\n                    \"Xprtn\": \"2021-11-23T12:35:17.000Z\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ofUrl}}function/off-transaction-monitoring-service{{version}}/transfer",
							"host": [
								"{{ofUrl}}function"
							],
							"path": [
								"off-transaction-monitoring-service{{version}}",
								"transfer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1 Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(() => {\r",
									"    var Header = require('postman-collection').Header;\r",
									"    pm.request.headers.append(Header.create(`Bearer ${pm.globals.get(\"arangoToken\")}`, 'Authorization'));\r",
									"}, 5000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"for transaction In transactionHistory FILTER transaction.FIToFICstmrCdt.GrpHdr.MsgId ==  {{EndToEndId}} return transaction\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{arangoUrl}}_db/transactionHistory/_api/cursor",
							"host": [
								"{{arangoUrl}}_db"
							],
							"path": [
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "e2e pacs 002",
			"item": [
				{
					"name": "transaction 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"var req = JSON.parse(request.data);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"should not have errors\", function () {",
									"    pm.expect(jsonData).not.to.have.property('errors')",
									"});",
									"",
									"pm.test(\"should be a valid transaction\", function () {",
									"    pm.expect(jsonData.message).to.eql(\"Transaction is valid\");",
									"});",
									"",
									"pm.test(\"should send to data preparation successfully\", function () {",
									"    pm.expect(jsonData.sent).to.eql(true);",
									"});",
									"",
									"pm.test(\"should have the same outgoing and incoming json\", function () {",
									"    pm.expect(jsonData.data).to.eql(req);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var uuid = require('uuid');\r",
									"var myUUID = uuid.v4();\r",
									"var arangoUrl = pm.environment.get(\"arangoUrl\");\r",
									"pm.collectionVariables.set(\"transactionID\", myUUID.slice(-32));\r",
									"\r",
									"const msgId = pm.collectionVariables.get(\"transactionID\");\r",
									"\r",
									"let e2eID = JSON.stringify(msgId);\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"e2eID = e2eID.replace(\"\\\"\", \"'\")\r",
									"pm.collectionVariables.set(\"EndToEndId\", e2eID);\r",
									"\r",
									"const networkMaps = [\r",
									"    {\r",
									"        \"key\": \"101\",\r",
									"        \"active\": true,\r",
									"        \"cfg\": \"2.0.0\",\r",
									"        \"messages\": [\r",
									"            {\r",
									"                \"id\": \"001@1.0.0\",\r",
									"                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",\r",
									"                \"cfg\": \"1.0.0\",\r",
									"                \"txTp\": \"pacs.002.001.12\",\r",
									"                \"channels\": [\r",
									"                    {\r",
									"                        \"id\": \"001@1.0.0\",\r",
									"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",\r",
									"                        \"cfg\": \"1.0.0\",\r",
									"                        \"typologies\": [\r",
									"                            {\r",
									"                                \"id\": \"028@1.0.0\",\r",
									"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",\r",
									"                                \"cfg\": \"1.0.0\",\r",
									"                                \"rules\": [\r",
									"                                    {\r",
									"                                        \"id\": \"003@1.1.0\",\r",
									"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-003-rel-1-1-0\"\r",
									"                                    },\r",
									"                                    {\r",
									"                                        \"id\": \"028@1.1.0\",\r",
									"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-028-rel-1-1-0\"\r",
									"                                    }\r",
									"                                ]\r",
									"                            }\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        ]\r",
									"    }\r",
									"]\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,\r",
									"    method: 'POST',\r",
									"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            query: `FOR doc IN networkConfiguration\r",
									"                    FILTER doc.active == true\r",
									"                    UPDATE doc WITH { active: false } IN networkConfiguration`\r",
									"        })\r",
									"    }\r",
									"}, () => {\r",
									"    pm.sendRequest({\r",
									"        url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,\r",
									"        method: 'POST',\r",
									"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },\r",
									"        body: {\r",
									"            mode: 'raw',\r",
									"            raw: JSON.stringify({\r",
									"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}\r",
									"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration\r",
									"                    OPTIONS { overwrite: true }`\r",
									"            })\r",
									"        }\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"TxTp\": \"pacs.002.001.12\",\n  \"FIToFIPmtSts\": {\n    \"GrpHdr\": {\n      \"MsgId\": \"{{transactionID}}\",\n      \"CreDtTm\": \"2021-11-03T07:24:48.000Z\"\n    },\n    \"TxInfAndSts\": {\n      \"OrgnlInstrId\": \"2f68ae16-467a-4ac4-ba32-eb5\",\n      \"OrgnlEndToEndId\": \"eae96fc6-d2e2-465e-b371-d6\",\n      \"TxSts\": \"ACSC\",\n      \"ChrgsInf\": [\n        {\n          \"Amt\": {\n            \"Amt\": 157605510200862,\n            \"Ccy\": \"USD\"\n          },\n          \"Agt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp001\"\n              }\n            }\n          }\n        },\n        {\n          \"Amt\": {\n            \"Amt\": 15918156530287100,\n            \"Ccy\": \"USD\"\n          },\n          \"Agt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp001\"\n              }\n            }\n          }\n        },\n        {\n          \"Amt\": {\n            \"Amt\": 15918156530287100,\n            \"Ccy\": \"USD\"\n          },\n          \"Agt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp002\"\n              }\n            }\n          }\n        }\n      ],\n      \"AccptncDtTm\": \"2021-11-03T07:24:47.000Z\",\n      \"InstgAgt\": {\n        \"FinInstnId\": {\n          \"ClrSysMmbId\": {\n            \"MmbId\": \"dfsp001\"\n          }\n        }\n      },\n      \"InstdAgt\": {\n        \"FinInstnId\": {\n          \"ClrSysMmbId\": {\n            \"MmbId\": \"dfsp002\"\n          }\n        }\n      }\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ofUrl}}function/off-transaction-monitoring-service{{version}}/transfer-response",
							"host": [
								"{{ofUrl}}function"
							],
							"path": [
								"off-transaction-monitoring-service{{version}}",
								"transfer-response"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arango db check transaction 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(() => {\r",
									"    var Header = require('postman-collection').Header;\r",
									"    pm.request.headers.append(Header.create(`Bearer ${pm.globals.get(\"arangoToken\")}`, 'Authorization'));\r",
									"    pm.globals.set(\"query\", JSON.stringify(\r",
									"        `\r",
									"      for transaction In transactions\r",
									"       FILTER transaction.transaction.FIToFIPmtSts.GrpHdr.MsgId == \r",
									"       `+ pm.collectionVariables.get(\"EndToEndId\") + `\r",
									"       return transaction`\r",
									"    ));\r",
									"}, 5000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"check that there is actual data received back \", function () {\r",
									"    pm.expect(jsonData.result).to.not.eql([]);\r",
									"    pm.expect(jsonData.result[0].networkMap.cfg).to.eql('2.0.0');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": {{query}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{arangoUrl}}_db/transactionHistory/_api/cursor",
							"host": [
								"{{arangoUrl}}_db"
							],
							"path": [
								"transactionHistory",
								"_api",
								"cursor"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AM-770 - Scenario 1(Pain 001)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"Message not defined for routing\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"028@1.0\", \"003@1.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(false);",
							"    }",
							"})",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var arangoUrl = pm.environment.get(\"arangoUrl\");",
							"const networkMaps = [",
							"    {",
							"        \"key\": \"100\",",
							"        \"active\": false,",
							"        \"cfg\": \"1.0.0\",",
							"        \"messages\": [",
							"            {",
							"                \"id\": \"001@1.0\",",
							"                \"host\": \"http://gateway.openfaas:8080\",",
							"                \"cfg\": \"1.0\",",
							"                \"txTp\": \"pain.001.001.11\",",
							"                \"channels\": [",
							"                    {",
							"                        \"id\": \"001@1.0\",",
							"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",",
							"                        \"cfg\": \"1.0\",",
							"                        \"typologies\": [",
							"                            {",
							"                                \"id\": \"028@1.0\",",
							"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",",
							"                                \"cfg\": \"1.0\",",
							"                                \"rules\": [",
							"                                    {",
							"                                        \"id\": \"003@1.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-003\",",
							"                                        \"cfg\": \"1.0\"",
							"                                    },",
							"                                    {",
							"                                        \"id\": \"028@1.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-028\",",
							"                                        \"cfg\": \"1.0\"",
							"                                    }",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        ]",
							"    },",
							"    {",
							"        \"key\": \"101\",",
							"        \"active\": true,",
							"        \"cfg\": \"2.0.0\",",
							"        \"messages\": [",
							"            {",
							"                \"id\": \"001@1.0.0\",",
							"                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",",
							"                \"cfg\": \"1.0.0\",",
							"                \"txTp\": \"pacs.002.001.12\",",
							"                \"channels\": [",
							"                    {",
							"                        \"id\": \"001@1.0.0\",",
							"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",",
							"                        \"cfg\": \"1.0.0\",",
							"                        \"typologies\": [",
							"                            {",
							"                                \"id\": \"028@1.0.0\",",
							"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",",
							"                                \"cfg\": \"1.0.0\",",
							"                                \"rules\": [",
							"                                    {",
							"                                        \"id\": \"027@1.0.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-027-rel-1-0-0\"",
							"                                    }",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        ]",
							"    }",
							"]",
							"",
							"pm.sendRequest({",
							"    url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"}, () => {",
							"    pm.sendRequest({",
							"        url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"            })",
							"        }",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"TxTp\": \"pain.001.001.11\",\n    \"CstmrCdtTrfInitn\": {\n        \"GrpHdr\": {\n            \"MsgId\": \"ed3e34ce4ebf413ba8ef96d84ec9351e\",\n            \"CreDtTm\": \"2021-12-03T15:36:11.000Z\",\n            \"NbOfTxs\": 1,\n            \"InitgPty\": {\n                \"Nm\": \"April Blake Grant\",\n                \"Id\": {\n                    \"PrvtId\": {\n                        \"DtAndPlcOfBirth\": {\n                            \"BirthDt\": \"1968-02-01\",\n                            \"CityOfBirth\": \"Unknown\",\n                            \"CtryOfBirth\": \"ZZ\"\n                        },\n                        \"Othr\": {\n                            \"Id\": \"+27730975224\",\n                            \"SchmeNm\": {\n                                \"Prtry\": \"MSISDN\"\n                            }\n                        }\n                    }\n                },\n                \"CtctDtls\": {\n                    \"MobNb\": \"+27-730975224\"\n                }\n            }\n        },\n        \"PmtInf\": {\n            \"PmtInfId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n            \"PmtMtd\": \"TRA\",\n            \"ReqdAdvcTp\": {\n                \"DbtAdvc\": {\n                    \"Cd\": \"ADWD\",\n                    \"Prtry\": \"Advice with transaction details\"\n                }\n            },\n            \"ReqdExctnDt\": {\n                \"Dt\": \"2021-12-03\",\n                \"DtTm\": \"2021-12-03T15:36:11.000Z\"\n            },\n            \"Dbtr\": {\n                \"Nm\": \"April Blake Grant\",\n                \"Id\": {\n                    \"PrvtId\": {\n                        \"DtAndPlcOfBirth\": {\n                            \"BirthDt\": \"1968-02-01\",\n                            \"CityOfBirth\": \"Unknown\",\n                            \"CtryOfBirth\": \"ZZ\"\n                        },\n                        \"Othr\": {\n                            \"Id\": \"+27730975224\",\n                            \"SchmeNm\": {\n                                \"Prtry\": \"MSISDN\"\n                            }\n                        }\n                    }\n                },\n                \"CtctDtls\": {\n                    \"MobNb\": \"+27-730975224\"\n                }\n            },\n            \"DbtrAcct\": {\n                \"Id\": {\n                    \"Othr\": {\n                        \"Id\": \"e2fa05b6a56ceedb37581703b98590b44194a8c0d2799f4319ebbece5e20ecc1\",\n                        \"SchmeNm\": {\n                            \"Prtry\": \"PSEUDO\"\n                        }\n                    }\n                },\n                \"Nm\": \"April Grant\"\n            },\n            \"DbtrAgt\": {\n                \"FinInstnId\": {\n                    \"ClrSysMmbId\": {\n                        \"MmbId\": \"dfsp001\"\n                    }\n                }\n            },\n            \"CdtTrfTxInf\": {\n                \"PmtId\": {\n                    \"EndToEndId\": \"2c516801007642dfb892944dde1cf845\"\n                },\n                \"PmtTpInf\": {\n                    \"CtgyPurp\": {\n                        \"Prtry\": \"TRANSFER BLANK\"\n                    }\n                },\n                \"Amt\": {\n                    \"InstdAmt\": {\n                        \"Amt\": {\n                            \"Amt\": 31020.89,\n                            \"Ccy\": \"USD\"\n                        }\n                    },\n                    \"EqvtAmt\": {\n                        \"Amt\": {\n                            \"Amt\": 31020.89,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"CcyOfTrf\": \"USD\"\n                    }\n                },\n                \"ChrgBr\": \"DEBT\",\n                \"CdtrAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                },\n                \"Cdtr\": {\n                    \"Nm\": \"Felicia Easton Quill\",\n                    \"Id\": {\n                        \"PrvtId\": {\n                            \"DtAndPlcOfBirth\": {\n                                \"BirthDt\": \"1935-05-08\",\n                                \"CityOfBirth\": \"Unknown\",\n                                \"CtryOfBirth\": \"ZZ\"\n                            },\n                            \"Othr\": {\n                                \"Id\": \"+27707650428\",\n                                \"SchmeNm\": {\n                                    \"Prtry\": \"MSISDN\"\n                                }\n                            }\n                        }\n                    },\n                    \"CtctDtls\": {\n                        \"MobNb\": \"+27-707650428\"\n                    }\n                },\n                \"CdtrAcct\": {\n                    \"Id\": {\n                        \"Othr\": {\n                            \"Id\": \"efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b4\",\n                            \"SchmeNm\": {\n                                \"Prtry\": \"PSEUDO\"\n                            }\n                        }\n                    },\n                    \"Nm\": \"Felicia Quill\"\n                },\n                \"Purp\": {\n                    \"Cd\": \"MP2P\"\n                },\n                \"RgltryRptg\": {\n                    \"Dtls\": {\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\n                        \"Cd\": \"100\"\n                    }\n                },\n                \"RmtInf\": {\n                    \"Ustrd\": \"Payment of USD 30713.75 from April to Felicia\"\n                },\n                \"SplmtryData\": {\n                    \"Envlp\": {\n                        \"Doc\": {\n                            \"Dbtr\": {\n                                \"FrstNm\": \"April\",\n                                \"MddlNm\": \"Blake\",\n                                \"LastNm\": \"Grant\",\n                                \"MrchntClssfctnCd\": \"BLANK\"\n                            },\n                            \"Cdtr\": {\n                                \"FrstNm\": \"Felicia\",\n                                \"MddlNm\": \"Easton\",\n                                \"LastNm\": \"Quill\",\n                                \"MrchntClssfctnCd\": \"BLANK\"\n                            },\n                            \"DbtrFinSvcsPrvdrFees\": {\n                                \"Ccy\": \"USD\",\n                                \"Amt\": 307.14\n                            },\n                            \"Xprtn\": \"2021-11-30T10:38:56.000Z\"\n                        }\n                    }\n                }\n            }\n        },\n        \"SplmtryData\": {\n            \"Envlp\": {\n                \"Doc\": {\n                    \"InitgPty\": {\n                        \"InitrTp\": \"CONSUMER\",\n                        \"Glctn\": {\n                            \"Lat\": \"-3.1609\",\n                            \"Long\": \"38.3588\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-channel-router-setup-processor/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "AM-770 - Scenario 1(Pacs 002)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"should send payload to the correct rule processors just once\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"027@1.0.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(true);",
							"    }",
							"})",
							"",
							"pm.test(\"should send the correct network sub-map\", function () {",
							"    const networkMap = pm.environment.get(\"networkMapPacs002\");",
							"    pm.expect(jsonData.networkMap).to.eql(JSON.parse(networkMap));",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var arangoUrl = pm.environment.get(\"arangoUrl\");",
							"const networkMaps = [",
							"    {",
							"        \"key\": \"100\",",
							"        \"active\": false,",
							"        \"cfg\": \"1.0.0\",",
							"        \"messages\": [",
							"            {",
							"                \"id\": \"001@1.0\",",
							"                \"host\": \"http://gateway.openfaas:8080\",",
							"                \"cfg\": \"1.0\",",
							"                \"txTp\": \"pain.001.001.11\",",
							"                \"channels\": [",
							"                    {",
							"                        \"id\": \"001@1.0\",",
							"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor\",",
							"                        \"cfg\": \"1.0\",",
							"                        \"typologies\": [",
							"                            {",
							"                                \"id\": \"028@1.0\",",
							"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor\",",
							"                                \"cfg\": \"1.0\",",
							"                                \"rules\": [",
							"                                    {",
							"                                        \"id\": \"003@1.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-003\",",
							"                                        \"cfg\": \"1.0\"",
							"                                    },",
							"                                    {",
							"                                        \"id\": \"028@1.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-028\",",
							"                                        \"cfg\": \"1.0\"",
							"                                    }",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        ]",
							"    },",
							"    {",
							"        \"key\": \"101\",",
							"        \"active\": true,",
							"        \"cfg\": \"2.0.0\",",
							"        \"messages\": [",
							"            {",
							"                \"id\": \"001@1.0.0\",",
							"                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",",
							"                \"cfg\": \"1.0.0\",",
							"                \"txTp\": \"pacs.002.001.12\",",
							"                \"channels\": [",
							"                    {",
							"                        \"id\": \"001@1.0.0\",",
							"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",",
							"                        \"cfg\": \"1.0.0\",",
							"                        \"typologies\": [",
							"                            {",
							"                                \"id\": \"028@1.0.0\",",
							"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",",
							"                                \"cfg\": \"1.0.0\",",
							"                                \"rules\": [",
							"                                    {",
							"                                        \"id\": \"027@1.0.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-027-rel-1-0-0\"",
							"                                    }",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        ]",
							"    }",
							"]",
							"",
							"pm.sendRequest({",
							"    url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"}, () => {",
							"    pm.sendRequest({",
							"        url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"            })",
							"        }",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"2021-10-07T09:25:31.000Z\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n                \"OrgnlEndToEndId\": \"2c516801007642dfb892944dde1cf845\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-channel-router-setup-processor/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "AM-770 - Scenario 1 Case(5,6)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"should send payload to the correct rule processors just once\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"027@1.0.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(true);",
							"    }",
							"})",
							"",
							"pm.test(\"should send the correct network sub-map\", function () {",
							"    pm.expect(jsonData.networkMap.cfg).to.eql(\"2.1.0\");",
							"})",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var arangoUrl = pm.environment.get(\"arangoUrl\");",
							"const networkMaps = [",
							"    {",
							"        \"key\": \"100\",",
							"        \"active\": false,",
							"        \"cfg\": \"1.0.0\",",
							"        \"messages\": [",
							"            {",
							"                \"id\": \"001@1.0\",",
							"                \"host\": \"http://gateway.openfaas:8080\",",
							"                \"cfg\": \"1.0\",",
							"                \"txTp\": \"pain.001.001.11\",",
							"                \"channels\": [",
							"                    {",
							"                        \"id\": \"001@1.0\",",
							"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",",
							"                        \"cfg\": \"1.0\",",
							"                        \"typologies\": [",
							"                            {",
							"                                \"id\": \"028@1.0\",",
							"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",",
							"                                \"cfg\": \"1.0\",",
							"                                \"rules\": [",
							"                                    {",
							"                                        \"id\": \"003@1.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-003-rel-1-1-0\",",
							"                                        \"cfg\": \"1.0\"",
							"                                    },",
							"                                    {",
							"                                        \"id\": \"028@1.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-028\",",
							"                                        \"cfg\": \"1.0\"",
							"                                    }",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        ]",
							"    },",
							"    {",
							"        \"key\": \"101\",",
							"        \"active\": true,",
							"        \"cfg\": \"2.1.0\",",
							"        \"messages\": [",
							"            {",
							"                \"id\": \"001@1.0.0\",",
							"                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",",
							"                \"cfg\": \"1.0.0\",",
							"                \"txTp\": \"pacs.002.001.12\",",
							"                \"channels\": [",
							"                    {",
							"                        \"id\": \"001@1.0.0\",",
							"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",",
							"                        \"cfg\": \"1.0.0\",",
							"                        \"typologies\": [",
							"                            {",
							"                                \"id\": \"028@1.0.0\",",
							"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",",
							"                                \"cfg\": \"1.0.0\",",
							"                                \"rules\": [",
							"                                    {",
							"                                        \"id\": \"027@1.0.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-027-rel-1-0-0\"",
							"                                    }",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        ]",
							"    }",
							"]",
							"",
							"pm.sendRequest({",
							"    url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"}, () => {",
							"    pm.sendRequest({",
							"        url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"            })",
							"        }",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"2021-10-07T09:25:31.000Z\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n                \"OrgnlEndToEndId\": \"2c516801007642dfb892944dde1cf845\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-channel-router-setup-processor/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "AM-770 - Scenario 1 Case(7,8)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arangoUrl = pm.environment.get(\"arangoUrl\");",
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"should send payload to the correct rule processors just once\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"027@1.0.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(true);",
							"    }",
							"})",
							"",
							"pm.test(\"should send the new version of the network sub-map\", function () {",
							"    pm.expect(jsonData.networkMap.cfg).to.eql('2.1.0');",
							"})",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var arangoUrl = pm.environment.get(\"arangoUrl\");",
							"const networkMaps = [",
							"    {",
							"        \"key\": \"100\",",
							"        \"active\": false,",
							"        \"cfg\": \"1.0.0\",",
							"        \"messages\": [",
							"            {",
							"                \"id\": \"001@1.0\",",
							"                \"host\": \"http://gateway.openfaas:8080\",",
							"                \"cfg\": \"1.0\",",
							"                \"txTp\": \"pain.001.001.11\",",
							"                \"channels\": [",
							"                    {",
							"                        \"id\": \"001@1.0\",",
							"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor\",",
							"                        \"cfg\": \"1.0\",",
							"                        \"typologies\": [",
							"                            {",
							"                                \"id\": \"028@1.0\",",
							"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor\",",
							"                                \"cfg\": \"1.0\",",
							"                                \"rules\": [",
							"                                    {",
							"                                        \"id\": \"003@1.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-003\",",
							"                                        \"cfg\": \"1.0\"",
							"                                    },",
							"                                    {",
							"                                        \"id\": \"028@1.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-028\",",
							"                                        \"cfg\": \"1.0\"",
							"                                    }",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        ]",
							"    },",
							"    {",
							"        \"key\": \"101\",",
							"        \"active\": true,",
							"        \"cfg\": \"2.1.0\",",
							"        \"messages\": [",
							"            {",
							"                \"id\": \"001@1.0.0\",",
							"                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",",
							"                \"cfg\": \"1.0.0\",",
							"                \"txTp\": \"pacs.002.001.12\",",
							"                \"channels\": [",
							"                    {",
							"                        \"id\": \"001@1.0.0\",",
							"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",",
							"                        \"cfg\": \"1.0.0\",",
							"                        \"typologies\": [",
							"                            {",
							"                                \"id\": \"028@1.0.0\",",
							"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",",
							"                                \"cfg\": \"1.0.0\",",
							"                                \"rules\": [",
							"                                    {",
							"                                        \"id\": \"027@1.0.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-027-rel-1-0-0\"",
							"                                    }",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        ]",
							"    }",
							"]",
							"",
							"pm.sendRequest({",
							"    url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration",
							"                    OPTIONS {waitForSync: true}`",
							"        })",
							"    }",
							"}, () => {",
							"    pm.sendRequest({",
							"        url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true, waitForSync: true }`",
							"            })",
							"        }",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"2021-10-07T09:25:31.000Z\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n                \"OrgnlEndToEndId\": \"2c516801007642dfb892944dde1cf845\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-channel-router-setup-processor/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "CRSP Pain001",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"should send payload to the correct rule processors just once\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"028@1.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(true);",
							"    }",
							"})",
							"",
							"pm.test(\"should send the correct network sub-map\", function () {",
							"    const networkMap = pm.environment.get(\"networkMapPain001\");",
							"    pm.expect(jsonData.networkMap).to.eql(JSON.parse(networkMap));",
							"",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var arangoUrl = pm.environment.get(\"arangoUrl\");",
							"const networkMaps = [",
							"    {",
							"        \"key\": \"50\",",
							"        \"active\": true,",
							"        \"cfg\": \"2.1.0\",",
							"        \"messages\": [{ \"id\": \"001@1.0\", \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\", \"cfg\": \"1.0\", \"txTp\": \"pain.001.001.11\", \"channels\": [{ \"id\": \"001@1.0\", \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\", \"cfg\": \"1.0\", \"typologies\": [{ \"id\": \"028@1.0\", \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\", \"cfg\": \"1.0\", \"rules\": [{ \"id\": \"028@1.0\", \"host\": \"http://gateway.openfaas:8080/function/off-rule-028\", \"cfg\": \"1.0\" }] }] }] }]",
							"    }",
							"]",
							"",
							"pm.sendRequest({",
							"    url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"}, () => {",
							"    pm.sendRequest({",
							"        url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"            })",
							"        }",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"TxTp\": \"pain.001.001.11\",\n    \"CstmrCdtTrfInitn\": {\n        \"GrpHdr\": {\n            \"MsgId\": \"ed3e34ce4ebf413ba8ef96d84ec9351e\",\n            \"CreDtTm\": \"2021-12-03T15:36:11.000Z\",\n            \"NbOfTxs\": 1,\n            \"InitgPty\": {\n                \"Nm\": \"April Blake Grant\",\n                \"Id\": {\n                    \"PrvtId\": {\n                        \"DtAndPlcOfBirth\": {\n                            \"BirthDt\": \"1968-02-01\",\n                            \"CityOfBirth\": \"Unknown\",\n                            \"CtryOfBirth\": \"ZZ\"\n                        },\n                        \"Othr\": {\n                            \"Id\": \"+27730975224\",\n                            \"SchmeNm\": {\n                                \"Prtry\": \"MSISDN\"\n                            }\n                        }\n                    }\n                },\n                \"CtctDtls\": {\n                    \"MobNb\": \"+27-730975224\"\n                }\n            }\n        },\n        \"PmtInf\": {\n            \"PmtInfId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n            \"PmtMtd\": \"TRA\",\n            \"ReqdAdvcTp\": {\n                \"DbtAdvc\": {\n                    \"Cd\": \"ADWD\",\n                    \"Prtry\": \"Advice with transaction details\"\n                }\n            },\n            \"ReqdExctnDt\": {\n                \"Dt\": \"2021-12-03\",\n                \"DtTm\": \"2021-12-03T15:36:11.000Z\"\n            },\n            \"Dbtr\": {\n                \"Nm\": \"April Blake Grant\",\n                \"Id\": {\n                    \"PrvtId\": {\n                        \"DtAndPlcOfBirth\": {\n                            \"BirthDt\": \"1968-02-01\",\n                            \"CityOfBirth\": \"Unknown\",\n                            \"CtryOfBirth\": \"ZZ\"\n                        },\n                        \"Othr\": {\n                            \"Id\": \"+27730975224\",\n                            \"SchmeNm\": {\n                                \"Prtry\": \"MSISDN\"\n                            }\n                        }\n                    }\n                },\n                \"CtctDtls\": {\n                    \"MobNb\": \"+27-730975224\"\n                }\n            },\n            \"DbtrAcct\": {\n                \"Id\": {\n                    \"Othr\": {\n                        \"Id\": \"e2fa05b6a56ceedb37581703b98590b44194a8c0d2799f4319ebbece5e20ecc1\",\n                        \"SchmeNm\": {\n                            \"Prtry\": \"PSEUDO\"\n                        }\n                    }\n                },\n                \"Nm\": \"April Grant\"\n            },\n            \"DbtrAgt\": {\n                \"FinInstnId\": {\n                    \"ClrSysMmbId\": {\n                        \"MmbId\": \"dfsp001\"\n                    }\n                }\n            },\n            \"CdtTrfTxInf\": {\n                \"PmtId\": {\n                    \"EndToEndId\": \"2c516801007642dfb892944dde1cf845\"\n                },\n                \"PmtTpInf\": {\n                    \"CtgyPurp\": {\n                        \"Prtry\": \"TRANSFER BLANK\"\n                    }\n                },\n                \"Amt\": {\n                    \"InstdAmt\": {\n                        \"Amt\": {\n                            \"Amt\": 31020.89,\n                            \"Ccy\": \"USD\"\n                        }\n                    },\n                    \"EqvtAmt\": {\n                        \"Amt\": {\n                            \"Amt\": 31020.89,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"CcyOfTrf\": \"USD\"\n                    }\n                },\n                \"ChrgBr\": \"DEBT\",\n                \"CdtrAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                },\n                \"Cdtr\": {\n                    \"Nm\": \"Felicia Easton Quill\",\n                    \"Id\": {\n                        \"PrvtId\": {\n                            \"DtAndPlcOfBirth\": {\n                                \"BirthDt\": \"1935-05-08\",\n                                \"CityOfBirth\": \"Unknown\",\n                                \"CtryOfBirth\": \"ZZ\"\n                            },\n                            \"Othr\": {\n                                \"Id\": \"+27707650428\",\n                                \"SchmeNm\": {\n                                    \"Prtry\": \"MSISDN\"\n                                }\n                            }\n                        }\n                    },\n                    \"CtctDtls\": {\n                        \"MobNb\": \"+27-707650428\"\n                    }\n                },\n                \"CdtrAcct\": {\n                    \"Id\": {\n                        \"Othr\": {\n                            \"Id\": \"efdafefdee55c7a1e5eba4ccc0f01639dc37a020241b20495378f5a1343985b4\",\n                            \"SchmeNm\": {\n                                \"Prtry\": \"PSEUDO\"\n                            }\n                        }\n                    },\n                    \"Nm\": \"Felicia Quill\"\n                },\n                \"Purp\": {\n                    \"Cd\": \"MP2P\"\n                },\n                \"RgltryRptg\": {\n                    \"Dtls\": {\n                        \"Tp\": \"BALANCE OF PAYMENTS\",\n                        \"Cd\": \"100\"\n                    }\n                },\n                \"RmtInf\": {\n                    \"Ustrd\": \"Payment of USD 30713.75 from April to Felicia\"\n                },\n                \"SplmtryData\": {\n                    \"Envlp\": {\n                        \"Doc\": {\n                            \"Dbtr\": {\n                                \"FrstNm\": \"April\",\n                                \"MddlNm\": \"Blake\",\n                                \"LastNm\": \"Grant\",\n                                \"MrchntClssfctnCd\": \"BLANK\"\n                            },\n                            \"Cdtr\": {\n                                \"FrstNm\": \"Felicia\",\n                                \"MddlNm\": \"Easton\",\n                                \"LastNm\": \"Quill\",\n                                \"MrchntClssfctnCd\": \"BLANK\"\n                            },\n                            \"DbtrFinSvcsPrvdrFees\": {\n                                \"Ccy\": \"USD\",\n                                \"Amt\": 307.14\n                            },\n                            \"Xprtn\": \"2021-11-30T10:38:56.000Z\"\n                        }\n                    }\n                }\n            }\n        },\n        \"SplmtryData\": {\n            \"Envlp\": {\n                \"Doc\": {\n                    \"InitgPty\": {\n                        \"InitrTp\": \"CONSUMER\",\n                        \"Glctn\": {\n                            \"Lat\": \"-3.1609\",\n                            \"Long\": \"38.3588\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-channel-router-setup-processor/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "CRSP Pain 013",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"should send payload to the correct rule processors just once\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"028@1.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(true);",
							"    }",
							"})",
							"",
							"pm.test(\"should respond with the correct networkMap\", function () {",
							"    const networkMap = pm.environment.get(\"networkMapPain013\");",
							"    pm.expect(jsonData.networkMap).to.eql(JSON.parse(networkMap));",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var arangoUrl = pm.environment.get(\"arangoUrl\");",
							"const networkMaps = [",
							"    {",
							"        \"key\": \"55\",",
							"        \"active\": true,",
							"        \"cfg\": \"2.1.1\",",
							"        \"messages\": [{ \"id\": \"002@1.0\", \"host\": \"http://gateway.openfaas:8080\", \"cfg\": \"1.0\", \"txTp\": \"pain.013.001.09\", \"channels\": [{ \"id\": \"001@1.0\", \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\", \"cfg\": \"1.0\", \"typologies\": [{ \"id\": \"028@1.0\", \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\", \"cfg\": \"1.0\", \"rules\": [{ \"id\": \"028@1.0\", \"host\": \"http://gateway.openfaas:8080/function/off-rule-028\", \"cfg\": \"1.0\" }] }, { \"id\": \"029@1.0\", \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\", \"cfg\": \"1.0\", \"rules\": [{ \"id\": \"028@1.0\", \"host\": \"http://gateway.openfaas:8080/function/off-rule-028\", \"cfg\": \"1.0\" }] }] }, { \"id\": \"002@1.0\", \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\", \"cfg\": \"1.0\", \"typologies\": [{ \"id\": \"030@1.0\", \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\", \"cfg\": \"1.0\", \"rules\": [{ \"id\": \"028@1.0\", \"host\": \"http://gateway.openfaas:8080/function/off-rule-028\", \"cfg\": \"1.0\" }] }, { \"id\": \"031@1.0\", \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\", \"cfg\": \"1.0\", \"rules\": [{ \"id\": \"028@1.0\", \"host\": \"http://gateway.openfaas:8080/function/off-rule-028\", \"cfg\": \"1.0\" }] }] }] }]",
							"    }",
							"]",
							"",
							"pm.sendRequest({",
							"    url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"}, () => {",
							"    pm.sendRequest({",
							"        url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"            })",
							"        }",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"TxTp\": \"pain.013.001.09\",\n    \"CstmrCdtTrfInitn\": {\n      \"GrpHdr\": {\n        \"MsgId\": \"2669e349-500d-44ba-9e27-7767a16608a0\",\n        \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\n        \"NbOfTxs\": 1,\n        \"InitgPty\": {\n          \"Nm\": \"Ivan Reese Russel-Klein\",\n          \"Id\": {\n            \"PrvtId\": {\n              \"DtAndPlcOfBirth\": {\n                \"BirthDt\": \"1967-11-23\",\n                \"CityOfBirth\": \"Unknown\",\n                \"CtryOfBirth\": \"ZZ\"\n              },\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            }\n          },\n          \"CtctDtls\": {\n            \"MobNb\": \"+27-783078685\"\n          }\n        }\n      },\n      \"PmtInf\": {\n        \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\n        \"PmtMtd\": \"TRA\",\n        \"ReqdAdvcTp\": {\n          \"DbtAdvc\": {\n            \"Cd\": \"ADWD\",\n            \"Prtry\": \"Advice with transaction details\"\n          }\n        },\n        \"ReqdExctnDt\": {\n          \"Dt\": \"2021-10-07\",\n          \"DtTm\": \"2021-10-07T09:25:31.000Z\"\n        },\n        \"Dbtr\": {\n          \"Nm\": \"Ivan Reese Russel-Klein\",\n          \"Id\": {\n            \"PrvtId\": {\n              \"DtAndPlcOfBirth\": {\n                \"BirthDt\": \"1957-10-05\",\n                \"CityOfBirth\": \"Unknown\",\n                \"CtryOfBirth\": \"ZZ\"\n              },\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            }\n          },\n          \"CtctDtls\": {\n            \"MobNb\": \"+27-783078685\"\n          }\n        },\n        \"DbtrAcct\": {\n          \"Id\": {\n            \"Othr\": {\n              \"Id\": \"+27783078685\",\n              \"SchmeNm\": {\n                \"Prtry\": \"PASSPORT\"\n              }\n            }\n          },\n          \"Nm\": \"Ivan Russel-Klein\"\n        },\n        \"DbtrAgt\": {\n          \"FinInstnId\": {\n            \"ClrSysMmbId\": {\n              \"MmbId\": \"dfsp001\"\n            }\n          }\n        },\n        \"CdtTrfTxInf\": {\n          \"PmtId\": {\n            \"EndToEndId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\"\n          },\n          \"PmtTpInf\": {\n            \"CtgyPurp\": {\n              \"Prtry\": \"TRANSFER\"\n            }\n          },\n          \"Amt\": {\n            \"InstdAmt\": {\n              \"Amt\": {\n                \"Amt\": \"50431891779910900\",\n                \"Ccy\": \"USD\"\n              }\n            },\n            \"EqvtAmt\": {\n              \"Amt\": {\n                \"Amt\": \"50431891779910900\",\n                \"Ccy\": \"USD\"\n              },\n              \"CcyOfTrf\": \"USD\"\n            }\n          },\n          \"ChrgBr\": \"DEBT\",\n          \"CdtrAgt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp002\"\n              }\n            }\n          },\n          \"Cdtr\": {\n            \"Nm\": \"April Sam Adamson\",\n            \"Id\": {\n              \"PrvtId\": {\n                \"DtAndPlcOfBirth\": {\n                  \"BirthDt\": \"1923-04-26\",\n                  \"CityOfBirth\": \"Unknown\",\n                  \"CtryOfBirth\": \"ZZ\"\n                },\n                \"Othr\": {\n                  \"Id\": \"+27782722305\",\n                  \"SchmeNm\": {\n                    \"Prtry\": \"MSISDN\"\n                  }\n                }\n              }\n            },\n            \"CtctDtls\": {\n              \"MobNb\": \"+27-782722305\"\n            }\n          },\n          \"CdtrAcct\": {\n            \"Id\": {\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            },\n            \"Nm\": \"April Adamson\"\n          },\n          \"Purp\": {\n            \"Cd\": \"MP2P\"\n          },\n          \"RgltryRptg\": {\n            \"Dtls\": {\n              \"Tp\": \"BALANCE OF PAYMENTS\",\n              \"Cd\": \"100\"\n            }\n          },\n          \"RmtInf\": {\n            \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\n          },\n          \"SplmtryData\": {\n            \"Envlp\": {\n              \"Doc\": {\n                \"Cdtr\": {\n                  \"FrstNm\": \"Ivan\",\n                  \"MddlNm\": \"Reese\",\n                  \"LastNm\": \"Russel-Klein\",\n                  \"MrchntClssfctnCd\": \"BLANK\"\n                },\n                \"Dbtr\": {\n                  \"FrstNm\": \"April\",\n                  \"MddlNm\": \"Sam\",\n                  \"LastNm\": \"Adamson\",\n                  \"MrchntClssfctnCd\": \"BLANK\"\n                },\n                \"DbtrFinSvcsPrvdrFees\": {\n                  \"Ccy\": \"USD\",\n                  \"Amt\": \"499325661187237\"\n                },\n                \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\n              }\n            }\n          }\n        }\n      },\n      \"SplmtryData\": {\n        \"Envlp\": {\n          \"Doc\": {\n            \"InitgPty\": {\n              \"InitrTp\": \"CONSUMER\",\n              \"Glctn\": {\n                \"Lat\": \"-3.1291\",\n                \"Long\": \"39.0006\"\n              }\n            }\n          }\n        }\n      }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-channel-router-setup-processor/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "CRSP Pacs 002",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"should send payload to the correct rule processors just once\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"027@1.0.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(true);",
							"    }",
							"})",
							"",
							"pm.test(\"should respond with the correct networkMap\", function () {",
							"    const networkMap = pm.environment.get(\"networkMapPacs002\");",
							"    pm.expect(jsonData.networkMap).to.eql(JSON.parse(networkMap));",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var arangoUrl = pm.environment.get(\"arangoUrl\");",
							"const networkMaps = [",
							"    {",
							"        \"key\": \"45\",",
							"        \"active\": true,",
							"        \"cfg\": \"2.0.0\",",
							"        \"messages\": [",
							"            {",
							"                \"id\": \"001@1.0.0\",",
							"                \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\",",
							"                \"cfg\": \"1.0.0\",",
							"                \"txTp\": \"pacs.002.001.12\",",
							"                \"channels\": [",
							"                    {",
							"                        \"id\": \"001@1.0.0\",",
							"                        \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\",",
							"                        \"cfg\": \"1.0.0\",",
							"                        \"typologies\": [",
							"                            {",
							"                                \"id\": \"028@1.0.0\",",
							"                                \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\",",
							"                                \"cfg\": \"1.0.0\",",
							"                                \"rules\": [",
							"                                    {",
							"                                        \"id\": \"027@1.0.0\",",
							"                                        \"host\": \"http://gateway.openfaas:8080/function/off-rule-027-rel-1-0-0\"",
							"                                    }",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        ]",
							"    }",
							"]",
							"",
							"pm.sendRequest({",
							"    url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"}, () => {",
							"    pm.sendRequest({",
							"        url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"            })",
							"        }",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"TxTp\": \"pacs.002.001.12\",\n        \"FIToFIPmtSts\": {\n            \"GrpHdr\": {\n                \"MsgId\": \"6b444365119746c5be7dfb5516ba67c4\",\n                \"CreDtTm\": \"2021-10-07T09:25:31.000Z\"\n            },\n            \"TxInfAndSts\": {\n                \"OrgnlInstrId\": \"5ab4fc7355de4ef8a75b78b00a681ed2\",\n                \"OrgnlEndToEndId\": \"2c516801007642dfb892944dde1cf845\",\n                \"TxSts\": \"ACCC\",\n                \"ChrgsInf\": [\n                    {\n                        \"Amt\": {\n                            \"Amt\": 307.14,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 153.57,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp001\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"Amt\": {\n                            \"Amt\": 30.71,\n                            \"Ccy\": \"USD\"\n                        },\n                        \"Agt\": {\n                            \"FinInstnId\": {\n                                \"ClrSysMmbId\": {\n                                    \"MmbId\": \"dfsp002\"\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"AccptncDtTm\": \"2021-12-03T15:36:16.000Z\",\n                \"InstgAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp001\"\n                        }\n                    }\n                },\n                \"InstdAgt\": {\n                    \"FinInstnId\": {\n                        \"ClrSysMmbId\": {\n                            \"MmbId\": \"dfsp002\"\n                        }\n                    }\n                }\n            }\n        }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-channel-router-setup-processor/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "CRSP Pacs 008",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"should send payload to the correct rule processors just once\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"018@1.0.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(true);",
							"    }",
							"})",
							"",
							"pm.test(\"should respond with the correct networkMap\", function () {",
							"    const networkMap = pm.environment.get(\"networkMapPacs008\");",
							"    pm.expect(jsonData.networkMap).to.eql(JSON.parse(networkMap));",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var arangoUrl = pm.environment.get(\"arangoUrl\");",
							"const networkMaps = [",
							"    {",
							"        \"key\": \"60\",",
							"        \"active\": true,",
							"        \"cfg\": \"3.0.0\",",
							"        \"messages\": [{ \"id\": \"005@1.0.0\", \"host\": \"http://gateway.openfaas:8080/function/off-transaction-aggregation-decisioning-processor-rel-1-0-0\", \"cfg\": \"1.0.0\", \"txTp\": \"pacs.008.001.10\", \"channels\": [{ \"id\": \"001@1.0.0\", \"host\": \"http://gateway.openfaas:8080/function/off-channel-aggregation-decisioning-processor-rel-1-0-0\", \"cfg\": \"1.0.0\", \"typologies\": [{ \"id\": \"028@1.0.0\", \"host\": \"http://gateway.openfaas:8080/function/off-typology-processor-rel-1-0-0\", \"cfg\": \"1.0.0\", \"rules\": [{ \"id\": \"018@1.0.0\", \"host\": \"http://gateway.openfaas:8080/function/off-rule-018\", \"cfg\": \"1.0.0\" }] }] }] }]",
							"    }",
							"]",
							"",
							"pm.sendRequest({",
							"    url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"    method: 'POST',",
							"    header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            query: `FOR doc IN networkConfiguration",
							"                    FILTER doc.active == true",
							"                    UPDATE doc WITH { active: false } IN networkConfiguration`",
							"        })",
							"    }",
							"}, () => {",
							"    pm.sendRequest({",
							"        url: `${arangoUrl}_db/networkmap/_api/cursor?waitForSync=true`,",
							"        method: 'POST',",
							"        header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                query: `FOR networkmap IN ${JSON.stringify(networkMaps)}",
							"                    INSERT {_id: networkmap._id, _key: networkmap.key, active: networkmap.active, cfg: networkmap.cfg, messages: networkmap.messages} INTO networkConfiguration",
							"                    OPTIONS { overwrite: true }`",
							"            })",
							"        }",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"TxTp\": \"pacs.008.001.10\",\n    \"CstmrCdtTrfInitn\": {\n      \"GrpHdr\": {\n        \"MsgId\": \"2669e349-500d-44ba-9e27-7767a16608a0\",\n        \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\n        \"NbOfTxs\": 1,\n        \"InitgPty\": {\n          \"Nm\": \"Ivan Reese Russel-Klein\",\n          \"Id\": {\n            \"PrvtId\": {\n              \"DtAndPlcOfBirth\": {\n                \"BirthDt\": \"1967-11-23\",\n                \"CityOfBirth\": \"Unknown\",\n                \"CtryOfBirth\": \"ZZ\"\n              },\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            }\n          },\n          \"CtctDtls\": {\n            \"MobNb\": \"+27-783078685\"\n          }\n        }\n      },\n      \"PmtInf\": {\n        \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\n        \"PmtMtd\": \"TRA\",\n        \"ReqdAdvcTp\": {\n          \"DbtAdvc\": {\n            \"Cd\": \"ADWD\",\n            \"Prtry\": \"Advice with transaction details\"\n          }\n        },\n        \"ReqdExctnDt\": {\n          \"Dt\": \"2021-10-07\",\n          \"DtTm\": \"2021-10-07T09:25:31.000Z\"\n        },\n        \"Dbtr\": {\n          \"Nm\": \"Ivan Reese Russel-Klein\",\n          \"Id\": {\n            \"PrvtId\": {\n              \"DtAndPlcOfBirth\": {\n                \"BirthDt\": \"1957-10-05\",\n                \"CityOfBirth\": \"Unknown\",\n                \"CtryOfBirth\": \"ZZ\"\n              },\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            }\n          },\n          \"CtctDtls\": {\n            \"MobNb\": \"+27-783078685\"\n          }\n        },\n        \"DbtrAcct\": {\n          \"Id\": {\n            \"Othr\": {\n              \"Id\": \"+27783078685\",\n              \"SchmeNm\": {\n                \"Prtry\": \"PASSPORT\"\n              }\n            }\n          },\n          \"Nm\": \"Ivan Russel-Klein\"\n        },\n        \"DbtrAgt\": {\n          \"FinInstnId\": {\n            \"ClrSysMmbId\": {\n              \"MmbId\": \"dfsp001\"\n            }\n          }\n        },\n        \"CdtTrfTxInf\": {\n          \"PmtId\": {\n            \"EndToEndId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\"\n          },\n          \"PmtTpInf\": {\n            \"CtgyPurp\": {\n              \"Prtry\": \"TRANSFER\"\n            }\n          },\n          \"Amt\": {\n            \"InstdAmt\": {\n              \"Amt\": {\n                \"Amt\": \"50431891779910900\",\n                \"Ccy\": \"USD\"\n              }\n            },\n            \"EqvtAmt\": {\n              \"Amt\": {\n                \"Amt\": \"50431891779910900\",\n                \"Ccy\": \"USD\"\n              },\n              \"CcyOfTrf\": \"USD\"\n            }\n          },\n          \"ChrgBr\": \"DEBT\",\n          \"CdtrAgt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp002\"\n              }\n            }\n          },\n          \"Cdtr\": {\n            \"Nm\": \"April Sam Adamson\",\n            \"Id\": {\n              \"PrvtId\": {\n                \"DtAndPlcOfBirth\": {\n                  \"BirthDt\": \"1923-04-26\",\n                  \"CityOfBirth\": \"Unknown\",\n                  \"CtryOfBirth\": \"ZZ\"\n                },\n                \"Othr\": {\n                  \"Id\": \"+27782722305\",\n                  \"SchmeNm\": {\n                    \"Prtry\": \"MSISDN\"\n                  }\n                }\n              }\n            },\n            \"CtctDtls\": {\n              \"MobNb\": \"+27-782722305\"\n            }\n          },\n          \"CdtrAcct\": {\n            \"Id\": {\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            },\n            \"Nm\": \"April Adamson\"\n          },\n          \"Purp\": {\n            \"Cd\": \"MP2P\"\n          },\n          \"RgltryRptg\": {\n            \"Dtls\": {\n              \"Tp\": \"BALANCE OF PAYMENTS\",\n              \"Cd\": \"100\"\n            }\n          },\n          \"RmtInf\": {\n            \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\n          },\n          \"SplmtryData\": {\n            \"Envlp\": {\n              \"Doc\": {\n                \"Cdtr\": {\n                  \"FrstNm\": \"Ivan\",\n                  \"MddlNm\": \"Reese\",\n                  \"LastNm\": \"Russel-Klein\",\n                  \"MrchntClssfctnCd\": \"BLANK\"\n                },\n                \"Dbtr\": {\n                  \"FrstNm\": \"April\",\n                  \"MddlNm\": \"Sam\",\n                  \"LastNm\": \"Adamson\",\n                  \"MrchntClssfctnCd\": \"BLANK\"\n                },\n                \"DbtrFinSvcsPrvdrFees\": {\n                  \"Ccy\": \"USD\",\n                  \"Amt\": \"499325661187237\"\n                },\n                \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\n              }\n            }\n          }\n        }\n      },\n      \"SplmtryData\": {\n        \"Envlp\": {\n          \"Doc\": {\n            \"InitgPty\": {\n              \"InitrTp\": \"CONSUMER\",\n              \"Glctn\": {\n                \"Lat\": \"-3.1291\",\n                \"Long\": \"39.0006\"\n              }\n            }\n          }\n        }\n      }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-channel-router-setup-processor/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "CRSP Unknown Transaction type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var req = JSON.parse(request.data);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"should have equal incoming and outgoing transaction json\", function () {",
							"    pm.expect(jsonData.transaction).to.eql(req);",
							"});",
							"",
							"pm.test(\"Message not defined for routing\", function () {",
							"    var resultsRequiredToBeSend = [",
							"        \"018@1.0.0\"",
							"    ];",
							"    var rulesSentTo = jsonData.rulesSentTo;",
							"    const rulesNotSentTo = jsonData.failedToSend",
							"    const allRules = [...rulesSentTo, ...rulesNotSentTo]",
							"    for (let i = 0; i < resultsRequiredToBeSend.length; i++) {",
							"        var checkIfRuleIsSend = (allRules.indexOf(resultsRequiredToBeSend[i]) > -1);",
							"        console.log(resultsRequiredToBeSend[i] + \" Send was \" + checkIfRuleIsSend);",
							"        pm.expect(checkIfRuleIsSend).to.eql(false);",
							"    }",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"TxTp\": \"blah.001.001.01\",\n    \"CstmrCdtTrfInitn\": {\n      \"GrpHdr\": {\n        \"MsgId\": \"2669e349-500d-44ba-9e27-7767a16608a0\",\n        \"CreDtTm\": \"2021-10-07T09:25:31.000Z\",\n        \"NbOfTxs\": 1,\n        \"InitgPty\": {\n          \"Nm\": \"Ivan Reese Russel-Klein\",\n          \"Id\": {\n            \"PrvtId\": {\n              \"DtAndPlcOfBirth\": {\n                \"BirthDt\": \"1967-11-23\",\n                \"CityOfBirth\": \"Unknown\",\n                \"CtryOfBirth\": \"ZZ\"\n              },\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            }\n          },\n          \"CtctDtls\": {\n            \"MobNb\": \"+27-783078685\"\n          }\n        }\n      },\n      \"PmtInf\": {\n        \"PmtInfId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\n        \"PmtMtd\": \"TRA\",\n        \"ReqdAdvcTp\": {\n          \"DbtAdvc\": {\n            \"Cd\": \"ADWD\",\n            \"Prtry\": \"Advice with transaction details\"\n          }\n        },\n        \"ReqdExctnDt\": {\n          \"Dt\": \"2021-10-07\",\n          \"DtTm\": \"2021-10-07T09:25:31.000Z\"\n        },\n        \"Dbtr\": {\n          \"Nm\": \"Ivan Reese Russel-Klein\",\n          \"Id\": {\n            \"PrvtId\": {\n              \"DtAndPlcOfBirth\": {\n                \"BirthDt\": \"1957-10-05\",\n                \"CityOfBirth\": \"Unknown\",\n                \"CtryOfBirth\": \"ZZ\"\n              },\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            }\n          },\n          \"CtctDtls\": {\n            \"MobNb\": \"+27-783078685\"\n          }\n        },\n        \"DbtrAcct\": {\n          \"Id\": {\n            \"Othr\": {\n              \"Id\": \"+27783078685\",\n              \"SchmeNm\": {\n                \"Prtry\": \"PASSPORT\"\n              }\n            }\n          },\n          \"Nm\": \"Ivan Russel-Klein\"\n        },\n        \"DbtrAgt\": {\n          \"FinInstnId\": {\n            \"ClrSysMmbId\": {\n              \"MmbId\": \"dfsp001\"\n            }\n          }\n        },\n        \"CdtTrfTxInf\": {\n          \"PmtId\": {\n            \"EndToEndId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\"\n          },\n          \"PmtTpInf\": {\n            \"CtgyPurp\": {\n              \"Prtry\": \"TRANSFER\"\n            }\n          },\n          \"Amt\": {\n            \"InstdAmt\": {\n              \"Amt\": {\n                \"Amt\": \"50431891779910900\",\n                \"Ccy\": \"USD\"\n              }\n            },\n            \"EqvtAmt\": {\n              \"Amt\": {\n                \"Amt\": \"50431891779910900\",\n                \"Ccy\": \"USD\"\n              },\n              \"CcyOfTrf\": \"USD\"\n            }\n          },\n          \"ChrgBr\": \"DEBT\",\n          \"CdtrAgt\": {\n            \"FinInstnId\": {\n              \"ClrSysMmbId\": {\n                \"MmbId\": \"dfsp002\"\n              }\n            }\n          },\n          \"Cdtr\": {\n            \"Nm\": \"April Sam Adamson\",\n            \"Id\": {\n              \"PrvtId\": {\n                \"DtAndPlcOfBirth\": {\n                  \"BirthDt\": \"1923-04-26\",\n                  \"CityOfBirth\": \"Unknown\",\n                  \"CtryOfBirth\": \"ZZ\"\n                },\n                \"Othr\": {\n                  \"Id\": \"+27782722305\",\n                  \"SchmeNm\": {\n                    \"Prtry\": \"MSISDN\"\n                  }\n                }\n              }\n            },\n            \"CtctDtls\": {\n              \"MobNb\": \"+27-782722305\"\n            }\n          },\n          \"CdtrAcct\": {\n            \"Id\": {\n              \"Othr\": {\n                \"Id\": \"+27783078685\",\n                \"SchmeNm\": {\n                  \"Prtry\": \"MSISDN\"\n                }\n              }\n            },\n            \"Nm\": \"April Adamson\"\n          },\n          \"Purp\": {\n            \"Cd\": \"MP2P\"\n          },\n          \"RgltryRptg\": {\n            \"Dtls\": {\n              \"Tp\": \"BALANCE OF PAYMENTS\",\n              \"Cd\": \"100\"\n            }\n          },\n          \"RmtInf\": {\n            \"Ustrd\": \"Payment of USD 49932566118723700.89 from Ivan to April\"\n          },\n          \"SplmtryData\": {\n            \"Envlp\": {\n              \"Doc\": {\n                \"Cdtr\": {\n                  \"FrstNm\": \"Ivan\",\n                  \"MddlNm\": \"Reese\",\n                  \"LastNm\": \"Russel-Klein\",\n                  \"MrchntClssfctnCd\": \"BLANK\"\n                },\n                \"Dbtr\": {\n                  \"FrstNm\": \"April\",\n                  \"MddlNm\": \"Sam\",\n                  \"LastNm\": \"Adamson\",\n                  \"MrchntClssfctnCd\": \"BLANK\"\n                },\n                \"DbtrFinSvcsPrvdrFees\": {\n                  \"Ccy\": \"USD\",\n                  \"Amt\": \"499325661187237\"\n                },\n                \"Xprtn\": \"2021-10-07T09:30:31.000Z\"\n              }\n            }\n          }\n        }\n      },\n      \"SplmtryData\": {\n        \"Envlp\": {\n          \"Doc\": {\n            \"InitgPty\": {\n              \"InitrTp\": \"CONSUMER\",\n              \"Glctn\": {\n                \"Lat\": \"-3.1291\",\n                \"Long\": \"39.0006\"\n              }\n            }\n          }\n        }\n      }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ofUrl}}function/off-channel-router-setup-processor/execute",
					"host": [
						"{{ofUrl}}function"
					],
					"path": [
						"off-channel-router-setup-processor",
						"execute"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "transactionID",
			"value": ""
		},
		{
			"key": "EndToEndId",
			"value": ""
		}
	]
}